#!/usr/bin/env bash
set -euo pipefail

# Este script constr√≥i o projeto para produ√ß√£o e o serve localmente para teste.

# 1. Executa o build de produ√ß√£o
echo "üì¶  Gerando build de produ√ß√£o (npm run build)..."
npm run build

# 2. Prepara um diret√≥rio tempor√°rio para simular a base '/algi/'
echo "üìÅ Preparando diret√≥rio de teste..."
TEMP_DIR=$(mktemp -d)
mkdir -p "$TEMP_DIR/algi"
# Move o conte√∫do de 'dist' para 'TEMP_DIR/algi'
# O 'shopt -s dotglob' garante que arquivos ocultos (como .vite) tamb√©m sejam movidos.
shopt -s dotglob
mv dist/* "$TEMP_DIR/algi/"
shopt -u dotglob

# Garante que o diret√≥rio tempor√°rio seja removido ao sair
trap 'rm -rf "$TEMP_DIR"' EXIT

# 3. Navega para o diret√≥rio tempor√°rio
cd "$TEMP_DIR"

# 4. Inicia um servidor web local
PORT=8081
echo "üöÄ Iniciando servidor local em http://localhost:$PORT/algi/"
echo "   Acesse o endere√ßo acima. Pressione Ctrl+C para parar."

# Tenta abrir o navegador na URL correta
(xdg-open http://localhost:$PORT/algi/ || echo "   Abra manualmente: http://localhost:$PORT/algi/") &

# Inicia o servidor Python. Se n√£o estiver instalado, sugere alternativas.
if ! command -v python3 &> /dev/null
then
    echo "‚ö†Ô∏è  Python 3 n√£o encontrado. Por favor, inicie um servidor na pasta '$TEMP_DIR'."
    echo "   Exemplo com npx: npx http-server"
    exit 1
fi
python3 -m http.server $PORT

