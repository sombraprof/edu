{
  "formatVersion": "md3.lesson.v1",
  "id": "lesson-37",
  "title": "Busca e Atualização — Estoque TechParts",
  "summary": "Refina o CRUD do estoque TechParts com buscas flexíveis, atualizações de preço e controle de auditoria.",
  "description": "Aprofunda operações de busca, atualização e remoção no vetor de produtos TechParts garantindo integridade e rastreabilidade.",
  "objective": "Desenvolver habilidades para localizar, atualizar e remover produtos no vetor de estoque TechParts garantindo integridade dos dados e histórico.",
  "objectives": [
    "Implementar buscas lineares e por chave composta em produtos do estoque.",
    "Atualizar campos selecionados (preço, estoque mínimo, status) mantendo histórico.",
    "Realizar remoção lógica e física comparando impactos no relatório da TechParts."
  ],
  "competencies": ["05", "12"],
  "skills": [
    "Implementar buscas flexíveis com filtros por SKU, categoria e status de reposição.",
    "Aplicar auditoria registrando histórico de alterações, inclusive ajustes de preço.",
    "Facilitar revisão coletiva alinhando critérios de atualização, rollback e políticas da TechParts."
  ],
  "outcomes": [
    "Disponibiliza módulo que localiza e atualiza produtos com base em múltiplos campos.",
    "Entrega log de auditoria descrevendo cada alteração e testes associados.",
    "Coordena reunião de alinhamento documentando decisões sobre políticas de atualização do estoque."
  ],
  "prerequisites": [
    "Vetores de structs com ordenação básica (Aula 36).",
    "Entendimento de CRUD sequencial."
  ],
  "tags": ["structs", "crud", "revisao", "estoque"],
  "duration": 100,
  "modality": "in-person",
  "resources": [
    {
      "label": "Moodle — AVA (Unichristus)",
      "type": "plataforma",
      "url": "https://ava.unichristus.edu.br/"
    }
  ],
  "bibliography": [
    "FORBELLONE, A. L. V.; EBERSPÄCHER, H. F. Lógica de Programação. 3. ed. Pearson, 2020. Cap. 8, Registros e arquivos sequenciais.",
    "MANZANO, J. A. N. G.; OLIVEIRA, J. F. Algoritmos – Lógica para Desenvolvimento de Programação de Computadores. 28. ed. Érica, 2019. Cap. 12, Vetores de registros.",
    "BACKES, A. Linguagem C: Completa e Descomplicada. 2. ed. Elsevier, 2019. Cap. 12, Structs e manipulação de coleções.",
    "SANTOS, R. Introdução à Programação em C. Bookman, 2021. Cap. 11, Boas práticas de atualização e auditoria.",
    "ASCENCIO, A. F. G.; CAMPOS, E. A. V. Fundamentos da Programação de Computadores. 3. ed. Pearson, 2012. Cap. 10, Registros, arquivos e estudos de caso de atendimento."
  ],
  "assessment": {
    "type": "prática",
    "description": "Prática orientada para fortalecer os conceitos trabalhados em aula. Registre suas soluções e dúvidas para acompanhamento posterior.",
    "rubric": "Pensamento crítico (40%): define critérios de busca e atualização inspirados em Forbellone & Eberspächer (Cap. 8) e Manzano & Oliveira (Cap. 12). Confiabilidade de software (35%): registra logs e valida integraidade conforme Backes (Cap. 12) e Santos (Cap. 11). Comunicação técnica (25%): documenta histórico e decisões seguindo o formato de casos apresentado por Ascencio & Campos (Cap. 10)."
  },
  "content": [
    {
      "type": "contentBlock",
      "title": "Atividade em sala",
      "content": [
        {
          "type": "paragraph",
          "text": "Em duplas ou trios, finalize o módulo de estoque TechParts com as buscas e atualizações abaixo."
        },
        {
          "type": "orderedList",
          "items": [
            {
              "title": "Questão teórica — Políticas de atualização",
              "text": "Explique como chaves compostas (SKU + lote) evitam inconsistências no estoque TechParts e como registrar histórico de alterações."
            },
            {
              "title": "Questão prática — Atualização guiada",
              "text": "Implemente uma função que atualiza preço e estoque mínimo de um produto encontrado por SKU, registrando o log correspondente."
            }
          ]
        }
      ]
    },
    {
      "type": "videos",
      "title": "Vídeos de apoio",
      "videos": [
        {
          "title": "Linguagem C - Aula 6.1 - Domine vetores (arrays) em linguagem C (2022)",
          "src": "https://www.youtube.com/embed/5fSf9xSJK7c"
        },
        {
          "title": "Conditional Structures ✏️ | IF ELSE | Introduction to Algorithms and Programming #7",
          "src": "https://www.youtube.com/embed/5m9xSRVfEYM"
        }
      ]
    },
    {
      "type": "callout",
      "variant": "info",
      "title": "Warm-up (pré-aula)",
      "content": [
        {
          "type": "paragraph",
          "text": "Revise o relatório da Aula 36 e identifique produtos que exigem atualização imediata (preço ou estoque mínimo)."
        },
        {
          "type": "list",
          "items": [
            {
              "text": "Liste os campos que precisarão de validação cruzada antes da atualização (ex.: SKU, lote, fornecedor)."
            },
            {
              "text": "Sincronize o log de auditoria iniciado na Aula 36 para continuar registrando alterações."
            }
          ]
        }
      ]
    },
    {
      "type": "lessonPlan",
      "title": "Roteiro detalhado",
      "cards": [
        {
          "icon": "clock",
          "title": "Kick-off",
          "content": "Kick-off: revisar métricas da Aula 36 e mapear necessidades de atualização (10 min)."
        },
        {
          "icon": "target",
          "title": "Estratégias de busca",
          "content": "Explorar estratégias de busca (linear, sentinela, filtros compostos) para localizar produtos (30 min)."
        },
        {
          "icon": "code",
          "title": "Atualizações seguras",
          "content": "Atualizar campos críticos (preço, estoque mínimo) com validações e logs (30 min)."
        },
        {
          "icon": "tasks",
          "title": "Remoções",
          "content": "Comparar remoção lógica e física simulando impactos no relatório TechParts (25 min)."
        },
        {
          "icon": "check-circle",
          "title": "Debriefing",
          "content": "Debriefing: consolidar plano de monitoramento contínuo e checklist de auditoria (20 min)."
        }
      ]
    },
    {
      "type": "promptTip",
      "title": "Prompt para planejar buscas e atualizações do estoque",
      "description": "Use com o assistente para organizar seus estudos, revisar conteúdos e praticar com exercícios.",
      "audience": "estudantes de Algoritmos I finalizando módulo de structs",
      "prompt": "Você é estudante de Algoritmos I responsável por finalizar o módulo de estoque da TechParts com buscas flexíveis, atualizações e auditoria. Contexto da aula: Refina o CRUD em memória adicionando buscas flexíveis, atualização de campos e estratégias de auditoria. Objetivo central: Desenvolver habilidades para localizar, atualizar e remover produtos no vetor de structs garantindo integridade. Monte um plano de estudo com revisão teórica, prática guiada e autoavaliação incluindo exercícios em C, registros de auditoria e perguntas para validação de políticas.",
      "tags": ["algoritmos", "crud", "structs", "estoque"],
      "tips": [
        "Peça ao assistente exemplos de logs de auditoria detalhados para atualizações de estoque.",
        "Solicite checklists para testar buscas com múltiplos filtros (SKU, categoria, status).",
        "Peça sugestões de perguntas para a reunião de alinhamento com a gerência TechParts.",
        "Peça estratégias para organizar rollback e versionamento das alterações."
      ]
    },
    {
      "type": "lessonPlan",
      "title": "Plano de voo (1h40)",
      "cards": [
        {
          "icon": "check-circle",
          "title": "(12 min) Estudo de caso",
          "content": "(12 min) Estudo de caso — produtos com reajuste urgente."
        },
        {
          "icon": "check-circle",
          "title": "(20 min) Live coding",
          "content": "(20 min) Live coding — busca por SKU retornando ponteiro para Produto."
        },
        {
          "icon": "check-circle",
          "title": "(24 min) Oficina",
          "content": "(24 min) Oficina — atualização de preço/estoque mínimo com logs detalhados."
        },
        {
          "icon": "check-circle",
          "title": "(20 min) Laboratório",
          "content": "(20 min) Laboratório — remoção lógica, compactação e relatório automático do estoque."
        },
        {
          "icon": "check-circle",
          "title": "16 min",
          "content": "16 min — Testes cruzados entre squads avaliando consistência das operações."
        },
        {
          "icon": "check-circle",
          "title": "8 min",
          "content": "8 min — Reflexão escrita sobre integridade, auditoria e próximos passos."
        }
      ]
    },
    {
      "type": "contentBlock",
      "title": "Boas práticas para atualização e busca",
      "content": [
        {
          "type": "paragraph",
          "text": "Forbellone & Eberspächer (Cap. 8) e Manzano & Oliveira (Cap. 12) orientam a documentar cada etapa de busca, atualização e remoção para preservar a rastreabilidade dos atendimentos SEBRAE. Utilize o capítulo 11 de Santos para validar campos sensíveis antes de salvar."
        },
        {
          "type": "unorderedList",
          "items": [
            {
              "text": "Implemente busca por múltiplos critérios (id, setor, faixa de faturamento) utilizando filtros compostos como sugerido por Manzano & Oliveira (Cap. 12)."
            },
            {
              "text": "Mantenha log textual das alterações relevantes para auditoria seguindo os exemplos de Backes (Cap. 12) e Santos (Cap. 11)."
            },
            {
              "text": "Crie testes unitários simples para funções de atualização e remoção, documentando entradas e saídas no formato defendido por Ascencio & Campos (Cap. 10)."
            }
          ]
        },
        {
          "type": "paragraph",
          "text": "Relacione cada decisão a uma evidência na planilha de logs do estudo de caso para demonstrar aderência às boas práticas de governança."
        }
      ]
    },
    {
      "type": "contentBlock",
      "title": "Padrões de retorno para operações CRUD",
      "content": [
        {
          "type": "unorderedList",
          "items": [
            {
              "text": "Operação: create | Retorno sugerido: int (novo tamanho) | Descrição: Incrementa contador de produtos e retorna total. | Quando aplicar: Ao inserir novo SKU no fim do vetor."
            },
            {
              "text": "Operação: read | Retorno sugerido: int (índice) ou ponteiro | Descrição: Localiza produto e permite inspeção. | Quando aplicar: Busca por SKU ou categoria."
            },
            {
              "text": "Operação: update | Retorno sugerido: bool | Descrição: Indica sucesso/falha após validar preço e estoque mínimo. | Quando aplicar: Ajuste de políticas de reposição."
            },
            {
              "text": "Operação: delete | Retorno sugerido: bool | Descrição: Retorna sucesso após compactação do vetor. | Quando aplicar: Remover SKU descontinuado."
            },
            {
              "text": "Operação: auditLog | Retorno sugerido: void | Descrição: Gera linha de log com contexto da alteração (SKU, campo, usuário). | Quando aplicar: Após atualizações críticas."
            }
          ]
        }
      ]
    },
    {
      "type": "callout",
      "variant": "good-practice",
      "title": "Estudo de caso: Auditoria TechParts",
      "content": [
        {
          "type": "paragraph",
          "text": "Use o dataset do estoque TechParts e a planilha de logs para simular auditoria de alterações. Forbellone & Eberspächer (Cap. 8) recomendam registrar motivo de cada alteração antes de persistir os dados."
        },
        {
          "type": "list",
          "items": [
            {
              "text": "Implemente atualizações condicionais com validações de domínio inspiradas em Santos (Cap. 11) para preços e estoques."
            },
            {
              "text": "Gere logs estruturados destacando SKU, campo alterado e responsável conforme Backes (Cap. 12)."
            },
            {
              "text": "Explique na retro como os indicadores de reposição se conectam ao modelo de Ascencio & Campos (Cap. 10)."
            }
          ]
        }
      ]
    },
    {
      "type": "contentBlock",
      "title": "Materiais para estações e slides",
      "content": [
        {
          "type": "unorderedList",
          "items": [
            {
              "text": "Cartaz Estação Auditoria TechParts — /courses/algi/estacao-estoque-auditoria.md"
            },
            {
              "text": "Diagrama de memória — vetor pós-atualização — /courses/algi/memory-diagrama-estoque.md"
            }
          ]
        }
      ]
    },
    {
      "type": "callout",
      "variant": "info",
      "title": "Checklist de testes",
      "content": [
        {
          "type": "list",
          "items": [
            "Busca por SKU inexistente retorna NULL/índice -1?",
            "Atualização rejeita valores negativos e registra log?",
            "Remoção mantém coleção ordenada e atualiza contador de estoque?"
          ]
        }
      ]
    },
    {
      "type": "callout",
      "variant": "warning",
      "title": "TED pós-aula",
      "content": [
        {
          "type": "paragraph",
          "text": "Finalize o módulo de estoque entregando a narrativa textual exigida pela gerência TechParts."
        },
        {
          "type": "list",
          "items": [
            {
              "text": "Elabore relatório (3-4 páginas) contendo logs de atualização, políticas adotadas (preço, estoque mínimo) e próximos passos para automação."
            },
            {
              "text": "Liste dúvidas ou riscos pendentes e indique como serão acompanhados no pós-aula."
            }
          ]
        }
      ]
    },
    {
      "type": "tabs",
      "title": "Atualização de produto",
      "tabs": [
        {
          "label": "Buscar",
          "code": "int idx = buscarProdutoPorSku(estoque, total, sku);",
          "language": "c"
        },
        {
          "label": "Atualizar",
          "code": "if (idx >= 0) {\n  estoque[idx].preco += ajuste;\n  registrarLog(estoque[idx], \"preco\");\n}",
          "language": "c"
        }
      ]
    },
    {
      "type": "callout",
      "variant": "academic",
      "title": "Leitura recomendada",
      "content": [
        {
          "type": "list",
          "items": [
            "FORBELLONE, A. L. V.; EBERSPÄCHER, H. F. Algoritmos: Lógica para Desenvolvimento de Programas. Prentice Hall.",
            "MANZANO, J. A. N. G.; OLIVEIRA, J. F. Algoritmos: lógica para desenvolvimento de programação. Érica.",
            "BACKES, A. Linguagem C: completa e descomplicada. Elsevier."
          ]
        }
      ]
    },
    {
      "type": "callout",
      "variant": "info",
      "title": "Casos de teste sugeridos",
      "content": [
        {
          "type": "code",
          "code": "# Busca/atualização\nSKU=5001 atualiza preço +10% e estoque mínimo 20 -> verificar log e valores.",
          "language": "plaintext"
        }
      ]
    },
    {
      "type": "callout",
      "variant": "warning",
      "title": "Erros comuns e refatorações",
      "content": [
        {
          "type": "list",
          "items": [
            "Leia o enunciado e valide entradas antes de processar.",
            "Inicialize variáveis; evite estados indefinidos."
          ]
        },
        {
          "type": "paragraph",
          "text": "<strong>Anti-exemplo</strong>"
        },
        {
          "type": "code",
          "code": "clientes[idx].saldo += valor; // sem verificar idx",
          "language": "c"
        },
        {
          "type": "paragraph",
          "text": "<strong>Refatorado</strong>"
        },
        {
          "type": "code",
          "code": "if (idx>=0) clientes[idx].saldo += valor; // validação",
          "language": "c"
        }
      ]
    },
    {
      "type": "callout",
      "variant": "task",
      "title": "Check-out (fechamento rápido)",
      "content": [
        {
          "type": "list",
          "items": ["Registre 1 aprendizado e 1 dúvida.", "Entregue no AVA (campo de texto)."]
        }
      ]
    },
    {
      "type": "callout",
      "variant": "info",
      "title": "Gerador de casos de teste (C)",
      "content": [
        {
          "type": "code",
          "language": "c",
          "code": "#include <stdio.h>\n#include <stdlib.h>\n#include <time.h>\n\ntypedef struct {\n  int id;\n  int pressao;\n  int ativo;\n} Paciente;\n\nint buscarPaciente(Paciente vetor[], int tamanho, int id) {\n  for (int i = 0; i < tamanho; ++i) {\n    if (vetor[i].id == id) {\n      return i;\n    }\n  }\n  return -1;\n}\n\nint main(void) {\n  srand((unsigned)time(NULL));\n\n  int tamanho = 6;\n  Paciente pacientes[6];\n\n  for (int i = 0; i < tamanho; ++i) {\n    pacientes[i].id = rand() % 900 + 100;\n    pacientes[i].pressao = rand() % 61 + 90;\n    pacientes[i].ativo = 1;\n  }\n\n  int alvo = pacientes[rand() % tamanho].id;\n\n  printf(\"Pacientes cadastrados:\\n\");\n  for (int i = 0; i < tamanho; ++i) {\n    printf(\"id=%d pressao=%d\\n\", pacientes[i].id, pacientes[i].pressao);\n  }\n\n  int posicao = buscarPaciente(pacientes, tamanho, alvo);\n\n  printf(\"\\nEntrada (id_busca): %d\\nSaida esperada: indice=%d nova_pressao=%d\\n\", alvo, posicao, pacientes[posicao].pressao + 5);\n  printf(\"Simule a atualizacao somando 5 mmHg ao registro encontrado.\\n\");\n\n  return 0;\n}"
        }
      ]
    }
  ],
  "metadata": {
    "status": "draft",
    "updatedAt": "2025-10-02T08:28:29.005Z",
    "owners": ["Equipe Algoritmos I", "Prof. Tiago Sombra"],
    "sources": [
      "Plano de ensino Algoritmos I 2025.2",
      "Relatórios IBGE 2024",
      "Planilha de auditoria pós-módulo (aba Structs)"
    ]
  }
}
