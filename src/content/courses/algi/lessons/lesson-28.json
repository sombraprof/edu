{
  "formatVersion": "md3.lesson.v1",
  "id": "lesson-28",
  "title": "Boas Práticas e Manutenção de Funções",
  "summary": "Consolida padrões de escrita, testes e documentação para funções em C, com foco em revisão de código e qualidade contínua.",
  "description": "Consolida padrões de revisão, métricas e manutenção preventiva para código modular em C.",
  "objective": "Aplicar boas práticas de legibilidade, cobertura de testes e monitoramento de métricas em projetos modulares.",
  "objectives": [
    "Avaliar código usando checklist de boas práticas.",
    "Instrumentar funções com logs e medições simples.",
    "Planejar manutenção preventiva em projetos com funções reutilizáveis."
  ],
  "competencies": ["02", "08"],
  "skills": [
    "Aplicar padrões de escrita e nomenclatura que favoreçam manutenção.",
    "Executar checklist de revisão identificando dívidas técnicas e riscos.",
    "Planejar ações de melhoria contínua distribuindo tarefas entre os membros da equipe."
  ],
  "outcomes": [
    "Apresenta relatório de revisão com itens conformes e não conformes registrados.",
    "Entrega código atualizado com correções priorizadas durante a sessão de pair review.",
    "Compartilha plano de manutenção com responsáveis, prazos e métricas de acompanhamento."
  ],
  "prerequisites": [
    "Completar projeto modular da aula 27.",
    "Trazer testes atualizados executados localmente."
  ],
  "tags": ["boas-praticas", "qualidade", "testes"],
  "duration": 100,
  "modality": "hybrid",
  "resources": [
    {
      "label": "Moodle — AVA (Unichristus)",
      "type": "plataforma",
      "url": "https://ava.unichristus.edu.br/"
    }
  ],
  "bibliography": [
    "MARTIN, R. Clean Code. Prentice Hall, 2018.",
    "MEYERS, S. Effective C. No Starch, 2021.",
    "SPOLSKY, J. Joel on Software. Apress, 2010."
  ],
  "assessment": {
    "type": "prática",
    "description": "Prática orientada para fortalecer os conceitos trabalhados em aula. Registre suas soluções e dúvidas para acompanhamento posterior."
  },
  "content": [
    {
      "type": "contentBlock",
      "title": "Atividade em sala",
      "content": [
        {
          "type": "paragraph",
          "text": "Em duplas ou trios, resolvam as questões a seguir para reforçar o aprendizado durante a aula."
        },
        {
          "type": "orderedList",
          "items": [
            {
              "title": "Questão teórica",
              "text": "Explique com suas palavras os principais conceitos abordados em \"Boas Práticas e Manutenção de Funções\" e destaque por que eles são importantes para a resolução de problemas."
            },
            {
              "title": "Questão prática",
              "text": "Implemente ou descreva um exemplo curto relacionado a \"Boas Práticas e Manutenção de Funções\" utilizando OnlineGDB ou Dev-C++ e compartilhe o resultado com o grupo."
            }
          ]
        }
      ]
    },
    {
      "type": "videos",
      "title": "Vídeos de apoio",
      "videos": [
        {
          "title": "Estrutura de Dados - Recursividade",
          "src": "https://www.youtube.com/embed/3RTIzLCpJo0"
        },
        {
          "title": "Arrays & Structs, Video 2: Multi-dimensional arrays in C",
          "src": "https://www.youtube.com/embed/3Rm3wCfBurc"
        }
      ]
    },
    {
      "type": "callout",
      "variant": "info",
      "title": "Warm-up (pré-aula)",
      "content": [
        {
          "type": "paragraph",
          "text": "Revise os materiais desta aula aqui no site e anote os pontos-chave que precisam de atenção. Identifique dúvidas ou conceitos que merecem ser revisitados durante o encontro."
        },
        {
          "type": "list",
          "items": [
            {
              "text": "Reserve alguns minutos para tentar resolver mentalmente um exemplo relacionado ao tema da aula."
            },
            {
              "text": "Garanta acesso ao OnlineGDB ou ao Dev-C++ para experimentar os códigos durante a aula."
            }
          ]
        }
      ]
    },
    {
      "type": "lessonPlan",
      "title": "Dinâmica da sessão",
      "cards": [
        {
          "icon": "users",
          "title": "Revisão entre pares",
          "content": "Duplas trocam módulos e aplicam checklist para identificar melhorias."
        },
        {
          "icon": "monitor",
          "title": "Métricas",
          "content": "Coleta de tempo de execução e cobertura usando ferramentas disponíveis."
        },
        {
          "icon": "check-circle",
          "title": "Plano preventivo",
          "content": "Organização de backlog técnico com ações de curto prazo."
        }
      ]
    },
    {
      "type": "promptTip",
      "title": "Prompt para planejar Boas Práticas e Manutenção de Funções",
      "description": "Use com o assistente para organizar seus estudos, revisar conteúdos e praticar com exercícios.",
      "audience": "estudantes de Algoritmos I",
      "prompt": "Você é estudante de Algoritmos I estudando Boas Práticas e Manutenção de Funções. Contexto da aula: Consolida padrões de escrita, testes e documentação para funções em C, com foco em revisão de código e qualidade contínua. Objetivo central: Aplicar boas práticas de legibilidade, cobertura de testes e monitoramento de métricas em projetos modulares. Monte um plano de estudo dividido em revisão teórica, prática guiada e autoavaliação, indicando atividades de leitura, exercícios resolvidos em C ou pseudocódigo e perguntas de checagem que ajudem você a consolidar o conteúdo. Sugira estratégias para aprofundar o aprendizado, reforçar pontos frágeis e buscar ajuda quando necessário.",
      "tags": ["algoritmos", "boas-praticas", "qualidade", "testes"],
      "tips": [
        "Peça ao assistente variações de exercícios que reforcem avaliar código usando checklist de boas práticas.",
        "Solicite exemplos adicionais relacionados a boas-praticas, qualidade para praticar.",
        "Peça um checklist final para acompanhar suas dúvidas recorrentes e organizar revisões.",
        "Peça sugestões de autoavaliação que ajudem você a instrumentar funções com logs e medições simples."
      ]
    },
    {
      "type": "lessonPlan",
      "title": "Plano de voo (1h40)",
      "cards": [
        {
          "icon": "check-circle",
          "title": "(9 min) Abertura",
          "content": "valor de manter funções pequenas e testáveis."
        },
        {
          "icon": "check-circle",
          "title": "(18 min) Revisão demonstrativa",
          "content": "comparar função verbosa vs. refatorada."
        },
        {
          "icon": "check-circle",
          "title": "28 min",
          "content": "Rodada 1 de revisão cruzada com checklist."
        },
        {
          "icon": "check-circle",
          "title": "18 min",
          "content": "Coleta de métricas de cobertura/logs."
        },
        {
          "icon": "check-circle",
          "title": "18 min",
          "content": "Rodada 2 focada em naming e contratos."
        },
        {
          "icon": "check-circle",
          "title": "9 min",
          "content": "Síntese e definição de backlog preventivo."
        }
      ]
    },
    {
      "type": "contentBlock",
      "title": "Critérios para funções saudáveis",
      "content": [
        {
          "type": "list",
          "items": [
            "Nomes descrevem claramente o efeito da função e seguem padrão consistente.",
            "Blocos possuem no máximo 20 linhas e retornos antecipados são documentados.",
            "Comentários explicam regras de negócio; detalhes técnicos vivem em testes ou documentação."
          ]
        }
      ]
    },
    {
      "type": "contentBlock",
      "title": "Curadoria de vídeos",
      "content": [
        {
          "type": "unorderedList",
          "items": [
            {
              "text": "Como revisar código de maneira efetiva – https://www.youtube.com/watch?v=E8I19uA-wGY"
            },
            {
              "text": "Cobertura de testes em C com gcov – https://www.youtube.com/watch?v=s0g4ty29wqo"
            }
          ]
        }
      ]
    },
    {
      "type": "representations",
      "title": "Perguntas para revisão",
      "items": [
        {
          "title": "Responsabilidade",
          "content": "Esta função faz apenas uma coisa?",
          "language": "plaintext",
          "code": "Esta função faz apenas uma coisa?"
        },
        {
          "title": "Testabilidade",
          "content": "Há casos negativos cobrindo erros e limites?",
          "language": "plaintext",
          "code": "Há casos negativos cobrindo erros e limites?"
        },
        {
          "title": "Observabilidade",
          "content": "Existe log ou retorno que ajude a diagnosticar problemas?",
          "language": "plaintext",
          "code": "Existe log ou retorno que ajude a diagnosticar problemas?"
        }
      ]
    },
    {
      "type": "checklist",
      "title": "Entregáveis da aula",
      "items": [
        "Checklist preenchido e anexado no repositório.",
        "Cobertura registrada (print ou arquivo de relatório).",
        "Plano de manutenção submetido ao mural da turma."
      ]
    },
    {
      "type": "callout",
      "variant": "warning",
      "title": "TED pós-aula",
      "content": [
        {
          "type": "paragraph",
          "text": "Reserve um momento após a aula para concluir a atividade descrita a seguir. Ela complementa os estudos e ajuda a consolidar o que foi trabalhado em sala."
        },
        {
          "type": "list",
          "items": [
            {
              "text": "Desenvolva a prática proposta na aula registrando os passos e resultados no caderno ou no editor de sua preferência."
            },
            {
              "text": "Anote dúvidas e insights que surgirem para discutirmos na próxima aula."
            }
          ]
        }
      ]
    },
    {
      "type": "stepper",
      "title": "Decomposição em funções",
      "steps": [
        {
          "title": "Ler dados",
          "description": "Função input()"
        },
        {
          "title": "Processar",
          "description": "Função process()"
        },
        {
          "title": "Exibir",
          "description": "Função output()"
        }
      ]
    },
    {
      "type": "callout",
      "variant": "academic",
      "title": "Leitura recomendada",
      "content": [
        {
          "type": "list",
          "items": [
            "FORBELLONE, A. L. V.; EBERSPÄCHER, H. F. Algoritmos: Lógica para Desenvolvimento de Programas. Prentice Hall.",
            "MANZANO, J. A. N. G.; OLIVEIRA, J. F. Algoritmos: lógica para desenvolvimento de programação. Érica.",
            "BACKES, A. Linguagem C: completa e descomplicada. Elsevier."
          ]
        }
      ]
    },
    {
      "type": "callout",
      "variant": "info",
      "title": "Casos de teste sugeridos",
      "content": [
        {
          "type": "code",
          "code": "# Defina entradas e saídas esperadas para validar seu programa.",
          "language": "plaintext"
        }
      ]
    },
    {
      "type": "callout",
      "variant": "good-practice",
      "title": "Boas práticas",
      "content": [
        {
          "type": "list",
          "items": [
            "Use nomes de variáveis autoexplicativos (ex.: total, media, indice).",
            "Evite números mágicos; use constantes quando apropriado.",
            "Comente trechos que expressem intenção (não o óbvio)."
          ]
        }
      ]
    },
    {
      "type": "callout",
      "variant": "warning",
      "title": "Erros comuns e refatorações",
      "content": [
        {
          "type": "list",
          "items": [
            "Leia o enunciado e valide entradas antes de processar.",
            "Inicialize variáveis; evite estados indefinidos."
          ]
        }
      ]
    },
    {
      "type": "callout",
      "variant": "task",
      "title": "Check-out (fechamento rápido)",
      "content": [
        {
          "type": "list",
          "items": ["Registre 1 aprendizado e 1 dúvida.", "Entregue no AVA (campo de texto)."]
        }
      ]
    },
    {
      "type": "callout",
      "variant": "info",
      "title": "Gerador de casos de teste (C)",
      "content": [
        {
          "type": "code",
          "language": "c",
          "code": "#include <stdio.h>\n#include <stdlib.h>\n#include <time.h>\n\nvoid imprimirCaso(int id) {\n  double tempoResposta = (double)(rand() % 401 + 100) / 10.0;\n  int regressivo = rand() % 2;\n  int revisado = rand() % 2;\n  double meta = 24.0;\n\n  double atraso = tempoResposta - meta;\n  const char *status = (tempoResposta <= meta && revisado) ? \"OK\" : \"AJUSTAR\";\n\n  printf(\"Chamado %d -> tempo=%.1f regressivo=%d revisado=%d => atraso=%.1f status=%s\\n\",\n         id, tempoResposta, regressivo, revisado, atraso, status);\n}\n\nint main(void) {\n  srand((unsigned)time(NULL));\n  int casos = rand() % 4 + 3;\n\n  for (int i = 1; i <= casos; ++i) {\n    imprimirCaso(i);\n  }\n\n  return 0;\n}"
        }
      ]
    }
  ],
  "metadata": {
    "status": "published",
    "updatedAt": "2025-10-02T08:28:28.994Z",
    "owners": ["Prof. Tiago Sombra"],
    "sources": ["Plano pedagógico Algoritmos I 2025.1", "Guia interno de qualidade 2025"]
  }
}
