{
  "id": "lesson-29",
  "title": "Aula 29: Avaliação NP2",
  "objective": "Avaliar a capacidade de aplicar if/else encadeados, operadores lógicos e estruturas de repetição (while, for, do-while), bem como a modularização com funções (parâmetros, retorno e boas práticas de escopo/protótipos) em problemas práticos de pequena escala.",
  "content": [
    {
      "type": "callout",
      "variant": "info",
      "title": "Warm-up (pré-aula)",
      "content": [
        {
          "type": "paragraph",
          "text": "Revise os materiais desta aula aqui no site e anote os pontos-chave que precisam de atenção. Identifique dúvidas ou conceitos que merecem ser revisitados durante o encontro."
        },
        {
          "type": "list",
          "items": [
            {
              "text": "Reserve alguns minutos para tentar resolver mentalmente um exemplo relacionado ao tema da aula."
            },
            {
              "text": "Garanta acesso ao OnlineGDB ou ao Dev-C++ para experimentar os códigos durante a aula."
            }
          ]
        }
      ]
    },
    {
      "type": "flightPlan",
      "title": "Plano de voo (1h40)",
      "items": [
        "Contexto: Prova presencial aplicada em 10/11/2025, abrangendo conteúdos das Unidades IV e V.",
        "Foco conceitual: Condicionais encadeadas, operadores lógicos, laços de repetição (while, for, do-while) e modularização com funções.",
        "Formato da entrega: Resolução individual, em papel, com questões discursivas e problemas práticos.",
        "Preparação recomendada: Revisar listas anteriores, mapas mentais e exercícios comentados durante as monitorias.",
        "Critérios de aprovação: Clareza do raciocínio algorítmico, correção dos resultados e aderência às boas práticas de código."
      ]
    },
    {
      "type": "contentBlock",
      "title": "Atividade em sala",
      "content": [
        {
          "type": "paragraph",
          "text": "Em duplas ou trios, resolvam as questões a seguir para reforçar o aprendizado durante a aula."
        },
        {
          "type": "orderedList",
          "items": [
            {
              "title": "Questão teórica",
              "text": "Explique com suas palavras os principais conceitos abordados em \"Avaliação NP2\" e destaque por que eles são importantes para a resolução de problemas."
            },
            {
              "title": "Questão prática",
              "text": "Implemente ou descreva um exemplo curto relacionado a \"Avaliação NP2\" utilizando OnlineGDB ou Dev-C++ e compartilhe o resultado com o grupo."
            }
          ]
        }
      ]
    },
    {
      "type": "videos",
      "title": "Vídeos de apoio",
      "videos": [
        {
          "title": "Linguagem C | Aula 26 - Array / Matriz",
          "src": "https://www.youtube.com/embed/3TP0e-bfdfw"
        },
        {
          "title": "Linguagem C | Aula 18 - Comando while",
          "src": "https://www.youtube.com/embed/3pftIJjsk30"
        }
      ]
    },
    {
      "type": "promptTip",
      "title": "Prompt para planejar Avaliação NP2",
      "description": "Use com o assistente para organizar seus estudos, revisar conteúdos e praticar com exercícios.",
      "audience": "estudantes de Algoritmos I",
      "prompt": "Você é estudante de Algoritmos I estudando Aula 29: Avaliação NP2. Contexto da aula: Avaliação escrita que sintetiza estruturas condicionais, laços de repetição e modularização com funções em problemas contextualizados. Objetivo central: Avaliar a capacidade de aplicar if/else encadeados, operadores lógicos e estruturas de repetição (while, for, do-while), bem como a modularização com funções (parâmetros, retorno e boas práticas de escopo/protótipos) em problemas práticos de pequena escala. Monte um plano de estudo dividido em revisão teórica, prática guiada e autoavaliação, indicando atividades de leitura, exercícios resolvidos em C ou pseudocódigo e perguntas de checagem que ajudem você a consolidar o conteúdo. Sugira estratégias para aprofundar o aprendizado, reforçar pontos frágeis e buscar ajuda quando necessário.",
      "tags": ["algoritmos", "avaliacao", "estruturas-de-controle"],
      "tips": [
        "Peça ao assistente variações de exercícios que reforcem aplicar condicionais encadeadas em algoritmos de tomada de decisão.",
        "Solicite exemplos adicionais relacionados a avaliacao, algoritmos para praticar.",
        "Peça um checklist final para acompanhar suas dúvidas recorrentes e organizar revisões.",
        "Peça sugestões de autoavaliação que ajudem você a combinar laços de repetição com contadores e acumuladores."
      ]
    },
    {
      "type": "cardGrid",
      "title": "Domínios avaliados",
      "cards": [
        {
          "title": "Decisões encadeadas",
          "content": "Problemas que combinam if, else if e operadores lógicos (&&, ||, !) para tratar múltiplos cenários e validar entradas."
        },
        {
          "title": "Laços controlados",
          "content": "Questões exigem o uso adequado de while, for e do-while, incluindo controle de sentinelas, contadores e acumuladores."
        },
        {
          "title": "Modularização",
          "content": "Avaliação da assinatura de funções, passagem de parâmetros por valor e retorno de resultados com tipos corretos."
        },
        {
          "title": "Integração",
          "content": "Itens que pedem a combinação de estruturas de decisão e repetição dentro de funções reutilizáveis para resolver problemas de negócios."
        }
      ]
    },
    {
      "type": "contentBlock",
      "title": "Organização da prova",
      "content": [
        {
          "type": "paragraph",
          "text": "A prova possui três seções: (1) interpretação de requisitos, (2) desenvolvimento de algoritmos/pseudocódigos e (3) análise crítica de trechos de código."
        },
        {
          "type": "orderedList",
          "items": [
            {
              "title": "Leitura guiada",
              "text": "Reserve os primeiros minutos para ler todas as questões, identificando as palavras-chave que apontam para estruturas condicionais ou laços."
            },
            {
              "title": "Rascunho estruturado",
              "text": "Utilize o verso da prova para montar fluxogramas rápidos ou tabelas verdade antes de escrever a resposta final."
            },
            {
              "title": "Revisão final",
              "text": "Verifique se cada algoritmo possui início, processamento e saída claramente indicados e se as funções possuem nomes e parâmetros autoexplicativos."
            }
          ]
        }
      ]
    },
    {
      "type": "contentBlock",
      "title": "Critérios de correção",
      "content": [
        {
          "type": "paragraph",
          "text": "Os avaliadores utilizam a rubrica oficial para atribuir notas parciais. Garanta que cada resposta mostre domínio das estruturas solicitadas."
        },
        {
          "type": "subBlock",
          "title": "Rubrica sintetizada",
          "items": [
            "Correção lógica (40%): saídas compatíveis com os cenários descritos e ausência de contradições.",
            "Uso adequado das estruturas (30%): escolha coerente de laços e condicionais, evitando repetições desnecessárias.",
            "Modularização (20%): funções com nomes claros, parâmetros mínimos necessários e retornos corretos.",
            "Apresentação (10%): organização, indentação, comentários pontuais e escrita legível."
          ]
        }
      ]
    },
    {
      "type": "callout",
      "variant": "info",
      "title": "Checklist de preparação",
      "content": [
        {
          "type": "paragraph",
          "text": "Revise exercícios das listas 1 a 4, refaça ao menos um problema integrando loops e funções, e prepare perguntas para a devolutiva pós-prova."
        }
      ]
    },
    {
      "type": "callout",
      "variant": "warning",
      "title": "Conduta em sala",
      "content": [
        {
          "type": "paragraph",
          "text": "Avaliação individual, sem consulta. Mantenha dispositivos desligados e entregue qualquer rascunho anexado à prova ao final."
        }
      ]
    },
    {
      "type": "callout",
      "variant": "info",
      "title": "TED pós-aula",
      "content": [
        {
          "type": "paragraph",
          "text": "Reserve um momento após a aula para concluir a atividade descrita a seguir. Ela complementa os estudos e ajuda a consolidar o que foi trabalhado em sala."
        },
        {
          "type": "list",
          "items": [
            {
              "text": "Desenvolva a prática proposta na aula registrando os passos e resultados no caderno ou no editor de sua preferência."
            },
            {
              "text": "Anote dúvidas e insights que surgirem para discutirmos na próxima aula."
            }
          ]
        }
      ]
    },
    {
      "type": "callout",
      "variant": "academic",
      "title": "Leitura recomendada",
      "content": [
        {
          "type": "list",
          "items": [
            "FORBELLONE, A. L. V.; EBERSPÄCHER, H. F. Algoritmos: Lógica para Desenvolvimento de Programas. Prentice Hall.",
            "MANZANO, J. A. N. G.; OLIVEIRA, J. F. Algoritmos: lógica para desenvolvimento de programação. Érica.",
            "BACKES, A. Linguagem C: completa e descomplicada. Elsevier."
          ]
        }
      ]
    },
    {
      "type": "callout",
      "variant": "info",
      "title": "Casos de teste sugeridos",
      "content": [
        {
          "type": "code",
          "code": "# Defina entradas e saídas esperadas para validar seu programa.",
          "language": "plaintext"
        }
      ]
    },
    {
      "type": "callout",
      "variant": "good-practice",
      "title": "Boas práticas",
      "content": [
        {
          "type": "list",
          "items": [
            "Use nomes de variáveis autoexplicativos (ex.: total, media, indice).",
            "Evite números mágicos; use constantes quando apropriado.",
            "Comente trechos que expressem intenção (não o óbvio)."
          ]
        }
      ]
    },
    {
      "type": "callout",
      "variant": "warning",
      "title": "Erros comuns e refatorações",
      "content": [
        {
          "type": "list",
          "items": [
            "Leia o enunciado e valide entradas antes de processar.",
            "Inicialize variáveis; evite estados indefinidos."
          ]
        }
      ]
    },
    {
      "type": "callout",
      "variant": "task",
      "title": "Check-out (fechamento rápido)",
      "content": [
        {
          "type": "list",
          "items": ["Registre 1 aprendizado e 1 dúvida.", "Entregue no AVA (campo de texto)."]
        }
      ]
    }
  ],
  "metadata": {
    "status": "published",
    "updatedAt": "2025-10-02T08:28:28.995Z",
    "owners": ["Prof. Tiago Sombra"],
    "sources": ["Plano pedagógico Algoritmos I 2025.1", "Ata pedagógica de revisão 2024-12"]
  },
  "formatVersion": "md3.lesson.v1",
  "slug": "avaliacao-np2",
  "summary": "Avaliação escrita que sintetiza estruturas condicionais, laços de repetição e modularização com funções em problemas contextualizados.",
  "objectives": [
    "Aplicar condicionais encadeadas em algoritmos de tomada de decisão.",
    "Combinar laços de repetição com contadores e acumuladores.",
    "Modularizar soluções com funções reutilizáveis e parâmetros bem definidos."
  ],
  "competencies": ["05", "08", "11"],
  "skills": [
    "Gerenciar tempo de avaliação aplicando estratégias para problemas longos.",
    "Resolver questões integrando condicionais, laços e modularização.",
    "Documentar raciocínio das respostas justificando escolhas algorítmicas."
  ],
  "outcomes": [
    "Entrega avaliação NP2 completa dentro do tempo estipulado.",
    "Registra checagem final garantindo que cada programa atende aos requisitos informados.",
    "Anota lições aprendidas e tópicos para estudo complementar após a prova."
  ],
  "prerequisites": [
    "Estruturas condicionais com if/else.",
    "Laços de repetição (while, for, do-while).",
    "Funções com parâmetros e retorno."
  ],
  "tags": ["avaliacao", "algoritmos", "estruturas-de-controle"],
  "duration": 100,
  "modality": "in-person",
  "resources": [
    {
      "label": "Moodle — AVA (Unichristus)",
      "type": "plataforma",
      "url": "https://ava.unichristus.edu.br/"
    }
  ],
  "bibliography": [
    "ASCENCIO, A. F.; CAMPOS, E. R. Fundamentos da Programação de Computadores. Pearson, 2022.",
    "FORBELLONE, A. L. V.; EBERSPÄCHER, H. F. Algoritmos. Prentice Hall, 2021."
  ],
  "assessment": {
    "type": "prática",
    "description": "Prática orientada para fortalecer os conceitos trabalhados em aula. Registre suas soluções e dúvidas para acompanhamento posterior."
  }
}
