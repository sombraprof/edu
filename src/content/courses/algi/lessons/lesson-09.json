{
  "formatVersion": "md3.lesson.v1",
  "id": "lesson-09",
  "title": "Aula 9: Problemas sequenciais aplicados em C",
  "summary": "Aplica o fluxo Entrada → Processamento → Saída em estudos de caso reais, combinando leitura estruturada, cálculos encadeados e comunicação de resultados.",
  "objective": "Resolver problemas cotidianos com programas sequenciais em C documentando cada etapa do processo.",
  "objectives": [
    "Planejar a solução identificando entradas, processamento e saídas de cada caso.",
    "Implementar programas sequenciais com validações simples e formatação clara.",
    "Comparar diferentes problemas para reconhecer padrões reutilizáveis."
  ],
  "competencies": ["05", "08", "11"],
  "skills": [
    "Modelar problemas sequenciais identificando dados de entrada, fórmulas e mensagens de saída.",
    "Implementar algoritmos encadeados em C validando cálculos com amostras reais.",
    "Comunicar resultados em formato de relatório destacando interpretações relevantes."
  ],
  "outcomes": [
    "Entrega solução funcional para estudo de caso proposto com comentários que justificam cada etapa.",
    "Compartilha registro de testes comparando resultados esperados e obtidos para diferentes cenários.",
    "Publica síntese escrita que explica impactos dos números calculados para o contexto do problema."
  ],
  "prerequisites": ["Revisar operadores, scanf e printf consolidados nas aulas 6, 7 e 8."],
  "tags": ["sequencial", "problemas", "pratica"],
  "duration": 100,
  "modality": "in-person",
  "resources": [
    {
      "label": "Moodle — AVA (Unichristus)",
      "type": "plataforma",
      "url": "https://ava.unichristus.edu.br/"
    }
  ],
  "bibliography": [
    "BACKES, A. Linguagem C: Completa e Descomplicada. Elsevier, 2019.",
    "MANZANO, J. A. N. G.; OLIVEIRA, J. F. Algoritmos. Érica, 2019.",
    "PERRY, G. C Completo e Total. Novatec, 2021."
  ],
  "assessment": {
    "type": "prática",
    "description": "Prática orientada para fortalecer os conceitos trabalhados em aula. Registre suas soluções e dúvidas para acompanhamento posterior."
  },
  "content": [
    {
      "type": "callout",
      "variant": "info",
      "title": "Warm-up (pré-aula)",
      "content": [
        {
          "type": "paragraph",
          "text": "Revise os materiais desta aula aqui no site e anote os pontos-chave que precisam de atenção. Identifique dúvidas ou conceitos que merecem ser revisitados durante o encontro."
        },
        {
          "type": "list",
          "items": [
            {
              "text": "Reserve alguns minutos para tentar resolver mentalmente um exemplo relacionado ao tema da aula."
            },
            {
              "text": "Garanta acesso ao OnlineGDB ou ao Dev-C++ para experimentar os códigos durante a aula."
            }
          ]
        }
      ]
    },
    {
      "type": "lessonPlan",
      "title": "Plano da aula",
      "cards": [
        {
          "icon": "book-open",
          "title": "Conteúdo",
          "content": "Estudos de caso: salário líquido, calculadora de IMC e desconto cumulativo."
        },
        {
          "icon": "bullseye",
          "title": "Objetivo",
          "content": "Aplicar o ciclo Entrada → Processamento → Saída em problemas do cotidiano."
        },
        {
          "icon": "gears",
          "title": "Metodologia",
          "content": "Demonstrações guiadas, resolução em duplas e apresentação relâmpago."
        }
      ]
    },
    {
      "type": "flightPlan",
      "title": "Plano de voo (1h40)",
      "items": [
        "(8 min) Check-in colaborativo reforçando Entrada → Processamento → Saída.",
        "(20 min) Estudo de caso 1 — Salário líquido (usa planilha de dados de teste e valida descontos).",
        "(16 min) Estudo de caso 2 — IMC comentado (interpretação + mensagens ao usuário).",
        "(12 min) Estudo de caso 3 — Desconto cumulativo (explora encadeamento de cálculos).",
        "(12 min) Debate guiado: padrões encontrados e ajustes necessários.",
        "(24 min) Oficina em duplas: escolher caso da planilha e registrar validações.",
        "(8 min) Apresentações rápidas, checklist e registro da TED."
      ]
    },
    {
      "type": "contentBlock",
      "title": "Atividade em sala",
      "content": [
        {
          "type": "paragraph",
          "text": "Em duplas ou trios, resolvam as questões a seguir para reforçar o aprendizado durante a aula."
        },
        {
          "type": "orderedList",
          "items": [
            {
              "title": "Questão teórica",
              "text": "Explique com suas palavras os principais conceitos abordados em \"Problemas sequenciais aplicados em C\" e destaque por que eles são importantes para a resolução de problemas."
            },
            {
              "title": "Questão prática",
              "text": "Implemente ou descreva um exemplo curto relacionado a \"Problemas sequenciais aplicados em C\" utilizando OnlineGDB ou Dev-C++ e compartilhe o resultado com o grupo."
            }
          ]
        }
      ]
    },
    {
      "type": "promptTip",
      "title": "Prompt para planejar Problemas sequenciais aplicados em C",
      "description": "Use com o assistente para organizar seus estudos, revisar conteúdos e praticar com exercícios.",
      "audience": "estudantes de Algoritmos I",
      "prompt": "Você é estudante de Algoritmos I estudando Aula 9: Problemas sequenciais aplicados em C. Contexto da aula: Aplica o fluxo Entrada → Processamento → Saída em estudos de caso reais, combinando leitura estruturada, cálculos encadeados e comunicação de resultados. Objetivo central: Resolver problemas cotidianos com programas sequenciais em C documentando cada etapa do processo. Monte um plano de estudo dividido em revisão teórica, prática guiada e autoavaliação, indicando atividades de leitura, exercícios resolvidos em C ou pseudocódigo e perguntas de checagem que ajudem você a consolidar o conteúdo. Sugira estratégias para aprofundar o aprendizado, reforçar pontos frágeis e buscar ajuda quando necessário.",
      "tags": ["algoritmos", "pratica", "problemas", "sequencial"],
      "tips": [
        "Peça ao assistente variações de exercícios que reforcem planejar a solução identificando entradas, processamento e saídas de cada caso.",
        "Solicite exemplos adicionais relacionados a sequencial, problemas para praticar.",
        "Peça um checklist final para acompanhar suas dúvidas recorrentes e organizar revisões.",
        "Peça sugestões de autoavaliação que ajudem você a implementar programas sequenciais com validações simples e formatação clara."
      ]
    },
    {
      "type": "contentBlock",
      "title": "Estudo de caso: salário líquido",
      "content": [
        {
          "type": "paragraph",
          "text": "Um sistema de folha de pagamento precisa informar ao colaborador quanto receberá após impostos e gratificações."
        },
        {
          "type": "subBlock",
          "title": "Passos",
          "items": [
            "Entrada: salário base.",
            "Processamento: calcular gratificação (5%) e imposto (7%), depois salário líquido.",
            "Saída: relatório com valores formatados."
          ]
        },
        {
          "type": "code",
          "language": "c",
          "code": "float salarioBase, gratificacao, imposto, salarioLiquido;\nprintf(\"Salario base: \");\nscanf(\"%f\", &salarioBase);\ngratificacao = salarioBase * 0.05f;\nimposto = salarioBase * 0.07f;\nsalarioLiquido = salarioBase + gratificacao - imposto;\nprintf(\"Liquido: R$ %8.2f\\n\", salarioLiquido);"
        }
      ]
    },
    {
      "type": "callout",
      "variant": "info",
      "title": "Dica de decomposição",
      "content": [
        {
          "type": "paragraph",
          "text": "Liste cada etapa em português antes de escrever o código. Transforme o checklist em comentários para orientar quem for revisar."
        }
      ]
    },
    {
      "type": "contentBlock",
      "title": "Estudo de caso: IMC com interpretação",
      "content": [
        {
          "type": "paragraph",
          "text": "O Índice de Massa Corporal classifica o estado nutricional. Além de calcular, precisamos comunicar o significado do resultado."
        },
        {
          "type": "code",
          "language": "c",
          "code": "float peso, altura, imc;\nprintf(\"Peso (kg): \");\nscanf(\"%f\", &peso);\nprintf(\"Altura (m): \");\nscanf(\"%f\", &altura);\nimc = peso / (altura * altura);\nprintf(\"IMC = %.2f\\n\", imc);\nif (imc < 18.5f) {\n  printf(\"Classificacao: Abaixo do peso\\n\");\n} else if (imc < 25.0f) {\n  printf(\"Classificacao: Peso adequado\\n\");\n} else if (imc < 30.0f) {\n  printf(\"Classificacao: Sobrepeso\\n\");\n} else {\n  printf(\"Classificacao: Obesidade\\n\");\n}\n"
        }
      ]
    },
    {
      "type": "cardGrid",
      "title": "Problemas para a oficina",
      "columns": 2,
      "cards": [
        {
          "title": "Desconto cumulativo",
          "content": "Ler preço original e percentual de desconto, aplicar duas reduções sucessivas e exibir economia total."
        },
        {
          "title": "Conversor de moedas",
          "content": "Receber valor em BRL, cotação do dólar e calcular o equivalente com duas casas decimais."
        },
        {
          "title": "Planejamento de viagem",
          "content": "Somar gastos fixos e variáveis de uma viagem e calcular custo por pessoa."
        },
        {
          "title": "Consumo de combustível",
          "content": "Ler distância e consumo médio para determinar litros gastos e custo total."
        }
      ]
    },
    {
      "type": "contentBlock",
      "title": "Oficina em duplas",
      "content": [
        {
          "type": "orderedList",
          "items": [
            "Escolher um dos cartões e detalhar Entrada, Processamento e Saída.",
            "Implementar a solução em C com comentários descrevendo cada etapa.",
            "Testar ao menos três cenários diferentes registrando resultados.",
            "Preparar um pitch de 2 minutos explicando decisões adotadas."
          ]
        }
      ]
    },
    {
      "type": "contentBlock",
      "title": "Checklists de validação",
      "content": [
        {
          "type": "subBlock",
          "title": "Antes de codar",
          "items": [
            "Preencher a planilha de dados de teste com entradas típicas, limites e inválidas.",
            "Definir o formato de saída esperado para cada cenário (valores e mensagens).",
            "Confirmar quais variáveis precisam de validação extra (negativos, zero, strings vazias)."
          ]
        },
        {
          "type": "subBlock",
          "title": "Antes de entregar",
          "items": [
            "Executar todos os casos registrados na planilha e registrar resultados.",
            "Capturar evidências (console ou prints) anexando o link da planilha preenchida.",
            "Revisar comentários e mensagens exibidas para garantir alinhamento com o enunciado."
          ]
        }
      ]
    },
    {
      "type": "videos",
      "title": "Vídeos de apoio",
      "videos": [
        {
          "title": "Resolvendo problemas com C (sequencial)",
          "src": "https://www.youtube.com/embed/PtlSgJLq2XA"
        },
        {
          "title": "printf e scanf em projetos reais",
          "src": "https://www.youtube.com/embed/if6pvcwrW10"
        }
      ]
    },
    {
      "type": "checklist",
      "title": "Você sai da aula capaz de",
      "items": [
        "Mapear entradas, processamento e saídas para novos problemas.",
        "Implementar soluções sequenciais completas com printf/scanf.",
        "Explicar o raciocínio do algoritmo para colegas ou avaliadores.",
        "Planejar testes básicos para validar o comportamento esperado."
      ]
    },
    {
      "type": "callout",
      "variant": "warning",
      "title": "TED pós-aula",
      "content": [
        {
          "type": "paragraph",
          "text": "Reserve um momento após a aula para concluir a atividade descrita a seguir. Ela complementa os estudos e ajuda a consolidar o que foi trabalhado em sala."
        },
        {
          "type": "list",
          "items": [
            {
              "text": "Desenvolva a prática proposta na aula registrando os passos e resultados no caderno ou no editor de sua preferência."
            },
            {
              "text": "Anote dúvidas e insights que surgirem para discutirmos na próxima aula."
            }
          ]
        }
      ]
    },
    {
      "type": "stepper",
      "title": "Modelo Entrada → Processamento → Saída",
      "steps": [
        {
          "title": "Entrada",
          "description": "Ler dados do usuário (scanf) e validar."
        },
        {
          "title": "Processamento",
          "description": "Aplicar cálculos e regras de negócio."
        },
        {
          "title": "Saída",
          "description": "Exibir resultados formatados (printf)."
        }
      ]
    },
    {
      "type": "callout",
      "variant": "academic",
      "title": "Leitura recomendada",
      "content": [
        {
          "type": "list",
          "items": [
            "FORBELLONE, A. L. V.; EBERSPÄCHER, H. F. Algoritmos: Lógica para Desenvolvimento de Programas. Prentice Hall.",
            "MANZANO, J. A. N. G.; OLIVEIRA, J. F. Algoritmos: lógica para desenvolvimento de programação. Érica.",
            "BACKES, A. Linguagem C: completa e descomplicada. Elsevier."
          ]
        }
      ]
    },
    {
      "type": "callout",
      "variant": "info",
      "title": "Casos de teste sugeridos",
      "content": [
        {
          "type": "code",
          "code": "# Entrada → Saída\n100 10 -> 90.00\n250 5 -> 237.50",
          "language": "plaintext"
        }
      ]
    },
    {
      "type": "callout",
      "variant": "good-practice",
      "title": "Boas práticas",
      "content": [
        {
          "type": "list",
          "items": [
            "Use nomes de variáveis autoexplicativos (ex.: total, media, indice).",
            "Evite números mágicos; use constantes quando apropriado.",
            "Comente trechos que expressem intenção (não o óbvio)."
          ]
        }
      ]
    },
    {
      "type": "callout",
      "variant": "warning",
      "title": "Erros comuns e refatorações",
      "content": [
        {
          "type": "list",
          "items": [
            "Leia o enunciado e valide entradas antes de processar.",
            "Inicialize variáveis; evite estados indefinidos."
          ]
        }
      ]
    },
    {
      "type": "callout",
      "variant": "academic",
      "title": "Solução de referência",
      "content": [
        {
          "type": "code",
          "code": "#include <stdio.h>\nint main(){\n  float preco, desc;\n  if (scanf(\"%f %f\", &preco, &desc)!=2) return 1;\n  float final = preco - (preco*desc/100.0f);\n  printf(\"%.2f\n\", final);\n  return 0;\n}",
          "language": "c"
        }
      ]
    },
    {
      "type": "callout",
      "variant": "task",
      "title": "Check-out (fechamento rápido)",
      "content": [
        {
          "type": "list",
          "items": [
            "Qual parte do EPS te gerou mais dúvidas?",
            "Cite um caso de teste que você usou."
          ]
        }
      ]
    },
    {
      "type": "callout",
      "variant": "info",
      "title": "Gerador de casos de teste (C)",
      "content": [
        {
          "type": "code",
          "language": "c",
          "code": "#include <stdio.h>\n#include <stdlib.h>\n#include <time.h>\n\nint main(void) {\n  srand((unsigned)time(NULL));\n\n  int consumo = rand() % 251 + 150;\n  double tarifa = (double)(rand() % 51 + 30) / 100.0;\n  double bandeira = (double)(rand() % 6) / 10.0;\n\n  double valorConta = consumo * tarifa + bandeira * consumo;\n\n  printf(\"Entrada (kwh_consumidos tarifa_base bandeira_adicional):\\n%d %.2f %.2f\\n\", consumo, tarifa, bandeira);\n  printf(\"Saida esperada (valor_total):\\n%.2f\\n\", valorConta);\n\n  return 0;\n}"
        }
      ]
    }
  ],
  "metadata": {
    "status": "published",
    "updatedAt": "2025-10-02T08:28:28.973Z",
    "owners": ["Prof. Tiago Sombra"],
    "sources": ["Plano pedagógico Algoritmos I 2025.1", "Ata pedagógica de revisão 2024-12"]
  }
}
