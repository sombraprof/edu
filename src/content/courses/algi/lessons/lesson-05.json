{
  "formatVersion": "md3.lesson.v1",
  "id": "lesson-05",
  "title": "Aula 5: Fluxogramas e Visualização da Lógica",
  "summary": "Apresenta a simbologia essencial dos fluxogramas e orienta a tradução de algoritmos textuais para representações visuais.",
  "objective": "Representar algoritmos usando fluxogramas claros que facilitem a comunicação entre equipe e stakeholders.",
  "objectives": [
    "Mapear algoritmos simples em fluxogramas legíveis.",
    "Relacionar símbolos padronizados a operações de entrada, processamento e decisão.",
    "Interpretar fluxos produzidos por colegas para validar raciocínios."
  ],
  "competencies": ["02", "11", "12"],
  "skills": [
    "Selecionar símbolos de fluxo adequados para início, decisões, processamento e término.",
    "Alinhar fluxogramas ao pseudocódigo correspondente destacando equivalências entre blocos.",
    "Conduzir revisão em dupla verificando legibilidade, setas e descrições dos caminhos alternativos."
  ],
  "outcomes": [
    "Produz fluxograma completo com legenda de símbolos e validação feita pelo colega.",
    "Apresenta checklist assinado confirmando correspondência entre fluxograma e algoritmo textual.",
    "Registra ajustes realizados após a revisão cruzada em comentário ou nota compartilhada."
  ],
  "prerequisites": ["Trazer o algoritmo/pseudocódigo desenvolvido na Aula 4."],
  "tags": ["fluxograma", "visualizacao", "processos"],
  "duration": 100,
  "modality": "in-person",
  "resources": [
    {
      "label": "Moodle — AVA (Unichristus)",
      "type": "plataforma",
      "url": "https://ava.unichristus.edu.br/"
    }
  ],
  "bibliography": [
    "PRESSMAN, R. Engenharia de Software. McGraw-Hill, 2021 (capítulo de modelagem).",
    "GANE, C.; SARSON, T. Structured Systems Analysis. Pearson, 2019."
  ],
  "assessment": {
    "type": "prática",
    "description": "Prática orientada para fortalecer os conceitos trabalhados em aula. Registre suas soluções e dúvidas para acompanhamento posterior."
  },
  "content": [
    {
      "type": "callout",
      "variant": "info",
      "title": "Warm-up (pré-aula)",
      "content": [
        {
          "type": "paragraph",
          "text": "Revise os materiais desta aula aqui no site e anote os pontos-chave que precisam de atenção. Identifique dúvidas ou conceitos que merecem ser revisitados durante o encontro."
        },
        {
          "type": "list",
          "items": [
            {
              "text": "Reserve alguns minutos para tentar resolver mentalmente um exemplo relacionado ao tema da aula."
            },
            {
              "text": "Garanta acesso ao OnlineGDB ou ao Dev-C++ para experimentar os códigos durante a aula."
            }
          ]
        }
      ]
    },
    {
      "type": "lessonPlan",
      "title": "Plano da Aula",
      "cards": [
        {
          "icon": "book-open",
          "title": "Conteúdo",
          "content": "Simbologia, exemplos guiados e ferramentas digitais para fluxogramas."
        },
        {
          "icon": "bullseye",
          "title": "Objetivo",
          "content": "Comunicar algoritmos de forma visual para acelerar revisões."
        },
        {
          "icon": "gears",
          "title": "Metodologia",
          "content": "Exposição dialogada, demonstração com Md3Flowchart e prática em duplas."
        }
      ]
    },
    {
      "type": "md3Flowchart",
      "title": "Biblioteca MD3 de símbolos para fluxogramas",
      "nodes": [
        {
          "id": "inicio",
          "type": "start",
          "title": "Início/Fim",
          "summary": "Usado para delimitar o fluxo. Formato oval."
        },
        {
          "id": "entrada",
          "type": "input-output",
          "title": "Entrada/Saída",
          "summary": "Representa leitura de dados ou exibição de resultados (paralelogramo)."
        },
        {
          "id": "processo",
          "type": "process",
          "title": "Processo",
          "summary": "Mostra cálculos ou atribuições (retângulo)."
        },
        {
          "id": "decisao",
          "type": "decision",
          "title": "Decisão",
          "summary": "Indica ramificações com perguntas fechadas (losango)."
        },
        {
          "id": "conector",
          "type": "connector",
          "title": "Conector",
          "summary": "Liga pontos distantes do diagrama mantendo a leitura limpa."
        }
      ],
      "connections": [
        {
          "from": "inicio",
          "to": "entrada"
        },
        {
          "from": "entrada",
          "to": "processo"
        },
        {
          "from": "processo",
          "to": "decisao"
        },
        {
          "from": "decisao",
          "to": "conector",
          "label": "Sim"
        },
        {
          "from": "decisao",
          "to": "processo",
          "kind": "loop",
          "label": "Não / repetir"
        }
      ]
    },
    {
      "type": "flightPlan",
      "title": "Plano de voo (1h40)",
      "items": [
        "(15 min) Revisão dos símbolos e suas aplicações.",
        "(20 min) Exemplo guiado convertendo algoritmo de aprovação de aluno em fluxograma.",
        "(35 min) Oficina em duplas utilizando Md3Flowchart (papel + digital).",
        "(20 min) Rodada de feedback entre duplas e checklist de consistência.",
        "(10 min) Registro da TED no Moodle."
      ]
    },
    {
      "type": "contentBlock",
      "title": "Atividade em sala",
      "content": [
        {
          "type": "paragraph",
          "text": "Em duplas ou trios, resolvam as questões a seguir para reforçar o aprendizado durante a aula."
        },
        {
          "type": "orderedList",
          "items": [
            {
              "title": "Questão teórica",
              "text": "Explique com suas palavras os principais conceitos abordados em \"Fluxogramas e Visualização da Lógica\" e destaque por que eles são importantes para a resolução de problemas."
            },
            {
              "title": "Questão prática",
              "text": "Implemente ou descreva um exemplo curto relacionado a \"Fluxogramas e Visualização da Lógica\" utilizando OnlineGDB ou Dev-C++ e compartilhe o resultado com o grupo."
            }
          ]
        }
      ]
    },
    {
      "type": "videos",
      "title": "Vídeos de apoio",
      "videos": [
        {
          "title": "Programação C (introdução, pseudocódigo, DevC++)",
          "src": "https://www.youtube.com/embed/-qlRIH02Hlk"
        },
        {
          "title": "Algoritma Pencarian dan Pengurutan Pada Bahasa Pemprogramman C - Part 1 Pencarian",
          "src": "https://www.youtube.com/embed/-uGqH0liF_s"
        }
      ]
    },
    {
      "type": "promptTip",
      "title": "Prompt para planejar Fluxogramas e Visualização da Lógica",
      "description": "Use com o assistente para organizar seus estudos, revisar conteúdos e praticar com exercícios.",
      "audience": "estudantes de Algoritmos I",
      "prompt": "Você é estudante de Algoritmos I estudando Aula 5: Fluxogramas e Visualização da Lógica. Contexto da aula: Apresenta a simbologia essencial dos fluxogramas e orienta a tradução de algoritmos textuais para representações visuais. Objetivo central: Representar algoritmos usando fluxogramas claros que facilitem a comunicação entre equipe e stakeholders. Monte um plano de estudo dividido em revisão teórica, prática guiada e autoavaliação, indicando atividades de leitura, exercícios resolvidos em C ou pseudocódigo e perguntas de checagem que ajudem você a consolidar o conteúdo. Sugira estratégias para aprofundar o aprendizado, reforçar pontos frágeis e buscar ajuda quando necessário.",
      "tags": ["algoritmos", "fluxograma", "processos", "visualizacao"],
      "tips": [
        "Peça ao assistente variações de exercícios que reforcem mapear algoritmos simples em fluxogramas legíveis.",
        "Solicite exemplos adicionais relacionados a fluxograma, visualizacao para praticar.",
        "Peça um checklist final para acompanhar suas dúvidas recorrentes e organizar revisões.",
        "Peça sugestões de autoavaliação que ajudem você a relacionar símbolos padronizados a operações de entrada, processamento e decisão."
      ]
    },
    {
      "type": "cardGrid",
      "title": "Simbologia essencial",
      "cards": [
        {
          "title": "Terminal",
          "content": "Elipse usada para início e fim do fluxo; garante que o algoritmo tem limites claros."
        },
        {
          "title": "Processo",
          "content": "Retângulo que descreve ações ou cálculos executados."
        },
        {
          "title": "Entrada/Saída",
          "content": "Paralelogramo utilizado para leitura de dados ou exibição de resultados."
        },
        {
          "title": "Decisão",
          "content": "Losango que separa o fluxo em caminhos distintos com base em uma condição."
        }
      ]
    },
    {
      "type": "component",
      "component": "Md3Flowchart",
      "props": {
        "title": "Exemplo: Verificar aprovação",
        "summary": "Fluxograma para avaliar se a média do aluno é suficiente para aprovação.",
        "nodes": [
          {
            "id": "start",
            "type": "start",
            "title": "Início"
          },
          {
            "id": "input-media",
            "type": "input",
            "title": "Ler média do aluno"
          },
          {
            "id": "decision",
            "type": "decision",
            "title": "Média ≥ 7?",
            "branches": [
              {
                "id": "aprovado",
                "label": "Sim",
                "target": "output-aprovado"
              },
              {
                "id": "reprovado",
                "label": "Não",
                "target": "output-reprovado"
              }
            ]
          },
          {
            "id": "output-aprovado",
            "type": "output",
            "title": "Exibir \"Aprovado\""
          },
          {
            "id": "output-reprovado",
            "type": "output",
            "title": "Exibir \"Reprovado\""
          },
          {
            "id": "end",
            "type": "end",
            "title": "Fim"
          }
        ],
        "connections": [
          {
            "from": "start",
            "to": "input-media"
          },
          {
            "from": "input-media",
            "to": "decision"
          },
          {
            "from": "decision",
            "to": "output-aprovado",
            "label": "Média ≥ 7"
          },
          {
            "from": "decision",
            "to": "output-reprovado",
            "label": "Média < 7"
          },
          {
            "from": "output-aprovado",
            "to": "end"
          },
          {
            "from": "output-reprovado",
            "to": "end"
          }
        ]
      }
    },
    {
      "type": "contentBlock",
      "title": "Boas práticas",
      "content": [
        {
          "type": "orderedList",
          "items": [
            "Comece sempre com início e fim explícitos.",
            "Use verbos no infinitivo dentro de cada símbolo.",
            "Mantenha fluxos que descem ou vão da esquerda para a direita.",
            "Limite decisões a perguntas binárias para evitar confusão."
          ]
        }
      ]
    },
    {
      "type": "contentBlock",
      "title": "Oficina em duplas",
      "content": [
        {
          "type": "paragraph",
          "text": "Escolham um dos algoritmos implementados em C na aula anterior e criem o fluxograma correspondente."
        },
        {
          "type": "orderedList",
          "items": [
            "Esboço em papel aplicando o checklist de boas práticas.",
            "Construção digital em Miro/Draw.io usando biblioteca de símbolos.",
            "Troca com outra dupla para revisão e apontamentos.",
            "Registro das melhorias combinadas."
          ]
        }
      ]
    },
    {
      "type": "callout",
      "variant": "info",
      "title": "Roteiro de revisão cruzada",
      "content": [
        {
          "type": "list",
          "items": [
            "Compare o fluxograma recebido com o Guia MD3 de simbologia e a biblioteca acima; marque símbolos ausentes ou trocados.",
            "Percorra cada caminho respondendo: entrada → processamento → decisão → saída estão completos? Documente lacunas.",
            "Sugira melhorias objetivas (organização, textos nos símbolos, conectores) e combine ajustes em até 10 minutos."
          ],
          "ordered": true
        }
      ]
    },
    {
      "type": "checklist",
      "title": "Checklist de saída",
      "description": "Antes de encerrar:",
      "items": [
        "Transformei um algoritmo em fluxograma completo.",
        "Recebi e forneci feedback para outra dupla.",
        "Registrei ferramentas e convenções adotadas."
      ]
    },
    {
      "type": "callout",
      "variant": "warning",
      "title": "TED pós-aula",
      "content": [
        {
          "type": "paragraph",
          "text": "Reserve um momento após a aula para concluir a atividade descrita a seguir. Ela complementa os estudos e ajuda a consolidar o que foi trabalhado em sala."
        },
        {
          "type": "list",
          "items": [
            {
              "text": "Desenvolva a prática proposta na aula registrando os passos e resultados no caderno ou no editor de sua preferência."
            },
            {
              "text": "Anote dúvidas e insights que surgirem para discutirmos na próxima aula."
            }
          ]
        }
      ]
    },
    {
      "type": "resourceGallery",
      "title": "Galeria — Fluxogramas (CC)",
      "src": "resources/algorithm-flowchart.json"
    },
    {
      "type": "callout",
      "variant": "academic",
      "title": "Leitura recomendada",
      "content": [
        {
          "type": "list",
          "items": [
            "FORBELLONE, A. L. V.; EBERSPÄCHER, H. F. Algoritmos: Lógica para Desenvolvimento de Programas. Prentice Hall.",
            "MANZANO, J. A. N. G.; OLIVEIRA, J. F. Algoritmos: lógica para desenvolvimento de programação. Érica.",
            "BACKES, A. Linguagem C: completa e descomplicada. Elsevier."
          ]
        }
      ]
    },
    {
      "type": "callout",
      "variant": "info",
      "title": "Casos de teste sugeridos",
      "content": [
        {
          "type": "code",
          "code": "# Defina entradas e saídas esperadas para validar seu programa.",
          "language": "plaintext"
        }
      ]
    },
    {
      "type": "callout",
      "variant": "good-practice",
      "title": "Boas práticas",
      "content": [
        {
          "type": "list",
          "items": [
            "Use nomes de variáveis autoexplicativos (ex.: total, media, indice).",
            "Evite números mágicos; use constantes quando apropriado.",
            "Comente trechos que expressem intenção (não o óbvio)."
          ]
        }
      ]
    },
    {
      "type": "callout",
      "variant": "warning",
      "title": "Erros comuns e refatorações",
      "content": [
        {
          "type": "list",
          "items": [
            "Leia o enunciado e valide entradas antes de processar.",
            "Inicialize variáveis; evite estados indefinidos."
          ]
        }
      ]
    },
    {
      "type": "callout",
      "variant": "task",
      "title": "Check-out (fechamento rápido)",
      "content": [
        {
          "type": "list",
          "items": ["Registre 1 aprendizado e 1 dúvida.", "Entregue no AVA (campo de texto)."]
        }
      ]
    },
    {
      "type": "callout",
      "variant": "info",
      "title": "Gerador de casos de teste (C)",
      "content": [
        {
          "type": "code",
          "language": "c",
          "code": "#include <stdio.h>\n#include <stdlib.h>\n#include <time.h>\n\nint main(void) {\n  srand((unsigned)time(NULL));\n\n  float valorCompra = (float)(rand() % 4501 + 500) / 10.0f;\n  int clienteFrequente = rand() % 2;\n  int possuiCupom = rand() % 2;\n\n  float desconto = 0.0f;\n  if (valorCompra >= 300.0f) {\n    desconto += 0.10f;\n  }\n  if (clienteFrequente) {\n    desconto += 0.05f;\n  }\n  if (possuiCupom) {\n    desconto += 0.03f;\n  }\n  if (desconto > 0.20f) {\n    desconto = 0.20f;\n  }\n\n  float valorFinal = valorCompra * (1.0f - desconto);\n\n  printf(\"Entrada (valor_compra cliente_frequente possui_cupom):\\n%.2f %d %d\\n\", valorCompra, clienteFrequente, possuiCupom);\n  printf(\"Saidas esperadas:\\n- percentual_desconto = %.2f\\n- valor_final = %.2f\\n\", desconto * 100.0f, valorFinal);\n\n  return 0;\n}"
        }
      ]
    }
  ],
  "metadata": {
    "status": "published",
    "updatedAt": "2025-10-02T08:28:28.969Z",
    "owners": ["Prof. Tiago Sombra"],
    "sources": ["Plano pedagógico Algoritmos I 2025.1", "Ata pedagógica de revisão 2024-12"]
  }
}
