{
  "formatVersion": "md3.lesson.v1",
  "id": "lesson-18",
  "title": "Aula 18: Estrutura de Repetição for",
  "summary": "Explora o laço for para repetir instruções com contadores definidos, destacando inicialização, condição e atualização.",
  "objective": "Planejar e implementar laços for para percorrer intervalos, vetores e produzir tabulações controladas.",
  "objectives": [
    "Mapear os três componentes do for (inicialização, condição, atualização).",
    "Comparar equivalências entre for e while em exemplos reais.",
    "Aplicar for em tabelas e cálculos acumulativos com validação de limites."
  ],
  "competencies": ["05", "08", "11"],
  "skills": [
    "Configurar laços for detalhando inicialização, condição e atualização.",
    "Comparar abordagens for e while justificando escolha em função do problema.",
    "Produzir documentação curta com exemplos de uso e testes realizados."
  ],
  "outcomes": [
    "Apresenta programa funcional com pelo menos dois laços for em cenários distintos.",
    "Disponibiliza relatório comparativo entre soluções for e while destacando métricas coletadas.",
    "Entrega registro de testes indicando entradas, saídas e observações para melhorias futuras."
  ],
  "prerequisites": ["Conhecer laços while e operadores aritméticos."],
  "tags": ["loops", "for", "repeticao"],
  "duration": 100,
  "modality": "in-person",
  "resources": [
    {
      "label": "Moodle — AVA (Unichristus)",
      "type": "plataforma",
      "url": "https://ava.unichristus.edu.br/"
    }
  ],
  "bibliography": [
    "FORBELLONE, A. L. V.; EBERSPÄCHER, H. F. Lógica de Programação. 3. ed. Pearson, 2020. Cap. 4, Estruturas de Repetição.",
    "MANZANO, J. A. N. G.; OLIVEIRA, J. F. Algoritmos – Lógica para Desenvolvimento de Programação de Computadores. 28. ed. Érica, 2019. Cap. 6, Estruturas de repetição controlada.",
    "BACKES, A. Linguagem C: Completa e Descomplicada. 2. ed. Elsevier, 2019. Cap. 5, Laços de iteração.",
    "SANTOS, R. Introdução à Programação em C. Bookman, 2021. Cap. 7, Estruturas de controle e validação de limites.",
    "ASCENCIO, A. F. G.; CAMPOS, E. A. V. Fundamentos da Programação de Computadores. 3. ed. Pearson, 2012. Cap. 6, Estruturas de repetição e testes."
  ],
  "assessment": {
    "type": "prática",
    "description": "Prática orientada para fortalecer os conceitos trabalhados em aula. Registre suas soluções e dúvidas para acompanhamento posterior.",
    "rubric": "Pensamento computacional (40%): estrutura os laços conforme o método de decomposição apresentado por Forbellone & Eberspächer (Cap. 4). Organização algorítmica (35%): documenta inicialização, condição e atualização de acordo com Manzano & Oliveira (Cap. 6) e Backes (Cap. 5). Raciocínio matemático (25%): valida limites numéricos e registra evidências na planilha de auditoria conforme Santos (Cap. 7) e Ascencio & Campos (Cap. 6)."
  },
  "content": [
    {
      "type": "callout",
      "variant": "info",
      "title": "Warm-up (pré-aula)",
      "content": [
        {
          "type": "paragraph",
          "text": "Revise os materiais desta aula aqui no site e anote os pontos-chave que precisam de atenção. Identifique dúvidas ou conceitos que merecem ser revisitados durante o encontro."
        },
        {
          "type": "list",
          "items": [
            {
              "text": "Reserve alguns minutos para tentar resolver mentalmente um exemplo relacionado ao tema da aula."
            },
            {
              "text": "Garanta acesso ao OnlineGDB ou ao Dev-C++ para experimentar os códigos durante a aula."
            }
          ]
        }
      ]
    },
    {
      "type": "lessonPlan",
      "title": "Plano da aula",
      "cards": [
        {
          "icon": "monitor",
          "title": "Comparativo inicial",
          "content": "Revisar diferenças entre while e for com exemplos lado a lado (10 min)."
        },
        {
          "icon": "tasks",
          "title": "Componentes do for",
          "content": "Mapear inicialização, condição e atualização em exercícios guiados (20 min)."
        },
        {
          "icon": "code",
          "title": "Laboratório guiado",
          "content": "Gerar tabuadas, séries e varreduras controladas (30 min)."
        },
        {
          "icon": "gears",
          "title": "Experimentos",
          "content": "Testar incrementos alternativos e laços decrescentes (25 min)."
        },
        {
          "icon": "users",
          "title": "Debrief",
          "content": "Comparar implementação em for versus while e registrar aprendizados (15 min)."
        },
        {
          "icon": "tasks",
          "title": "TED",
          "content": "Alinhar entregáveis e rubrica da prática pós-aula (15 min)."
        }
      ]
    },
    {
      "type": "flightPlan",
      "title": "Plano de voo (1h40)",
      "items": [
        "(9 min) Recap do while e introdução ao for.",
        "(17 min) Desmembrar sintaxe e exemplos no quadro.",
        "(31 min) Laboratório: geração de tabuada e somatórios.",
        "(17 min) Debug coletivo: evitar loops infinitos.",
        "(26 min) Exercícios avaliativos com feedback em tempo real."
      ]
    },
    {
      "type": "contentBlock",
      "title": "Atividade em sala",
      "content": [
        {
          "type": "paragraph",
          "text": "Em duplas ou trios, resolvam as questões a seguir para reforçar o aprendizado durante a aula."
        },
        {
          "type": "orderedList",
          "items": [
            {
              "title": "Questão teórica",
              "text": "Explique com suas palavras os principais conceitos abordados em \"Estrutura de Repetição for\" e destaque por que eles são importantes para a resolução de problemas."
            },
            {
              "title": "Questão prática",
              "text": "Implemente ou descreva um exemplo curto relacionado a \"Estrutura de Repetição for\" utilizando OnlineGDB ou Dev-C++ e compartilhe o resultado com o grupo."
            }
          ]
        }
      ]
    },
    {
      "type": "videos",
      "title": "Vídeos de apoio",
      "videos": [
        {
          "title": "C sharp - [ Biblioteca Linq ] - SelectMany no lugar de loops aninhados",
          "src": "https://www.youtube.com/embed/17WLJ6QTFd4"
        },
        {
          "title": "Learn C++ With Me #9 - Arrays",
          "src": "https://www.youtube.com/embed/1FVBeLD_FdE"
        }
      ]
    },
    {
      "type": "promptTip",
      "title": "Prompt para planejar Estrutura de Repetição for",
      "description": "Use com o assistente para organizar seus estudos, revisar conteúdos e praticar com exercícios.",
      "audience": "estudantes de Algoritmos I",
      "prompt": "Você é estudante de Algoritmos I estudando Aula 18: Estrutura de Repetição for. Contexto da aula: Explora o laço for para repetir instruções com contadores definidos, destacando inicialização, condição e atualização. Objetivo central: Planejar e implementar laços for para percorrer intervalos, vetores e produzir tabulações controladas. Monte um plano de estudo dividido em revisão teórica, prática guiada e autoavaliação, indicando atividades de leitura, exercícios resolvidos em C ou pseudocódigo e perguntas de checagem que ajudem você a consolidar o conteúdo. Sugira estratégias para aprofundar o aprendizado, reforçar pontos frágeis e buscar ajuda quando necessário.",
      "tags": ["algoritmos", "for", "loops", "repeticao"],
      "tips": [
        "Peça ao assistente variações de exercícios que reforcem mapear os três componentes do for (inicialização, condição, atualização).",
        "Solicite exemplos adicionais relacionados a loops, for para praticar.",
        "Peça um checklist final para acompanhar suas dúvidas recorrentes e organizar revisões.",
        "Peça sugestões de autoavaliação que ajudem você a comparar equivalências entre for e while em exemplos reais."
      ]
    },
    {
      "type": "contentBlock",
      "title": "Componentes do for",
      "content": [
        {
          "type": "paragraph",
          "text": "Forbellone & Eberspächer (Cap. 4) e Manzano & Oliveira (Cap. 6) reforçam que a clareza na inicialização, condição e atualização torna o laço for ideal para cenários auditáveis, como a contagem de lotes da Farmácia Escola que utilizaremos nesta aula."
        },
        {
          "type": "roadmap",
          "steps": [
            {
              "title": "Inicialização",
              "description": "Executada uma vez antes da primeira iteração e registrada na planilha de auditoria conforme Santos (Cap. 7)."
            },
            {
              "title": "Condição",
              "description": "Verificada antes de cada ciclo, seguindo o checklist de testes sugerido por Ascencio & Campos (Cap. 6)."
            },
            {
              "title": "Atualização",
              "description": "Executada após cada iteração, permitindo saltos múltiplos como exemplificado por Backes (Cap. 5)."
            }
          ]
        },
        {
          "type": "paragraph",
          "text": "A cada passagem pelo for, atualize também indicadores percentuais do estudo de caso para demonstrar aderência às recomendações de Ascencio & Campos (Cap. 6) sobre transparência de cálculos."
        }
      ]
    },
    {
      "type": "callout",
      "variant": "info",
      "title": "Experimente incrementos diferentes",
      "content": [
        {
          "type": "paragraph",
          "text": "Backes (Cap. 5) recomenda testar saltos de 2, decrementos e atualizações múltiplas na mesma expressão; registre os resultados na planilha e compare-os com os limites estabelecidos por Santos (Cap. 7) para evitar extrapolar a capacidade produtiva."
        },
        {
          "type": "list",
          "items": [
            {
              "text": "Documente na planilha os valores percorridos em cada variação."
            },
            {
              "text": "Verifique se a condição permanece coerente ao inverter a direção."
            },
            {
              "text": "Utilize comentários para explicar a intenção de saltos não unitários."
            }
          ]
        }
      ]
    },
    {
      "type": "callout",
      "variant": "good-practice",
      "title": "Estudo de caso: Auditoria da Farmácia Escola",
      "content": [
        {
          "type": "paragraph",
          "text": "Utilize a planilha fornecida para monitorar a produção diária de cápsulas manipuladas. Aplique laços for para calcular médias por turno, apontar desvios e gerar alertas automáticos conforme o protocolo descrito por Ascencio & Campos (Cap. 6)."
        },
        {
          "type": "list",
          "items": [
            {
              "text": "Inicialize contadores separados por turno seguindo o quadro sugerido por Forbellone & Eberspächer (Cap. 4)."
            },
            {
              "text": "Valide limites mínimos e máximos antes de atualizar acumuladores, conforme as heurísticas de Manzano & Oliveira (Cap. 6)."
            },
            {
              "text": "Gere mensagens com `printf` sinalizando metas atingidas e gaps, reforçando a análise de conformidade proposta por Santos (Cap. 7)."
            }
          ]
        }
      ]
    },
    {
      "type": "md3Table",
      "title": "Comparativo for x while",
      "headers": ["Aspecto", "for", "while"],
      "rows": [
        [
          {
            "value": "Estrutura"
          },
          {
            "value": "Tudo em uma linha (início; condição; atualização)"
          },
          {
            "value": "Elementos separados no corpo"
          }
        ],
        [
          {
            "value": "Legibilidade"
          },
          {
            "value": "Excelente para contadores e percursos"
          },
          {
            "value": "Melhor para repetições condicionais sem contagem"
          }
        ],
        [
          {
            "value": "Risco"
          },
          {
            "value": "Esquecer atualização resulta em loop infinito"
          },
          {
            "value": "Esquecer leitura no fim pode travar condição"
          }
        ]
      ]
    },
    {
      "type": "cardGrid",
      "title": "Padrões com laço for",
      "cards": [
        {
          "title": "Contagem crescente",
          "content": "Ideal para iterar intervalos conhecidos (0..n) com atualização unitária."
        },
        {
          "title": "Contagem decrescente",
          "content": "Útil para timers, contagem regressiva e percursos reversos."
        },
        {
          "title": "Saltos regulares",
          "content": "Percorra apenas elementos pares/ímpares usando incrementos maiores que 1."
        },
        {
          "title": "Loop vazio",
          "content": "Quando lógica está na expressão de atualização, documente riscos de legibilidade."
        }
      ]
    },
    {
      "type": "code",
      "language": "c",
      "code": "int soma = 0;\nfor (int i = 1; i <= 10; i++) {\n  soma += i;\n  printf(\"Iteração %d - soma parcial: %d\\n\", i, soma);\n}\nprintf(\"Resultado final: %d\\n\", soma);\n"
    },
    {
      "type": "md3Flowchart",
      "title": "Fluxo: tabuada com for",
      "nodes": [
        {
          "id": "start",
          "type": "start",
          "title": "Início"
        },
        {
          "id": "set",
          "type": "process",
          "title": "i = 1"
        },
        {
          "id": "condition",
          "type": "decision",
          "title": "i <= 10?",
          "branches": [
            {
              "id": "loop-continues",
              "label": "Sim",
              "target": "print"
            },
            {
              "id": "loop-ends",
              "label": "Não",
              "target": "end"
            }
          ]
        },
        {
          "id": "print",
          "type": "process",
          "title": "Imprimir linha",
          "summary": "Mostra fator x multiplicador."
        },
        {
          "id": "increment",
          "type": "process",
          "title": "i++"
        },
        {
          "id": "end",
          "type": "end",
          "title": "Fim"
        }
      ],
      "connections": [
        {
          "from": "start",
          "to": "set"
        },
        {
          "from": "set",
          "to": "condition"
        },
        {
          "from": "print",
          "to": "increment"
        },
        {
          "from": "increment",
          "to": "condition",
          "kind": "loop",
          "label": "Próximo valor"
        }
      ]
    },
    {
      "type": "checklist",
      "title": "Próximos passos",
      "items": [
        "Implementar exercícios 1, 2 e 3 da worksheet usando for.",
        "Analisar equivalência com while e registrar diferenças no caderno.",
        "Preparar dúvidas para a aula 19 (for vs while)."
      ]
    },
    {
      "type": "callout",
      "variant": "info",
      "title": "TED pós-aula",
      "content": [
        {
          "type": "paragraph",
          "text": "Reserve um momento após a aula para concluir a atividade descrita a seguir. Ela complementa os estudos e ajuda a consolidar o que foi trabalhado em sala."
        },
        {
          "type": "list",
          "items": [
            {
              "text": "Desenvolva a prática proposta na aula registrando os passos e resultados no caderno ou no editor de sua preferência."
            },
            {
              "text": "Anote dúvidas e insights que surgirem para discutirmos na próxima aula."
            }
          ]
        }
      ]
    },
    {
      "type": "callout",
      "variant": "warning",
      "title": "TED pós-aula",
      "content": [
        {
          "type": "paragraph",
          "text": "Reserve um momento após a aula para concluir a atividade descrita a seguir. Ela complementa os estudos e ajuda a consolidar o que foi trabalhado em sala."
        },
        {
          "type": "list",
          "items": [
            {
              "text": "Desenvolva a prática proposta na aula registrando os passos e resultados no caderno ou no editor de sua preferência."
            },
            {
              "text": "Anote dúvidas e insights que surgirem para discutirmos na próxima aula."
            }
          ]
        }
      ]
    },
    {
      "type": "stepper",
      "title": "for (inicialização; condição; incremento)",
      "steps": [
        {
          "title": "Inicialização",
          "description": "int i = 0;"
        },
        {
          "title": "Condição",
          "description": "i < n"
        },
        {
          "title": "Incremento",
          "description": "i++"
        }
      ]
    },
    {
      "type": "callout",
      "variant": "academic",
      "title": "Leitura recomendada",
      "content": [
        {
          "type": "list",
          "items": [
            "FORBELLONE, A. L. V.; EBERSPÄCHER, H. F. Algoritmos: Lógica para Desenvolvimento de Programas. Prentice Hall.",
            "MANZANO, J. A. N. G.; OLIVEIRA, J. F. Algoritmos: lógica para desenvolvimento de programação. Érica.",
            "BACKES, A. Linguagem C: completa e descomplicada. Elsevier."
          ]
        }
      ]
    },
    {
      "type": "callout",
      "variant": "info",
      "title": "Casos de teste sugeridos",
      "content": [
        {
          "type": "code",
          "code": "# Entrada → Saída\nn=5 -> 1 2 3 4 5",
          "language": "plaintext"
        }
      ]
    },
    {
      "type": "callout",
      "variant": "warning",
      "title": "Erros comuns e refatorações",
      "content": [
        {
          "type": "list",
          "items": [
            "Leia o enunciado e valide entradas antes de processar.",
            "Inicialize variáveis; evite estados indefinidos."
          ]
        },
        {
          "type": "paragraph",
          "text": "<strong>Anti-exemplo</strong>"
        },
        {
          "type": "code",
          "code": "for (int i=0; i<n; ) { /* sem incremento */ }",
          "language": "c"
        },
        {
          "type": "paragraph",
          "text": "<strong>Refatorado</strong>"
        },
        {
          "type": "code",
          "code": "for (int i=0; i<n; i++) { /* ok */ }",
          "language": "c"
        }
      ]
    },
    {
      "type": "callout",
      "variant": "academic",
      "title": "Solução de referência",
      "content": [
        {
          "type": "code",
          "code": "#include <stdio.h>\nint main(){\n  int n; if (scanf(\"%d\", &n)!=1) return 1;\n  for (int i=1;i<=n;i++){ printf(\"%d%s\", i, i==n?\"\n\":\" \"); }\n  return 0;\n}",
          "language": "c"
        }
      ]
    },
    {
      "type": "callout",
      "variant": "task",
      "title": "Check-out (fechamento rápido)",
      "content": [
        {
          "type": "list",
          "items": ["Qual foi o padrão de incremento que você usou?", "Quando preferir while?"]
        }
      ]
    },
    {
      "type": "callout",
      "variant": "info",
      "title": "Gerador de casos de teste (C)",
      "content": [
        {
          "type": "code",
          "language": "c",
          "code": "#include <stdio.h>\n#include <stdlib.h>\n#include <time.h>\n\nint main(void) {\n  srand((unsigned)time(NULL));\n\n  int inicio = rand() % 6 + 1;\n  int fim = inicio + (rand() % 6 + 4);\n\n  int soma = 0;\n  for (int i = inicio; i <= fim; ++i) {\n    soma += i * i;\n  }\n\n  printf(\"Entrada (inicio fim):\\n%d %d\\n\", inicio, fim);\n  printf(\"Saida esperada (soma_dos_quadrados):\\n%d\\n\", soma);\n\n  return 0;\n}"
        }
      ]
    }
  ],
  "metadata": {
    "status": "published",
    "updatedAt": "2025-10-02T08:28:28.983Z",
    "owners": ["Prof. Tiago Sombra"],
    "sources": [
      "Plano pedagógico Algoritmos I 2025.1",
      "Worksheet loops contados 2025",
      "Planilha de auditoria pós-módulo (aba Laços)"
    ]
  }
}
