{
  "formatVersion": "md3.lesson.v1",
  "id": "lesson-35",
  "title": "Introdução a Structs (Registros)",
  "summary": "Apresenta structs em C como registros compostos e conduz um CRUD básico em memória para consolidar o modelo de dados.",
  "description": "Apresenta structs em C como registros compostos e organiza um CRUD inicial para consolidar o modelo de dados.",
  "objective": "Compreender a declaração, instância e manipulação inicial de structs em C, preparando-se para coleções de registros.",
  "objectives": [
    "Declarar structs com campos adequados ao domínio proposto.",
    "Inicializar e acessar membros por ponto e ponteiros.",
    "Construir um mini-CRUD em memória com ênfase em criação e leitura."
  ],
  "competencies": ["05", "11"],
  "skills": [
    "Definir structs representando registros compostos com campos coerentes.",
    "Implementar operações CRUD em memória validando entrada e saída de dados.",
    "Registrar casos de teste que comprovem a integridade do fluxo de operações."
  ],
  "outcomes": [
    "Entrega módulo com definição de struct e funções para criar, ler, atualizar e remover registros.",
    "Anexa log de testes cobrindo operações bem-sucedidas e tratamento de erros.",
    "Apresenta documentação resumida orientando como utilizar o CRUD implementado."
  ],
  "prerequisites": [
    "Conhecimento de vetores simples (Aula 30).",
    "Noções de funções e passagem de parâmetros."
  ],
  "tags": ["structs", "crud", "revisao"],
  "duration": 115,
  "modality": "in-person",
  "resources": [
    {
      "label": "Moodle — AVA (Unichristus)",
      "type": "platform",
      "url": "https://eadsp.unichristus.edu.br/"
    },
    {
      "label": "Template inicial de struct e impressão",
      "type": "template",
      "file": "courses/algi/struct-cadastro-template.c",
      "url": "https://static.md3.education/courses/algi/struct-cadastro-template.c"
    },
    {
      "label": "Artigo Microsoft Learn - Estruturas em C",
      "type": "article",
      "url": "https://learn.microsoft.com/pt-br/cpp/c-language/c-structures"
    },
    {
      "label": "Rubrica CRUD em memória",
      "type": "rubric",
      "file": "courses/algi/crud-lab-rubrica.md",
      "url": "https://static.md3.education/courses/algi/crud-lab-rubrica.md"
    },
    {
      "label": "OnlineGDB - Projeto C pré-configurado",
      "type": "tool",
      "url": "https://onlinegdb.com/7JwALg8qH"
    },
    {
      "label": "Replit - Workspace Algoritmos I",
      "type": "tool",
      "url": "https://replit.com/@md3-education/algi-template"
    },
    {
      "label": "VS Code - Template C com CMake",
      "type": "repository",
      "url": "https://github.com/md3-education/algi-c-template"
    },
    {
      "label": "Planilha de preparação pré-aula",
      "type": "spreadsheet",
      "url": "https://docs.google.com/spreadsheets/d/1ALGIprepTemplate"
    }
  ],
  "bibliography": [
    "KERNIGHAN, B.; RITCHIE, D. Linguagem de Programação C. 2. ed. Pearson, 2021.",
    "PRESSMAN, R. Engenharia de Software. McGraw Hill, 2023."
  ],
  "content": [
    {
      "type": "callout",
      "variant": "info",
      "title": "Warm-up (pré-aula)",
      "content": [
        {
          "type": "paragraph",
          "text": "Revise o plano de ensino e leia o trecho recomendado em Forbellone & Eberspächer relacionado a Introdução a Structs (Registros). Assista ao vídeo indicado na playlist do Curso em Vídeo e anote dúvidas sobre o conteúdo descrito no sumário."
        },
        {
          "type": "list",
          "items": [
            {
              "text": "Verifique acesso ao OnlineGDB, Replit ou VS Code template para executar exemplos antes da aula."
            },
            {
              "text": "Preencha a planilha de preparação pré-aula com expectativas e dúvidas prioritárias."
            },
            {
              "text": "Confirme no Moodle a leitura das instruções da Aula 35."
            }
          ]
        }
      ]
    },
    {
      "type": "lessonPlan",
      "title": "Roteiro detalhado",
      "cards": [
        {
          "icon": "clock",
          "title": "Aquecimento",
          "content": "Quiz com cinco cenários para identificar campos de dados (10 min)."
        },
        {
          "icon": "database",
          "title": "Sintaxe de struct",
          "content": "Declaração, typedef e alinhamento na memória (25 min)."
        },
        {
          "icon": "code",
          "title": "Manipulação",
          "content": "Atribuições, acesso por ponto/seta e funções auxiliares (20 min)."
        },
        {
          "icon": "gears",
          "title": "Mini-CRUD",
          "content": "Criar e listar registros de Empresas em vetor fixo (35 min)."
        },
        {
          "icon": "check-circle",
          "title": "Retrospectiva",
          "content": "Mapa mental com principais boas práticas (15 min)."
        }
      ]
    },
    {
      "type": "promptTip",
      "title": "Prompt para planejar Introdução a Structs (Registros)",
      "description": "Use com o assistente para gerar roteiros, exemplos e acompanhamentos alinhados à aula.",
      "audience": "docentes de Algoritmos I",
      "prompt": "Você é professor(a) de Algoritmos I preparando Introdução a Structs (Registros). Contexto da aula: Apresenta structs em C como registros compostos e conduz um CRUD básico em memória para consolidar o modelo de dados. Objetivo central: Compreender a declaração, instância e manipulação inicial de structs em C, preparando-se para coleções de registros. Monte um plano dividido em preparação, condução em sala e acompanhamento pós-aula, indicando atividades práticas, exemplos em C ou pseudocódigo e perguntas diagnósticas que ajudem os estudantes a consolidar o conteúdo. Destaque estratégias de diferenciação para apoiar quem avança mais rápido e quem precisa de reforço.",
      "tags": ["algoritmos", "crud", "revisao", "structs"],
      "tips": [
        "Peça variações de atividades que reforcem declarar structs com campos adequados ao domínio proposto.",
        "Solicite exemplos adicionais relacionados a structs, crud.",
        "Gere um checklist final com orientações para monitores acompanharem dúvidas recorrentes.",
        "Peça sugestões de avaliação formativa que evidenciem inicializar e acessar membros por ponto e ponteiros."
      ]
    },
    {
      "type": "lessonPlan",
      "title": "Plano de voo (1h55)",
      "cards": [
        {
          "icon": "check-circle",
          "title": "10 min",
          "content": "Icebreaker com cartões de atributos empresariais."
        },
        {
          "icon": "check-circle",
          "title": "(20 min) Live coding",
          "content": "declaração e inicialização de Empresa."
        },
        {
          "icon": "check-circle",
          "title": "(15 min) Exercício individual",
          "content": "função para imprimir struct formatada."
        },
        {
          "icon": "check-circle",
          "title": "(30 min) Laboratório guiado",
          "content": "operações create/list com vetor local."
        },
        {
          "icon": "check-circle",
          "title": "(20 min) Debriefing",
          "content": "decisões de modelagem e validação de dados."
        },
        {
          "icon": "check-circle",
          "title": "20 min",
          "content": "Check-out com quiz interativo (Kahoot) sobre sintaxe de structs."
        }
      ]
    },
    {
      "type": "contentBlock",
      "title": "Componentes essenciais de um registro",
      "content": [
        {
          "type": "unorderedList",
          "items": [
            {
              "text": "Elemento: Campos | Descrição: Definem as informações necessárias do domínio. | Exemplo: int id; char nome[64]; | Boas práticas: Escolha tipos apropriados e limites realistas."
            },
            {
              "text": "Elemento: Typedef | Descrição: Simplifica a declaração de variáveis do registro. | Exemplo: typedef struct { ... } Empresa; | Boas práticas: Use nomes no singular representando a entidade."
            },
            {
              "text": "Elemento: Funções auxiliares | Descrição: Centralizam operações comuns sobre o registro. | Exemplo: void imprimir(const Empresa *e); | Boas práticas: Evite duplicar prints/formatos no código."
            },
            {
              "text": "Elemento: Constantes | Descrição: Guardam limites e tamanhos máximos. | Exemplo: #define MAX_EMPRESAS 50 | Boas práticas: Documente o motivo do limite em comentários."
            },
            {
              "text": "Elemento: Documentação | Descrição: Explica finalidade e origem dos campos. | Exemplo: // Faturamento médio mensal (R$) | Boas práticas: Padronize comentários para revisão coletiva."
            }
          ]
        }
      ]
    },
    {
      "type": "contentBlock",
      "title": "Prática de laboratório: CRUD em memória",
      "content": [
        {
          "type": "paragraph",
          "text": "Os squads implementam um CRUD mínimo (Create/Read) apenas em memória usando um vetor de structs Empresa. Cada equipe documenta o fluxo em um quadro Kanban simplificado para registrar progresso."
        },
        {
          "type": "orderedList",
          "items": [
            {
              "text": "Modelar struct Empresa alinhada aos dados do SEBRAE/IBGE trabalhados no semestre."
            },
            {
              "text": "Codificar funções create/list, validando tamanhos e duplicidade de id."
            },
            {
              "text": "Preparar checklist de testes exploratórios baseado na rubrica compartilhada."
            }
          ]
        }
      ]
    },
    {
      "type": "callout",
      "variant": "good-practice",
      "title": "Integração com dados oficiais",
      "content": [
        {
          "type": "paragraph",
          "text": "Utilize dados de perfil do Microempreendedor Individual disponíveis no portal do SEBRAE para sugerir campos realistas e discutir ética no uso de dados."
        }
      ]
    },
    {
      "type": "callout",
      "variant": "warning",
      "title": "TED pós-aula",
      "content": [
        {
          "type": "paragraph",
          "text": "Prazo: submeta no Moodle até 23h59 do dia seguinte à aula. Formato: utilize a tarefa 'TED Aula 35' para anexar o artefato solicitado."
        },
        {
          "type": "list",
          "items": [
            {
              "text": "Implemente aula35_structs.c criando struct Aluno e operações básicas de cadastro e listagem."
            },
            {
              "text": "Anexe formulário preenchido com pelo menos três registros e observações sobre cada campo."
            }
          ]
        },
        {
          "type": "paragraph",
          "text": "Rubrica de avaliação"
        },
        {
          "type": "list",
          "items": [
            {
              "text": "Entrega dentro do prazo indicado no Moodle (20%)."
            },
            {
              "text": "Código ou artefato atende integralmente ao enunciado proposto (40%)."
            },
            {
              "text": "Testes e evidências documentadas na planilha ou relatório (25%)."
            },
            {
              "text": "Reflexão ou justificativa clara anexada na submissão (15%)."
            }
          ]
        },
        {
          "type": "paragraph",
          "text": "Registre dúvidas no fórum do Moodle antes do prazo final para receber orientação."
        }
      ]
    },
    {
      "type": "tabs",
      "title": "Struct — definição × uso",
      "tabs": [
        {
          "label": "Definição",
          "code": "typedef struct { char nome[50]; int idade; } Pessoa;",
          "language": "c"
        },
        {
          "label": "Uso",
          "code": "Pessoa p; scanf(\"%s %d\", p.nome, &p.idade);",
          "language": "c"
        }
      ]
    },
    {
      "type": "callout",
      "variant": "academic",
      "title": "Leitura recomendada",
      "content": [
        {
          "type": "list",
          "items": [
            "FORBELLONE, A. L. V.; EBERSPÄCHER, H. F. Algoritmos: Lógica para Desenvolvimento de Programas. Prentice Hall.",
            "MANZANO, J. A. N. G.; OLIVEIRA, J. F. Algoritmos: lógica para desenvolvimento de programação. Érica.",
            "BACKES, A. Linguagem C: completa e descomplicada. Elsevier."
          ]
        }
      ]
    },
    {
      "type": "callout",
      "variant": "info",
      "title": "Casos de teste sugeridos",
      "content": [
        {
          "type": "code",
          "code": "# Struct Pessoa\nEntrada: Ana 20 -> Pessoa{nome=Ana, idade=20}",
          "language": "plaintext"
        }
      ]
    },
    {
      "type": "callout",
      "variant": "warning",
      "title": "Erros comuns e refatorações",
      "content": [
        {
          "type": "list",
          "items": [
            "Leia o enunciado e valide entradas antes de processar.",
            "Inicialize variáveis; evite estados indefinidos."
          ]
        }
      ]
    },
    {
      "type": "callout",
      "variant": "task",
      "title": "Check-out (fechamento rápido)",
      "content": [
        {
          "type": "list",
          "items": ["Registre 1 aprendizado e 1 dúvida.", "Entregue no AVA (campo de texto)."]
        }
      ]
    },
    {
      "type": "callout",
      "variant": "info",
      "title": "Gerador de casos de teste (Python)",
      "content": [
        {
          "type": "code",
          "code": "# Adapte para sua atividade: gere entradas aleatórias e imprima a saída esperada.",
          "language": "python"
        }
      ]
    }
  ],
  "metadata": {
    "status": "draft",
    "updatedAt": "2025-10-02T08:28:29.004Z",
    "owners": ["Equipe Algoritmos I", "Prof. Tiago Sombra"],
    "sources": ["Plano de ensino Algoritmos I 2025.2", "Relatórios SEBRAE 2024"]
  }
}
