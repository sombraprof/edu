{
  "formatVersion": "md3.lesson.v1",
  "id": "lesson-04",
  "title": "Aula 4: Do Pseudocódigo ao Primeiro Programa em C",
  "summary": "Mostra como traduzir algoritmos escritos em Portugol para um programa funcional em C, destacando sintaxe e boas práticas.",
  "objective": "Conectar o planejamento em linguagem natural/pseudocódigo com a implementação inicial em C.",
  "objectives": [
    "Relembrar a estrutura padrão de um algoritmo em Portugol.",
    "Mapear cada parte do pseudocódigo para a sintaxe equivalente em C.",
    "Implementar um programa simples em C a partir de um algoritmo planejado."
  ],
  "competencies": ["05", "08", "11"],
  "skills": [
    "Traduzir instruções escritas em Portugol para blocos equivalentes em C garantindo correspondência de variáveis.",
    "Configurar projeto no compilador, compilar e interpretar mensagens de erro para ajustar o código.",
    "Documentar evidências de testes iniciais registrando entradas utilizadas e resultados esperados."
  ],
  "outcomes": [
    "Entrega tabela comparativa destacando trecho em Portugol e versão final em C sem divergências semânticas.",
    "Compila programa no laboratório sem erros e relata as correções aplicadas para eliminar warnings.",
    "Anexa registro de execução com ao menos três cenários testados e respectivas saídas."
  ],
  "prerequisites": ["Trazer o pseudocódigo produzido na Aula 3."],
  "tags": ["pseudocodigo", "linguagem-c", "implementacao"],
  "duration": 100,
  "modality": "in-person",
  "resources": [
    {
      "label": "Moodle — AVA (Unichristus)",
      "type": "plataforma",
      "url": "https://ava.unichristus.edu.br/"
    }
  ],
  "bibliography": [
    "DEITEL, P.; DEITEL, H. C: Como Programar. Pearson, 2022.",
    "SANTOS, I. Guia rápido de Portugol e C. TechPress, 2021."
  ],
  "assessment": {
    "type": "prática",
    "description": "Prática orientada para fortalecer os conceitos trabalhados em aula. Registre suas soluções e dúvidas para acompanhamento posterior."
  },
  "content": [
    {
      "type": "callout",
      "variant": "info",
      "title": "Warm-up (pré-aula)",
      "content": [
        {
          "type": "paragraph",
          "text": "Revise os materiais desta aula aqui no site e anote os pontos-chave que precisam de atenção. Identifique dúvidas ou conceitos que merecem ser revisitados durante o encontro."
        },
        {
          "type": "list",
          "items": [
            {
              "text": "Reserve alguns minutos para tentar resolver mentalmente um exemplo relacionado ao tema da aula."
            },
            {
              "text": "Garanta acesso ao OnlineGDB ou ao Dev-C++ para experimentar os códigos durante a aula."
            }
          ]
        }
      ]
    },
    {
      "type": "flightPlan",
      "title": "Plano de voo (1h40)",
      "items": [
        "(14 min) Revisão da estrutura de um algoritmo em Portugol.",
        "(23 min) Sintaxe mínima de um programa C: diretivas, função main, variáveis.",
        "(23 min) Tradução guiada de um algoritmo de soma.",
        "(27 min) Laboratório: implementar variações em dupla (média, desconto, conversões).",
        "(13 min) Testes, depuração e checklist de entrega."
      ]
    },
    {
      "type": "contentBlock",
      "title": "Atividade em sala",
      "content": [
        {
          "type": "paragraph",
          "text": "Em duplas ou trios, resolvam as questões a seguir para reforçar o aprendizado durante a aula."
        },
        {
          "type": "orderedList",
          "items": [
            {
              "title": "Questão teórica",
              "text": "Explique com suas palavras os principais conceitos abordados em \"Do Pseudocódigo ao Primeiro Programa em C\" e destaque por que eles são importantes para a resolução de problemas."
            },
            {
              "title": "Questão prática",
              "text": "Implemente ou descreva um exemplo curto relacionado a \"Do Pseudocódigo ao Primeiro Programa em C\" utilizando OnlineGDB ou Dev-C++ e compartilhe o resultado com o grupo."
            }
          ]
        }
      ]
    },
    {
      "type": "videos",
      "title": "Vídeos de apoio",
      "videos": [
        {
          "title": "Linguagem C - Aula 8 - Estude Structs (registros) em C (2022)",
          "src": "https://www.youtube.com/embed/-SgbvUL2UVc"
        },
        {
          "title": "Curso de Programação C | Estrutura de decisão else if encadeados na linguagem C | aula 49",
          "src": "https://www.youtube.com/embed/-ZEsh1E25fw"
        }
      ]
    },
    {
      "type": "promptTip",
      "title": "Prompt para planejar Do Pseudocódigo ao Primeiro Programa em C",
      "description": "Use com o assistente para organizar seus estudos, revisar conteúdos e praticar com exercícios.",
      "audience": "estudantes de Algoritmos I",
      "prompt": "Você é estudante de Algoritmos I estudando Aula 4: Do Pseudocódigo ao Primeiro Programa em C. Contexto da aula: Mostra como traduzir algoritmos escritos em Portugol para um programa funcional em C, destacando sintaxe e boas práticas. Objetivo central: Conectar o planejamento em linguagem natural/pseudocódigo com a implementação inicial em C. Monte um plano de estudo dividido em revisão teórica, prática guiada e autoavaliação, indicando atividades de leitura, exercícios resolvidos em C ou pseudocódigo e perguntas de checagem que ajudem você a consolidar o conteúdo. Sugira estratégias para aprofundar o aprendizado, reforçar pontos frágeis e buscar ajuda quando necessário.",
      "tags": ["algoritmos", "implementacao", "linguagem-c", "pseudocodigo"],
      "tips": [
        "Peça ao assistente variações de exercícios que reforcem relembrar a estrutura padrão de um algoritmo em portugol.",
        "Solicite exemplos adicionais relacionados a pseudocodigo, linguagem-c para praticar.",
        "Peça um checklist final para acompanhar suas dúvidas recorrentes e organizar revisões.",
        "Peça sugestões de autoavaliação que ajudem você a mapear cada parte do pseudocódigo para a sintaxe equivalente em c."
      ]
    },
    {
      "type": "callout",
      "variant": "good-practice",
      "title": "Prepare o ambiente antes de codar",
      "content": [
        {
          "type": "paragraph",
          "text": "Clone o template \"VS Code - Template C com CMake\" listado em Recursos e execute a tarefa Run Build Task uma vez para baixar dependências. O projeto já traz o arquivo main.c, configuração de depuração e script de testes rápidos."
        },
        {
          "type": "paragraph",
          "text": "Prefere navegador? Acesse o vídeo-guia de conversão e deixe-o aberto para consultar as equivalências enquanto transpila o pseudocódigo."
        }
      ]
    },
    {
      "type": "contentBlock",
      "title": "Pseudocódigo como guia",
      "content": [
        {
          "type": "paragraph",
          "text": "O Portugol padroniza entradas, processamento e saídas. Mantemos a mesma estrutura ao migrar para C, apenas adaptando sintaxe e tipos."
        },
        {
          "type": "paragraph",
          "text": "Modelo base em Portugol"
        },
        {
          "type": "code",
          "language": "pseudocode",
          "code": "ALGORITMO \"Processo\"\nVAR\n  variavel : TIPO\nINICIO\n  LEIA(variavel)\n  variavel <- variavel + 1\n  ESCREVA(variavel)\nFIM_ALGORITMO"
        },
        {
          "type": "callout",
          "variant": "info",
          "title": "Observação",
          "content": [
            {
              "type": "paragraph",
              "text": "Use nomes de variáveis significativos e comentários que expliquem decisões."
            }
          ]
        }
      ]
    },
    {
      "type": "contentBlock",
      "title": "Tradução lado a lado",
      "content": [
        {
          "type": "paragraph",
          "text": "Compare os mesmos passos em Portugol e em C."
        },
        {
          "type": "paragraph",
          "text": "Algoritmo em Portugol"
        },
        {
          "type": "code",
          "language": "pseudocode",
          "code": "ALGORITMO \"Soma\"\nVAR\n  num1, num2, soma: INTEIRO\nINICIO\n  ESCREVA(\"Digite o primeiro número: \")\n  LEIA(num1)\n  ESCREVA(\"Digite o segundo número: \")\n  LEIA(num2)\n  soma <- num1 + num2\n  ESCREVA(\"A soma é: \", soma)\nFIM_ALGORITMO"
        },
        {
          "type": "paragraph",
          "text": "Implementação equivalente em C"
        },
        {
          "type": "code",
          "language": "c",
          "code": "#include <stdio.h>\n\nint main(void) {\n  int num1, num2, soma;\n\n  printf(\"Digite o primeiro número: \");\n  scanf(\"%d\", &num1);\n\n  printf(\"Digite o segundo número: \");\n  scanf(\"%d\", &num2);\n\n  soma = num1 + num2;\n  printf(\"A soma é: %d\\n\", soma);\n\n  return 0;\n}"
        },
        {
          "type": "paragraph",
          "text": "Observe como cada comando possui equivalente direto, mas exige atenção à sintaxe e aos tipos utilizados."
        },
        {
          "type": "md3Table",
          "title": "Comparativo MD3: Entrada, Processamento e Saída",
          "headers": ["Etapa", "Portugol", "C"],
          "rows": [
            [
              {
                "value": "Entrada"
              },
              {
                "value": "LEIA(num1, num2)"
              },
              {
                "value": "scanf(\"%d\", &num1); scanf(\"%d\", &num2);"
              }
            ],
            [
              {
                "value": "Processamento"
              },
              {
                "value": "soma <- num1 + num2"
              },
              {
                "value": "soma = num1 + num2;"
              }
            ],
            [
              {
                "value": "Saída"
              },
              {
                "value": "ESCREVA(\"A soma é\", soma)"
              },
              {
                "value": "printf(\"A soma é: %d\\n\", soma);"
              }
            ]
          ]
        }
      ]
    },
    {
      "type": "cardGrid",
      "title": "Diferenças importantes",
      "cards": [
        {
          "title": "Declarações",
          "content": "Em Portugol declaramos no bloco VAR; em C, declaramos após a abertura da função, informando o tipo."
        },
        {
          "title": "Entrada e saída",
          "content": "LEIA/ESCREVA viram scanf/printf; cuide de especificadores (%d, %f) e do operador & para endereços."
        },
        {
          "title": "Comentários",
          "content": "Use // ou /* */ em C para documentar trechos importantes do código."
        }
      ]
    },
    {
      "type": "contentBlock",
      "title": "Laboratório guiado",
      "content": [
        {
          "type": "paragraph",
          "text": "Em dupla, escolham uma variação do problema (média, desconto progressivo ou conversão de temperatura) e traduzam para C."
        },
        {
          "type": "orderedList",
          "items": [
            "Escrevam o algoritmo final em Portugol.",
            "Criem o arquivo .c usando o template fornecido.",
            "Compil em e executem registrando entradas e saídas.",
            "Anotem divergências entre o previsto e o obtido."
          ]
        }
      ]
    },
    {
      "type": "checklist",
      "title": "Checklist de saída",
      "description": "Garanta antes de sair do laboratório:",
      "items": [
        "Traduzi integralmente o algoritmo para C.",
        "Compilei e testei o programa com valores distintos.",
        "Documentei diferenças relevantes entre Portugol e C."
      ]
    },
    {
      "type": "callout",
      "variant": "warning",
      "title": "TED pós-aula",
      "content": [
        {
          "type": "paragraph",
          "text": "Reserve um momento após a aula para concluir a atividade descrita a seguir. Ela complementa os estudos e ajuda a consolidar o que foi trabalhado em sala."
        },
        {
          "type": "list",
          "items": [
            {
              "text": "Desenvolva a prática proposta na aula registrando os passos e resultados no caderno ou no editor de sua preferência."
            },
            {
              "text": "Anote dúvidas e insights que surgirem para discutirmos na próxima aula."
            }
          ]
        }
      ]
    },
    {
      "type": "tabs",
      "title": "Representações: Pseudocódigo × C",
      "tabs": [
        {
          "label": "Pseudocódigo",
          "content": "<pre>ler A, B\nsoma ← A + B\nescrever soma</pre>"
        },
        {
          "label": "C",
          "code": "#include <stdio.h>\nint main(){int a,b; scanf(\"%d %d\",&a,&b); printf(\"%d\\n\", a+b);}",
          "language": "c"
        }
      ]
    },
    {
      "type": "callout",
      "variant": "academic",
      "title": "Leitura recomendada",
      "content": [
        {
          "type": "list",
          "items": [
            "FORBELLONE, A. L. V.; EBERSPÄCHER, H. F. Algoritmos: Lógica para Desenvolvimento de Programas. Prentice Hall.",
            "MANZANO, J. A. N. G.; OLIVEIRA, J. F. Algoritmos: lógica para desenvolvimento de programação. Érica.",
            "BACKES, A. Linguagem C: completa e descomplicada. Elsevier."
          ]
        }
      ]
    },
    {
      "type": "callout",
      "variant": "info",
      "title": "Casos de teste sugeridos",
      "content": [
        {
          "type": "code",
          "code": "# Defina entradas e saídas esperadas para validar seu programa.",
          "language": "plaintext"
        }
      ]
    },
    {
      "type": "callout",
      "variant": "warning",
      "title": "Erros comuns e refatorações",
      "content": [
        {
          "type": "list",
          "items": [
            "Leia o enunciado e valide entradas antes de processar.",
            "Inicialize variáveis; evite estados indefinidos."
          ]
        }
      ]
    },
    {
      "type": "callout",
      "variant": "task",
      "title": "Check-out (fechamento rápido)",
      "content": [
        {
          "type": "list",
          "items": ["Registre 1 aprendizado e 1 dúvida.", "Entregue no AVA (campo de texto)."]
        }
      ]
    },
    {
      "type": "callout",
      "variant": "info",
      "title": "Gerador de casos de teste (C)",
      "content": [
        {
          "type": "code",
          "language": "c",
          "code": "#include <stdio.h>\n#include <stdlib.h>\n#include <time.h>\n\nint main(void) {\n  srand((unsigned)time(NULL));\n\n  float temperaturaC = (float)(rand() % 3510) / 10.0f;\n  float temperaturaF = temperaturaC * 9.0f / 5.0f + 32.0f;\n  float temperaturaK = temperaturaC + 273.15f;\n\n  printf(\"Entrada (temperatura_celsius):\\n%.1f\\n\", temperaturaC);\n  printf(\"Saidas esperadas (fahrenheit kelvin):\\n%.2f %.2f\\n\", temperaturaF, temperaturaK);\n\n  return 0;\n}"
        }
      ]
    }
  ],
  "metadata": {
    "status": "published",
    "updatedAt": "2025-10-02T08:28:28.968Z",
    "owners": ["Prof. Tiago Sombra"],
    "sources": ["Plano pedagógico Algoritmos I 2025.1", "Ata pedagógica de revisão 2024-12"]
  }
}
