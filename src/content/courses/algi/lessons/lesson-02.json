{
  "formatVersion": "md3.lesson.v1",
  "id": "lesson-02",
  "title": "Aula 2: Raciocínio Lógico e Operadores",
  "summary": "Aprofunda o pensamento computacional por meio da decomposição de problemas e da aplicação de operadores lógicos para embasar decisões.",
  "objective": "Traduzir situações cotidianas em estruturas lógicas utilizando operadores AND, OR e NOT.",
  "objectives": [
    "Praticar a decomposição de problemas em passos ordenados.",
    "Reconhecer operadores lógicos e aplicá-los a regras de decisão.",
    "Validar conclusões por meio de tabelas-verdade e simulações."
  ],
  "competencies": ["02", "05", "11"],
  "skills": [
    "Classificar operadores lógicos (E, OU, NÃO) conforme o tipo de decisão exigida pelo problema.",
    "Produzir tabelas-verdade completas que comprovem o comportamento de expressões booleanas.",
    "Documentar em pseudocódigo um algoritmo que combine condições compostas com justificativas de cada ramo."
  ],
  "outcomes": [
    "Apresenta quadro de decomposição destacando decisões, operadores escolhidos e alternativas descartadas.",
    "Resolve ao menos três expressões booleanas verificando resultados com tabelas-verdade anotadas.",
    "Publica pseudocódigo revisado em dupla com comentários que explicam o efeito de cada condição lógica."
  ],
  "prerequisites": ["Revisar o plano de ensino e o conceito de algoritmo da Aula 1."],
  "tags": ["logica", "operadores", "tabela-verdade"],
  "duration": 110,
  "modality": "in-person",
  "resources": [
    {
      "label": "Slides: Operadores lógicos (MC102 - Unicamp)",
      "type": "presentation",
      "url": "https://www.ic.unicamp.br/~ra169722/mc102/slides/03_logica.pdf"
    },
    {
      "label": "Quadro colaborativo online",
      "type": "tool",
      "url": "https://eadsp.unichristus.edu.br/"
    },
    {
      "label": "Gerador de tabela-verdade (labs.dcc.ufmg.br)",
      "type": "tool",
      "url": "https://lab.dcc.ufmg.br/truth-table"
    },
    {
      "label": "Artigo: Operadores lógicos aplicados a algoritmos",
      "type": "article",
      "url": "https://www.devmedia.com.br/logica-de-programacao-operadores-logicos/23821"
    },
    {
      "label": "OnlineGDB - Projeto C pré-configurado",
      "type": "tool",
      "url": "https://onlinegdb.com/7JwALg8qH"
    },
    {
      "label": "Replit - Workspace Algoritmos I",
      "type": "tool",
      "url": "https://replit.com/@md3-education/algi-template"
    },
    {
      "label": "VS Code - Template C com CMake",
      "type": "repository",
      "url": "https://github.com/md3-education/algi-c-template"
    },
    {
      "label": "Planilha de preparação pré-aula",
      "type": "spreadsheet",
      "url": "https://docs.google.com/spreadsheets/d/1ALGIprepTemplate"
    }
  ],
  "bibliography": [
    "MANZANO, J. A. N. G.; OLIVEIRA, J. F. Algoritmos: Lógica para Desenvolvimento de Programas. 28. ed. Saraiva, 2020.",
    "FARIA, M. Pensamento Computacional: do cotidiano ao código. Novatec, 2023."
  ],
  "assessment": {
    "type": "formative",
    "description": "Ficha entregue em dupla com a decomposição de um processo cotidiano e a tabela-verdade da regra decisória principal."
  },
  "content": [
    {
      "type": "callout",
      "variant": "info",
      "title": "Warm-up (pré-aula)",
      "content": [
        {
          "type": "paragraph",
          "text": "Revise o plano de ensino e leia o trecho recomendado em Forbellone & Eberspächer relacionado a Raciocínio Lógico e Operadores. Assista ao vídeo indicado na playlist do Curso em Vídeo e anote dúvidas sobre o conteúdo descrito no sumário."
        },
        {
          "type": "list",
          "items": [
            {
              "text": "Verifique acesso ao OnlineGDB, Replit ou VS Code template para executar exemplos antes da aula."
            },
            {
              "text": "Preencha a planilha de preparação pré-aula com expectativas e dúvidas prioritárias."
            },
            {
              "text": "Confirme no Moodle a leitura das instruções da Aula 02."
            }
          ]
        }
      ]
    },
    {
      "type": "lessonPlan",
      "title": "Plano da Aula",
      "cards": [
        {
          "icon": "book-open",
          "title": "Conteúdo",
          "content": "Decomposição de problemas, operadores lógicos (E, OU, NÃO) e tabelas-verdade."
        },
        {
          "icon": "bullseye",
          "title": "Objetivo",
          "content": "Aplicar operadores lógicos para justificar decisões em algoritmos."
        },
        {
          "icon": "gears",
          "title": "Metodologia",
          "content": "Discussões guiadas, exercícios em quadro colaborativo e atividades práticas em dupla."
        }
      ]
    },
    {
      "type": "flightPlan",
      "title": "Plano de voo (1h50)",
      "items": [
        "(10 min) Aquecimento: revisando o conceito de algoritmo.",
        "(20 min) Decomposição de problemas com exemplos coletivos.",
        "(25 min) Operadores lógicos na prática com situações reais.",
        "(20 min) Construção orientada de tabelas-verdade.",
        "(25 min) Atividade em dupla: descrevendo um processo e validando decisões.",
        "(10 min) Fechamento e TED registrada no Moodle."
      ]
    },
    {
      "type": "promptTip",
      "title": "Prompt para planejar Raciocínio Lógico e Operadores",
      "description": "Use com o assistente para gerar roteiros, exemplos e acompanhamentos alinhados à aula.",
      "audience": "docentes de Algoritmos I",
      "prompt": "Você é professor(a) de Algoritmos I preparando Aula 2: Raciocínio Lógico e Operadores. Contexto da aula: Aprofunda o pensamento computacional por meio da decomposição de problemas e da aplicação de operadores lógicos para embasar decisões. Objetivo central: Traduzir situações cotidianas em estruturas lógicas utilizando operadores AND, OR e NOT. Monte um plano dividido em preparação, condução em sala e acompanhamento pós-aula, indicando atividades práticas, exemplos em C ou pseudocódigo e perguntas diagnósticas que ajudem os estudantes a consolidar o conteúdo. Destaque estratégias de diferenciação para apoiar quem avança mais rápido e quem precisa de reforço.",
      "tags": ["algoritmos", "logica", "operadores", "tabela-verdade"],
      "tips": [
        "Peça variações de atividades que reforcem praticar a decomposição de problemas em passos ordenados.",
        "Solicite exemplos adicionais relacionados a logica, operadores.",
        "Gere um checklist final com orientações para monitores acompanharem dúvidas recorrentes.",
        "Peça sugestões de avaliação formativa que evidenciem reconhecer operadores lógicos e aplicá-los a regras de decisão."
      ]
    },
    {
      "type": "contentBlock",
      "title": "Decompondo problemas",
      "content": [
        {
          "type": "paragraph",
          "text": "Todo algoritmo começa com uma análise cuidadosa do problema. Identificamos entradas, saídas e decisões que afetam o fluxo."
        },
        {
          "type": "subBlock",
          "title": "Exemplo: Organizar um churrasco",
          "items": [
            {
              "type": "paragraph",
              "text": "Listar tarefas e dependências expõe a ordem correta de execução."
            },
            {
              "type": "list",
              "items": [
                "Definir data e número de convidados.",
                "Verificar orçamento disponível.",
                "Comprar alimentos e carvão.",
                "Preparar equipamentos e área de convivência.",
                "Iniciar o fogo apenas após a preparação."
              ]
            },
            {
              "component": "Callout",
              "props": {
                "variant": "task",
                "title": "Dica",
                "content": "Cada passo pode conter decisões internas que exigem operadores lógicos."
              }
            }
          ]
        }
      ]
    },
    {
      "type": "component",
      "component": "Md3LogicOperators"
    },
    {
      "type": "contentBlock",
      "title": "Construindo tabelas-verdade",
      "content": [
        {
          "type": "paragraph",
          "text": "Tabelas-verdade permitem testar todas as combinações de valores e confirmar se uma regra lógica cumpre o objetivo."
        },
        {
          "type": "subBlock",
          "title": "Caso: Autorização de desconto",
          "items": [
            {
              "type": "paragraph",
              "text": "Um cliente recebe desconto se o valor da compra for maior que R$ 200 e (o cliente for VIP ou tiver cupom)."
            },
            {
              "component": "Callout",
              "props": {
                "variant": "info",
                "title": "Tradução",
                "content": "desconto = valorCompra &gt; 200 AND (clienteVIP OR possuiCupom)"
              }
            }
          ]
        },
        {
          "type": "truthTable",
          "title": "Tabela-verdade do desconto",
          "headers": ["Valor &gt; 200", "Cliente VIP", "Tem cupom", "Concede desconto"],
          "rows": [
            [
              {
                "value": 1
              },
              {
                "value": 1
              },
              {
                "value": 1
              },
              {
                "state": "true",
                "display": "Sim"
              }
            ],
            [
              {
                "value": 1
              },
              {
                "value": 1
              },
              {
                "value": 0
              },
              {
                "state": "true",
                "display": "Sim"
              }
            ],
            [
              {
                "value": 1
              },
              {
                "value": 0
              },
              {
                "value": 1
              },
              {
                "state": "true",
                "display": "Sim"
              }
            ],
            [
              {
                "value": 1
              },
              {
                "value": 0
              },
              {
                "value": 0
              },
              {
                "state": "false",
                "display": "Não"
              }
            ],
            [
              {
                "value": 0
              },
              {
                "value": 1
              },
              {
                "value": 1
              },
              {
                "state": "false",
                "display": "Não"
              }
            ],
            [
              {
                "value": 0
              },
              {
                "value": 1
              },
              {
                "value": 0
              },
              {
                "state": "false",
                "display": "Não"
              }
            ],
            [
              {
                "value": 0
              },
              {
                "value": 0
              },
              {
                "value": 1
              },
              {
                "state": "false",
                "display": "Não"
              }
            ],
            [
              {
                "value": 0
              },
              {
                "value": 0
              },
              {
                "value": 0
              },
              {
                "state": "false",
                "display": "Não"
              }
            ]
          ]
        }
      ]
    },
    {
      "type": "contentBlock",
      "title": "Demonstração passo a passo",
      "content": [
        {
          "type": "paragraph",
          "text": "Projete no laboratório o simulador de tabela-verdade indicado nos recursos e resolva com a turma o exemplo do desconto. Alterne os valores das entradas para mostrar como o operador AND reage ao receber uma condição falsa."
        },
        {
          "type": "orderedList",
          "items": [
            {
              "title": "Modelagem em quadro",
              "text": "Desenhe o fluxograma com os ramos \"cliente VIP\" e \"possui cupom\" antes de abrir a ferramenta digital."
            },
            {
              "title": "Simulação no navegador",
              "text": "Digite a expressão no formato ((valor>200) && (clienteVIP || possuiCupom)) e registre a tabela exportada em PDF."
            },
            {
              "title": "Discussão de cenários",
              "text": "Convide duplas a propor mudanças (por exemplo, cupom exclusivo) e repita a simulação para comparar resultados."
            }
          ]
        },
        {
          "component": "Callout",
          "props": {
            "variant": "good-practice",
            "title": "Compartilhe os materiais",
            "content": "Envie o PDF gerado pelo simulador e o fluxograma digitalizado no Moodle para que quem faltou acompanhe o raciocínio."
          }
        }
      ]
    },
    {
      "type": "contentBlock",
      "title": "Prática guiada",
      "content": [
        {
          "type": "paragraph",
          "text": "Em duplas, escolham um processo cotidiano (por exemplo, selecionar transporte para a faculdade) e elaborem:"
        },
        {
          "type": "orderedList",
          "items": [
            "Passos do processo identificando entradas e saídas.",
            "Regras condicionais usando operadores lógicos.",
            "Tabela-verdade para validar a principal decisão."
          ]
        }
      ]
    },
    {
      "type": "videos",
      "title": "Vídeos recomendados",
      "videos": [
        {
          "title": "Operadores lógicos explicados em 10 minutos",
          "src": "https://www.youtube.com/embed/4VVF7qZ_g4E"
        },
        {
          "title": "Tabela verdade na prática",
          "src": "https://www.youtube.com/embed/pwW8sHhY_tg"
        }
      ]
    },
    {
      "type": "checklist",
      "title": "Checklist de saída",
      "description": "Antes de finalizar a aula, confirme se você:",
      "items": [
        "Conseguiu decompor um problema em passos lógicos.",
        "Identificou operadores adequados para cada decisão.",
        "Validou a regra principal com uma tabela-verdade."
      ]
    },
    {
      "type": "callout",
      "variant": "warning",
      "title": "TED pós-aula",
      "content": [
        {
          "type": "paragraph",
          "text": "Prazo: submeta no Moodle até 23h59 do dia seguinte à aula. Formato: utilize a tarefa 'TED Aula 02' para anexar o artefato solicitado."
        },
        {
          "type": "list",
          "items": [
            {
              "text": "Descreva o processo cotidiano escolhido pela dupla indicando entradas, decisões e saídas."
            },
            {
              "text": "Anexe a tabela-verdade construída na aula e destaque a regra crítica que fundamenta a decisão final."
            }
          ]
        },
        {
          "type": "paragraph",
          "text": "Rubrica de avaliação"
        },
        {
          "type": "list",
          "items": [
            {
              "text": "Entrega dentro do prazo indicado no Moodle (20%)."
            },
            {
              "text": "Código ou artefato atende integralmente ao enunciado proposto (40%)."
            },
            {
              "text": "Testes e evidências documentadas na planilha ou relatório (25%)."
            },
            {
              "text": "Reflexão ou justificativa clara anexada na submissão (15%)."
            }
          ]
        },
        {
          "type": "paragraph",
          "text": "Registre dúvidas no fórum do Moodle antes do prazo final para receber orientação."
        }
      ]
    },
    {
      "type": "tabs",
      "title": "Representações: Pseudocódigo × C",
      "tabs": [
        {
          "label": "Pseudocódigo",
          "content": "<pre>ler A, B\nsoma ← A + B\nescrever soma</pre>"
        },
        {
          "label": "C",
          "code": "#include <stdio.h>\nint main(){int a,b; scanf(\"%d %d\",&a,&b); printf(\"%d\\n\", a+b);}",
          "language": "c"
        }
      ]
    },
    {
      "type": "callout",
      "variant": "academic",
      "title": "Leitura recomendada",
      "content": [
        {
          "type": "list",
          "items": [
            "FORBELLONE, A. L. V.; EBERSPÄCHER, H. F. Algoritmos: Lógica para Desenvolvimento de Programas. Prentice Hall.",
            "MANZANO, J. A. N. G.; OLIVEIRA, J. F. Algoritmos: lógica para desenvolvimento de programação. Érica.",
            "BACKES, A. Linguagem C: completa e descomplicada. Elsevier."
          ]
        }
      ]
    },
    {
      "type": "callout",
      "variant": "info",
      "title": "Casos de teste sugeridos",
      "content": [
        {
          "type": "code",
          "code": "# Defina entradas e saídas esperadas para validar seu programa.",
          "language": "plaintext"
        }
      ]
    },
    {
      "type": "callout",
      "variant": "good-practice",
      "title": "Boas práticas",
      "content": [
        {
          "type": "list",
          "items": [
            "Use nomes de variáveis autoexplicativos (ex.: total, media, indice).",
            "Evite números mágicos; use constantes quando apropriado.",
            "Comente trechos que expressem intenção (não o óbvio)."
          ]
        }
      ]
    },
    {
      "type": "callout",
      "variant": "warning",
      "title": "Erros comuns e refatorações",
      "content": [
        {
          "type": "list",
          "items": [
            "Leia o enunciado e valide entradas antes de processar.",
            "Inicialize variáveis; evite estados indefinidos."
          ]
        }
      ]
    },
    {
      "type": "callout",
      "variant": "task",
      "title": "Check-out (fechamento rápido)",
      "content": [
        {
          "type": "list",
          "items": ["Em uma frase: o que é um algoritmo?", "Qual dúvida fica para a próxima aula?"]
        }
      ]
    },
    {
      "type": "flashcards",
      "title": "Flashcards — revisão rápida",
      "shuffle": true,
      "cards": [
        {
          "front": "<b>Algoritmo</b>",
          "back": "Sequência finita de passos para resolver um problema."
        },
        {
          "front": "<b>EPS</b>",
          "back": "Entrada, Processamento, Saída."
        }
      ]
    },
    {
      "type": "glossary",
      "title": "Glossário",
      "items": [
        {
          "term": "Algoritmo",
          "definition": "Sequência finita de instruções."
        },
        {
          "term": "Pseudocódigo",
          "definition": "Representação textual estruturada de um algoritmo."
        }
      ]
    },
    {
      "type": "callout",
      "variant": "info",
      "title": "Gerador de casos de teste (Python)",
      "content": [
        {
          "type": "code",
          "code": "# Adapte para sua atividade: gere entradas aleatórias e imprima a saída esperada.",
          "language": "python"
        }
      ]
    }
  ],
  "metadata": {
    "status": "published",
    "updatedAt": "2025-10-02T08:28:28.965Z",
    "owners": ["Prof. Tiago Sombra"],
    "sources": ["Plano pedagógico Algoritmos I 2025.1", "Ata pedagógica de revisão 2024-12"]
  }
}
