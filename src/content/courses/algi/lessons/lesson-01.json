{
  "formatVersion": "md3.lesson.v1",
  "id": "lesson-01",
  "title": "Aula 1: Introdução à Lógica e Algoritmos",
  "summary": "Apresenta a disciplina, posiciona a lógica como base para resolver problemas computacionais e introduz o ciclo de criação de algoritmos.",
  "objective": "Conhecer o funcionamento do curso, alinhar expectativas e compreender por que a lógica é a linguagem dos computadores.",
  "objectives": [
    "Contextualizar o papel da lógica na resolução de problemas computacionais.",
    "Mapear o funcionamento da disciplina, critérios de avaliação e recursos de apoio.",
    "Experimentar a construção de algoritmos usando passos claros e estruturados."
  ],
  "competencies": ["02", "05", "11"],
  "skills": [
    "Identificar estruturas lógicas presentes em problemas cotidianos e classificá-las como condição, sequência ou repetição.",
    "Descrever passo a passo um algoritmo simples utilizando o ciclo entrada → processamento → saída.",
    "Comunicar expectativas da disciplina, critérios de avaliação e canais de apoio em linguagem objetiva."
  ],
  "outcomes": [
    "Entrega quadro comparativo mapeando pelo menos três situações reais para estruturas lógicas básicas.",
    "Produz algoritmo inicial com entradas, processamento e saídas validadas em dupla com o professor.",
    "Apresenta resumo oral ou escrito explicitando cronograma, instrumentos avaliativos e recursos oferecidos na disciplina."
  ],
  "prerequisites": [
    "Familiaridade básica com o uso de computadores e navegação em ambientes virtuais de aprendizagem."
  ],
  "tags": ["logica", "algoritmos", "planejamento"],
  "duration": 100,
  "modality": "in-person",
  "resources": [
    {
      "label": "Plano de ensino de Algoritmos (UEPG)",
      "type": "document",
      "url": "https://www.uepg.br/cear/wp-content/uploads/sites/4/2020/02/Plano-de-Ensino-Algoritmos.pdf"
    },
    {
      "label": "Moodle institucional",
      "type": "platform",
      "url": "https://eadsp.unichristus.edu.br/"
    },
    {
      "label": "Playlist: Lógica de Programação (Curso em Vídeo)",
      "type": "video",
      "url": "https://www.youtube.com/playlist?list=PLHz_AreHm4dlKP6QQCekuIPky1CiwmdI6"
    },
    {
      "label": "Artigo: Como escrever algoritmos claros",
      "type": "article",
      "url": "https://www.alura.com.br/artigos/como-escrever-algoritmos"
    },
    {
      "label": "OnlineGDB - Projeto C pré-configurado",
      "type": "tool",
      "url": "https://onlinegdb.com/7JwALg8qH"
    },
    {
      "label": "Replit - Workspace Algoritmos I",
      "type": "tool",
      "url": "https://replit.com/@md3-education/algi-template"
    },
    {
      "label": "VS Code - Template C com CMake",
      "type": "repository",
      "url": "https://github.com/md3-education/algi-c-template"
    },
    {
      "label": "Planilha de preparação pré-aula",
      "type": "spreadsheet",
      "url": "https://docs.google.com/spreadsheets/d/1ALGIprepTemplate"
    }
  ],
  "bibliography": [
    "ASCENCIO, A. F.; CAMPOS, E. R. Fundamentos da Programação de Computadores. 3. ed. Pearson, 2022.",
    "FORBELLONE, A. L. V.; EBERSPÄCHER, H. F. Algoritmos: Lógica para Desenvolvimento de Programas. 3. ed. Prentice Hall, 2021."
  ],
  "assessment": {
    "type": "diagnostic",
    "description": "Checklist de participação no check-in inicial e entrega do esboço de algoritmo cotidiano."
  },
  "content": [
    {
      "type": "callout",
      "variant": "info",
      "title": "Warm-up (pré-aula)",
      "content": [
        {
          "type": "paragraph",
          "text": "Revise o plano de ensino e leia o trecho recomendado em Forbellone & Eberspächer relacionado a Introdução à Lógica e Algoritmos. Assista ao vídeo indicado na playlist do Curso em Vídeo e anote dúvidas sobre o conteúdo descrito no sumário."
        },
        {
          "type": "list",
          "items": [
            {
              "text": "Verifique acesso ao OnlineGDB, Replit ou VS Code template para executar exemplos antes da aula."
            },
            {
              "text": "Preencha a planilha de preparação pré-aula com expectativas e dúvidas prioritárias."
            },
            {
              "text": "Confirme no Moodle a leitura das instruções da Aula 01."
            }
          ]
        }
      ]
    },
    {
      "type": "lessonPlan",
      "title": "Plano da Aula",
      "unit": {
        "title": "Unidade I – Noções básicas de lógica e algoritmos",
        "content": "Ambientação na disciplina, revisão das regras de convivência e primeira exploração de como algoritmos descrevem soluções computacionais."
      },
      "cards": [
        {
          "icon": "bullseye",
          "title": "Objetivo Geral",
          "content": "Entender o propósito da disciplina e posicionar a lógica de programação como ferramenta central para resolver problemas reais."
        },
        {
          "icon": "gears",
          "title": "Metodologia",
          "content": "Aula expositiva dialogada com dinâmicas curtas, uso de quadros colaborativos digitais e exercício guiado de tradução de problema em algoritmo."
        },
        {
          "icon": "desktop",
          "title": "Recursos",
          "content": "Projetor, computador do docente, Moodle institucional, quadro branco, fichas de atividades e material de leitura complementar."
        }
      ]
    },
    {
      "type": "flightPlan",
      "title": "Plano de voo (1h40)",
      "items": [
        "(15 min) Check-in e alinhamento do plano de ensino.",
        "(20 min) Conversa guiada: por que algoritmos estão em todo lugar?",
        "(25 min) Mini aula: elementos de um algoritmo e exemplos cotidianos.",
        "(20 min) Oficina rápida: escrevendo um algoritmo para preparar um café.",
        "(10 min) Introdução às representações (pseudocódigo, fluxograma).",
        "(10 min) Tarefa diagnóstica e canais de suporte."
      ]
    },
    {
      "type": "promptTip",
      "title": "Prompt para planejar Introdução à Lógica e Algoritmos",
      "description": "Use com o assistente para organizar seus estudos, revisar conteúdos e praticar com exercícios.",
      "audience": "estudantes de Algoritmos I",
      "prompt": "Você é estudante de Algoritmos I estudando Aula 1: Introdução à Lógica e Algoritmos. Contexto da aula: Apresenta a disciplina, posiciona a lógica como base para resolver problemas computacionais e introduz o ciclo de criação de algoritmos. Objetivo central: Conhecer o funcionamento do curso, alinhar expectativas e compreender por que a lógica é a linguagem dos computadores. Monte um plano de estudo dividido em revisão teórica, prática guiada e autoavaliação, indicando atividades de leitura, exercícios resolvidos em C ou pseudocódigo e perguntas de checagem que ajudem você a consolidar o conteúdo. Sugira estratégias para aprofundar o aprendizado, reforçar pontos frágeis e buscar ajuda quando necessário.",
      "tags": ["algoritmos", "logica", "planejamento"],
      "tips": [
        "Peça ao assistente variações de exercícios que reforcem contextualizar o papel da lógica na resolução de problemas computacionais.",
        "Solicite exemplos adicionais relacionados a logica, algoritmos para praticar.",
        "Peça um checklist final para acompanhar suas dúvidas recorrentes e organizar revisões.",
        "Peça sugestões de autoavaliação que ajudem você a mapear o funcionamento da disciplina, critérios de avaliação e recursos de apoio."
      ]
    },
    {
      "type": "callout",
      "variant": "info",
      "title": "Check-in inicial",
      "content": [
        {
          "type": "paragraph",
          "text": "Partilhe com a turma um processo do seu dia a dia que poderia ser descrito como um algoritmo. Quais passos nunca podem ser esquecidos?"
        }
      ]
    },
    {
      "type": "cardGrid",
      "title": "Elementos de um algoritmo",
      "cards": [
        {
          "title": "Entrada",
          "content": "Dados que iniciam o processo. Podem ser informações fornecidas pelo usuário ou coletadas de sensores."
        },
        {
          "title": "Processamento",
          "content": "Transformações lógicas aplicadas sobre as entradas. Aqui definimos condições, cálculos e regras de negócio."
        },
        {
          "title": "Saída",
          "content": "Resultado entregue após o processamento. Pode ser uma mensagem, um relatório ou uma ação automática."
        }
      ]
    },
    {
      "type": "contentBlock",
      "title": "Da lógica do discurso à lógica dos computadores",
      "content": [
        {
          "type": "paragraph",
          "text": "A lógica formal permite estruturar argumentos sem ambiguidades. Em computação, ela garante que o computador execute exatamente o que foi especificado."
        },
        {
          "type": "paragraph",
          "text": "Todo algoritmo parte de premissas (entradas) e produz uma conclusão (saída). Quando mapeamos estes elementos, criamos instruções confiáveis."
        },
        {
          "type": "subBlock",
          "title": "Estrutura básica de um argumento lógico",
          "items": [
            "Premissas: fatos ou condições que assumimos como verdade.",
            "Regra: relação que conecta as premissas à conclusão.",
            "Conclusão: afirmação resultante da aplicação da regra.",
            {
              "component": "Callout",
              "props": {
                "variant": "good-practice",
                "title": "Exemplo",
                "content": "Se a porta está fechada e há chave na minha mão, então consigo entrar."
              }
            }
          ]
        }
      ]
    },
    {
      "type": "contentBlock",
      "title": "Do problema ao algoritmo",
      "content": [
        {
          "type": "paragraph",
          "text": "Para converter um desafio em algoritmo, decomponha o problema em passos pequenos e observe decisões críticas."
        },
        {
          "component": "OrderedList",
          "props": {
            "items": [
              {
                "title": "Definir o objetivo",
                "text": "Qual resultado final precisa ser entregue?"
              },
              {
                "title": "Identificar entradas",
                "text": "Que informações ou materiais são necessários para começar?"
              },
              {
                "title": "Determinar decisões",
                "text": "Quais perguntas precisam ser respondidas durante o processo?"
              },
              {
                "title": "Sequenciar passos",
                "text": "Ordene as ações do início ao fim, incluindo repetições quando necessário."
              },
              {
                "title": "Testar e ajustar",
                "text": "Simule mentalmente e refine o algoritmo até que nenhuma etapa seja ambígua."
              }
            ]
          }
        }
      ]
    },
    {
      "type": "contentBlock",
      "title": "Demonstração guiada: algoritmo do check-in dos calouros",
      "content": [
        {
          "type": "paragraph",
          "text": "Projete um algoritmo real que você usará com a turma ao receber novos estudantes na coordenação. O objetivo é registrar presença, entregar material e orientar o próximo passo de cada calouro sem perder ninguém pelo caminho."
        },
        {
          "type": "orderedList",
          "items": [
            {
              "title": "Entradas observadas ao vivo",
              "text": "Nome completo, matrícula gerada pelo sistema e confirmação se o termo de ciência foi assinado."
            },
            {
              "title": "Decisões críticas",
              "text": "Se o estudante não assinou o termo, o fluxo envia para a estação de assinatura antes de liberar o kit."
            },
            {
              "title": "Comunicação do resultado",
              "text": "Ao final, o algoritmo gera uma mensagem para o estudante com o local da próxima atividade e envia o registro para o Moodle via formulário integrado."
            }
          ]
        },
        {
          "type": "paragraph",
          "text": "Durante a aula, execute a versão em pseudocódigo mostrada nos slides, compartilhe a planilha modelo e abra o formulário do exemplo para que a turma acompanhe a transição do passo-a-passo para uma implementação digital."
        },
        {
          "component": "Callout",
          "props": {
            "variant": "info",
            "title": "Materiais da demonstração",
            "content": "Slides com pseudocódigo: https://bit.ly/algi-aula1-slides. Planilha de apoio: https://bit.ly/algi-aula1-planilha"
          }
        }
      ]
    },
    {
      "type": "videos",
      "title": "Vídeos de apoio para continuar estudando",
      "videos": [
        {
          "title": "O que é um algoritmo?",
          "src": "https://www.youtube.com/embed/B8R5wT4nLWs"
        },
        {
          "title": "Algoritmos no dia a dia (Prof. Guanabara)",
          "src": "https://www.youtube.com/embed/8mei6uVttho"
        }
      ]
    },
    {
      "type": "component",
      "component": "Md3LogicOperators"
    },
    {
      "type": "callout",
      "variant": "warning",
      "title": "TED pós-aula",
      "content": [
        {
          "type": "paragraph",
          "text": "Prazo: submeta no Moodle até 23h59 do dia seguinte à aula. Formato: utilize a tarefa 'TED Aula 01' para anexar o artefato solicitado."
        },
        {
          "type": "list",
          "items": [
            {
              "text": "Publique no Moodle a ficha de expectativas preenchida (PDF ou foto legível)."
            },
            {
              "text": "Anexe o esboço de algoritmo cotidiano criado em sala com comentários de entrada, processamento e saída."
            }
          ]
        },
        {
          "type": "paragraph",
          "text": "Rubrica de avaliação"
        },
        {
          "type": "list",
          "items": [
            {
              "text": "Entrega dentro do prazo indicado no Moodle (20%)."
            },
            {
              "text": "Código ou artefato atende integralmente ao enunciado proposto (40%)."
            },
            {
              "text": "Testes e evidências documentadas na planilha ou relatório (25%)."
            },
            {
              "text": "Reflexão ou justificativa clara anexada na submissão (15%)."
            }
          ]
        },
        {
          "type": "paragraph",
          "text": "Registre dúvidas no fórum do Moodle antes do prazo final para receber orientação."
        }
      ]
    },
    {
      "type": "tabs",
      "title": "Representações: Pseudocódigo × C",
      "tabs": [
        {
          "label": "Pseudocódigo",
          "content": "<pre>ler A, B\nsoma ← A + B\nescrever soma</pre>"
        },
        {
          "label": "C",
          "code": "#include <stdio.h>\nint main(){int a,b; scanf(\"%d %d\",&a,&b); printf(\"%d\\n\", a+b);}",
          "language": "c"
        }
      ]
    },
    {
      "type": "callout",
      "variant": "academic",
      "title": "Leitura recomendada",
      "content": [
        {
          "type": "list",
          "items": [
            "FORBELLONE, A. L. V.; EBERSPÄCHER, H. F. Algoritmos: Lógica para Desenvolvimento de Programas. Prentice Hall.",
            "MANZANO, J. A. N. G.; OLIVEIRA, J. F. Algoritmos: lógica para desenvolvimento de programação. Érica.",
            "BACKES, A. Linguagem C: completa e descomplicada. Elsevier."
          ]
        }
      ]
    },
    {
      "type": "callout",
      "variant": "info",
      "title": "Casos de teste sugeridos",
      "content": [
        {
          "type": "code",
          "code": "# Defina entradas e saídas esperadas para validar seu programa.",
          "language": "plaintext"
        }
      ]
    },
    {
      "type": "callout",
      "variant": "good-practice",
      "title": "Boas práticas",
      "content": [
        {
          "type": "list",
          "items": [
            "Use nomes de variáveis autoexplicativos (ex.: total, media, indice).",
            "Evite números mágicos; use constantes quando apropriado.",
            "Comente trechos que expressem intenção (não o óbvio)."
          ]
        }
      ]
    },
    {
      "type": "callout",
      "variant": "warning",
      "title": "Erros comuns e refatorações",
      "content": [
        {
          "type": "list",
          "items": [
            "Leia o enunciado e valide entradas antes de processar.",
            "Inicialize variáveis; evite estados indefinidos."
          ]
        }
      ]
    },
    {
      "type": "callout",
      "variant": "task",
      "title": "Check-out (fechamento rápido)",
      "content": [
        {
          "type": "list",
          "items": ["Em uma frase: o que é um algoritmo?", "Qual dúvida fica para a próxima aula?"]
        }
      ]
    },
    {
      "type": "flashcards",
      "title": "Flashcards — revisão rápida",
      "shuffle": true,
      "cards": [
        {
          "front": "<b>Algoritmo</b>",
          "back": "Sequência finita de passos para resolver um problema."
        },
        {
          "front": "<b>EPS</b>",
          "back": "Entrada, Processamento, Saída."
        }
      ]
    },
    {
      "type": "glossary",
      "title": "Glossário",
      "items": [
        {
          "term": "Algoritmo",
          "definition": "Sequência finita de instruções."
        },
        {
          "term": "Pseudocódigo",
          "definition": "Representação textual estruturada de um algoritmo."
        }
      ]
    },
    {
      "type": "callout",
      "variant": "info",
      "title": "Gerador de casos de teste (Python)",
      "content": [
        {
          "type": "code",
          "code": "# Adapte para sua atividade: gere entradas aleatórias e imprima a saída esperada.",
          "language": "python"
        }
      ]
    },
    {
      "type": "checklist",
      "title": "Exercícios propostos",
      "items": [
        "Descreva, em até 10 linhas, um algoritmo do seu dia a dia (EPS).",
        "Compare com um colega e refine etapas ambíguas."
      ]
    }
  ],
  "metadata": {
    "status": "published",
    "updatedAt": "2025-10-02T08:28:28.957Z",
    "owners": ["Prof. Tiago Sombra"],
    "sources": ["Plano pedagógico Algoritmos I 2025.1", "Ata pedagógica de revisão 2024-12"]
  }
}
