{
  "formatVersion": "md3.lesson.v1",
  "id": "lesson-08",
  "title": "Aula 8: Leituras múltiplas, cálculos encadeados e printf",
  "summary": "Consolida o fluxo Entrada → Processamento → Saída combinando leituras com scanf, variáveis intermediárias para cálculos e formatação profissional com printf.",
  "objective": "Construir programas sequenciais completos que recebem múltiplos dados, processam com clareza e exibem resultados formatados.",
  "objectives": [
    "Construir programas sequenciais em C que realizem múltiplas leituras e saídas formatadas.",
    "Aplicar operações aritméticas encadeadas preservando a ordem correta de execução.",
    "Validar dados lidos com scanf assegurando armazenamento em variáveis adequadas."
  ],
  "competencies": ["05", "08", "11"],
  "skills": [
    "Encadear leituras com scanf garantindo o uso correto de endereços e especificadores.",
    "Organizar variáveis intermediárias para cálculos encadeados mantendo nomes significativos.",
    "Formatar saídas com printf destacando resultados, unidades e mensagens interpretáveis."
  ],
  "outcomes": [
    "Entrega programa que registra ao menos três leituras, cálculos associados e recibo formatado.",
    "Documenta tabela relacionando cada variável a seu papel no fluxo entrada → processamento → saída.",
    "Apresenta vídeo curto ou relatório textual explicando como validar dados extremos e ajustar mensagens."
  ],
  "prerequisites": ["Reforçar leitura e declaração de variáveis vistas nas aulas 5 e 6."],
  "tags": ["sequencial", "scanf", "printf"],
  "duration": 100,
  "modality": "in-person",
  "resources": [
    {
      "label": "Moodle — AVA (Unichristus)",
      "type": "plataforma",
      "url": "https://ava.unichristus.edu.br/"
    }
  ],
  "bibliography": [
    "PERRY, G. C Completo e Total. Novatec, 2021.",
    "BACKES, A. Linguagem C: Completa e Descomplicada. Elsevier, 2019.",
    "MANZANO, J. A. N. G.; OLIVEIRA, J. F. Algoritmos. Érica, 2019."
  ],
  "assessment": {
    "type": "prática",
    "description": "Prática orientada para fortalecer os conceitos trabalhados em aula. Registre suas soluções e dúvidas para acompanhamento posterior."
  },
  "content": [
    {
      "type": "callout",
      "variant": "info",
      "title": "Warm-up (pré-aula)",
      "content": [
        {
          "type": "paragraph",
          "text": "Revise os materiais desta aula aqui no site e anote os pontos-chave que precisam de atenção. Identifique dúvidas ou conceitos que merecem ser revisitados durante o encontro."
        },
        {
          "type": "list",
          "items": [
            {
              "text": "Reserve alguns minutos para tentar resolver mentalmente um exemplo relacionado ao tema da aula."
            },
            {
              "text": "Garanta acesso ao OnlineGDB ou ao Dev-C++ para experimentar os códigos durante a aula."
            }
          ]
        }
      ]
    },
    {
      "type": "lessonPlan",
      "title": "Plano da aula",
      "cards": [
        {
          "icon": "book-open",
          "title": "Conteúdo",
          "content": "Entrada com scanf, variáveis intermediárias, máscaras printf e recibo sequencial."
        },
        {
          "icon": "bullseye",
          "title": "Objetivo",
          "content": "Conectar leitura, processamento e saída em um fluxo contínuo sem ambiguidades."
        },
        {
          "icon": "gears",
          "title": "Metodologia",
          "content": "Demonstração guiada, prática em pares e revisão coletiva do recibo."
        }
      ]
    },
    {
      "type": "flightPlan",
      "title": "Plano de voo (1h40)",
      "items": [
        "(11 min) Aquecimento: revisando Entrada → Processamento → Saída.",
        "(18 min) Leituras múltiplas com scanf (strings, floats e chars).",
        "(14 min) Variáveis intermediárias e cálculo passo a passo.",
        "(14 min) Máscaras printf, alinhamento e caracteres de escape.",
        "(22 min) Oficina de recibo em duplas.",
        "(7 min) Apresentação rápida dos recibos.",
        "(14 min) TED e encaminhamentos finais."
      ]
    },
    {
      "type": "contentBlock",
      "title": "Atividade em sala",
      "content": [
        {
          "type": "paragraph",
          "text": "Em duplas ou trios, resolvam as questões a seguir para reforçar o aprendizado durante a aula."
        },
        {
          "type": "orderedList",
          "items": [
            {
              "title": "Questão teórica",
              "text": "Explique com suas palavras os principais conceitos abordados em \"Leituras múltiplas, cálculos encadeados e printf\" e destaque por que eles são importantes para a resolução de problemas."
            },
            {
              "title": "Questão prática",
              "text": "Implemente ou descreva um exemplo curto relacionado a \"Leituras múltiplas, cálculos encadeados e printf\" utilizando OnlineGDB ou Dev-C++ e compartilhe o resultado com o grupo."
            }
          ]
        }
      ]
    },
    {
      "type": "promptTip",
      "title": "Prompt para planejar Leituras múltiplas, cálculos encadeados e printf",
      "description": "Use com o assistente para organizar seus estudos, revisar conteúdos e praticar com exercícios.",
      "audience": "estudantes de Algoritmos I",
      "prompt": "Você é estudante de Algoritmos I estudando Aula 8: Leituras múltiplas, cálculos encadeados e printf. Contexto da aula: Consolida o fluxo Entrada → Processamento → Saída combinando leituras com scanf, variáveis intermediárias para cálculos e formatação profissional com printf. Objetivo central: Construir programas sequenciais completos que recebem múltiplos dados, processam com clareza e exibem resultados formatados. Monte um plano de estudo dividido em revisão teórica, prática guiada e autoavaliação, indicando atividades de leitura, exercícios resolvidos em C ou pseudocódigo e perguntas de checagem que ajudem você a consolidar o conteúdo. Sugira estratégias para aprofundar o aprendizado, reforçar pontos frágeis e buscar ajuda quando necessário.",
      "tags": ["algoritmos", "printf", "scanf", "sequencial"],
      "tips": [
        "Peça ao assistente variações de exercícios que reforcem construir programas sequenciais em c que realizem múltiplas leituras e saídas formatadas.",
        "Solicite exemplos adicionais relacionados a sequencial, scanf para praticar.",
        "Peça um checklist final para acompanhar suas dúvidas recorrentes e organizar revisões.",
        "Peça sugestões de autoavaliação que ajudem você a aplicar operações aritméticas encadeadas preservando a ordem correta de execução."
      ]
    },
    {
      "type": "contentBlock",
      "title": "Leitura múltipla com scanf",
      "content": [
        {
          "type": "paragraph",
          "text": "scanf permite capturar vários valores em uma única chamada. A ordem dos especificadores precisa refletir o tipo de cada variável."
        },
        {
          "type": "code",
          "language": "c",
          "code": "float preco1, preco2;\nint quantidade;\nprintf(\"Informe dois preços e a quantidade: \");\nscanf(\"%f %f %d\", &preco1, &preco2, &quantidade);"
        },
        {
          "type": "paragraph",
          "text": "O operador & indica o endereço onde o valor será armazenado. Sem ele, o programa não conseguirá alterar a variável."
        }
      ]
    },
    {
      "type": "callout",
      "variant": "warning",
      "title": "Cuidados com o buffer",
      "content": [
        {
          "type": "list",
          "ordered": false,
          "items": [
            "Consuma o \\n pendente antes de ler char ou string.",
            "Garanta que o especificador corresponde ao tipo declarado.",
            "Valide o retorno de scanf quando o dado vier de arquivos."
          ]
        }
      ]
    },
    {
      "type": "contentBlock",
      "title": "Variáveis intermediárias esclarecem o fluxo",
      "content": [
        {
          "type": "paragraph",
          "text": "Em cálculos encadeados, criar variáveis com nomes descritivos torna o passo a passo legível e facilita ajustes."
        },
        {
          "type": "code",
          "language": "c",
          "code": "float subtotal, desconto, total;\nsubtotal = preco1 + preco2;\ndesconto = subtotal * 0.10f;\ntotal = subtotal - desconto;"
        }
      ]
    },
    {
      "type": "contentBlock",
      "title": "Encadeando leituras e cálculos",
      "content": [
        {
          "type": "orderedList",
          "items": [
            "Leia primeiro todos os dados brutos (preço, quantidade, descontos).",
            "Crie variáveis para armazenar cada subtotal antes de aplicar novos fatores.",
            "Atualize o recibo a cada etapa, imprimindo valores intermediários para validar.",
            "Teste sequências alternativas (com ou sem desconto) para garantir consistência."
          ]
        },
        {
          "type": "code",
          "language": "c",
          "code": "float base, descontoPromocional, descontoFidelidade, total;\nscanf(\"%f %f %f\", &base, &descontoPromocional, &descontoFidelidade);\nfloat etapa1 = base - descontoPromocional;\nfloat etapa2 = etapa1 - (etapa1 * descontoFidelidade / 100.0f);\nprintf(\"Subtotal: %.2f\\n\", etapa1);\nprintf(\"Total final: %.2f\\n\", etapa2);"
        }
      ]
    },
    {
      "type": "callout",
      "variant": "good-practice",
      "title": "Máscaras printf úteis",
      "content": [
        {
          "type": "paragraph",
          "text": "Combine largura e casas decimais para simular colunas:"
        },
        {
          "type": "list",
          "ordered": false,
          "items": [
            "%8.2f → oito espaços com duas casas.",
            "%03d → inteiro com zeros à esquerda.",
            "%-20s → texto alinhado à esquerda."
          ]
        }
      ]
    },
    {
      "type": "md3Table",
      "headers": ["Máscara", "Descrição", "Exemplo de saída"],
      "rows": [
        [
          {
            "value": "%.2f",
            "mono": true
          },
          {
            "value": "Duas casas decimais"
          },
          {
            "value": "R$ 12.50",
            "code": true
          }
        ],
        [
          {
            "value": "%8.2f",
            "mono": true
          },
          {
            "value": "Alinha números em tabela"
          },
          {
            "value": "    85.40",
            "code": true
          }
        ],
        [
          {
            "value": "%010.2f",
            "mono": true
          },
          {
            "value": "Preenche com zeros até 10 caracteres"
          },
          {
            "value": "0000123.45",
            "code": true
          }
        ],
        [
          {
            "value": "%d%%",
            "mono": true
          },
          {
            "value": "Imprime símbolo de porcentagem"
          },
          {
            "value": "10%",
            "code": true
          }
        ],
        [
          {
            "value": "%#x",
            "mono": true
          },
          {
            "value": "Inteiro em hexadecimal com prefixo 0x"
          },
          {
            "value": "0x7b",
            "code": true
          }
        ],
        [
          {
            "value": "%-12s",
            "mono": true
          },
          {
            "value": "Texto alinhado à esquerda"
          },
          {
            "value": "Produto A    ",
            "code": true
          }
        ]
      ]
    },
    {
      "type": "contentBlock",
      "title": "Oficina: recibo de compras",
      "content": [
        {
          "type": "orderedList",
          "items": [
            "Ler três produtos com preço e quantidade.",
            "Calcular subtotais, total e desconto progressivo (10%).",
            "Imprimir um recibo alinhado com cabeçalho, corpo e rodapé.",
            "Registrar comentários explicando Entrada, Processamento e Saída."
          ]
        },
        {
          "type": "code",
          "language": "c",
          "code": "printf(\"--- RECIBO ---\\n\");\nprintf(\"%-12s %3s %10s\\n\", \"Produto\", \"Qtd\", \"Subtotal\");\nprintf(\"%-12s %3d R$ %8.2f\\n\", nome1, qtd1, subtotal1);"
        }
      ]
    },
    {
      "type": "contentBlock",
      "title": "Template completo de recibo",
      "content": [
        {
          "type": "code",
          "language": "c",
          "code": "#include <stdio.h>\n\nint main(void) {\n  char produto1[30], produto2[30];\n  int qtd1, qtd2;\n  float preco1, preco2;\n\n  printf(\"Item, quantidade e preço: \");\n  scanf(\"%29s %d %f\", produto1, &qtd1, &preco1);\n  printf(\"Item, quantidade e preço: \");\n  scanf(\"%29s %d %f\", produto2, &qtd2, &preco2);\n\n  float subtotal1 = qtd1 * preco1;\n  float subtotal2 = qtd2 * preco2;\n  float subtotal = subtotal1 + subtotal2;\n  float desconto = subtotal * 0.10f;\n  float total = subtotal - desconto;\n\n  printf(\"\\n--- RECIBO DIGITAL ---\\n\");\n  printf(\"%-12s %3s %10s\\n\", \"Produto\", \"Qtd\", \"Subtotal\");\n  printf(\"%-12s %3d R$ %8.2f\\n\", produto1, qtd1, subtotal1);\n  printf(\"%-12s %3d R$ %8.2f\\n\", produto2, qtd2, subtotal2);\n  printf(\"---------------------------\\n\");\n  printf(\"Subtotal:      R$ %8.2f\\n\", subtotal);\n  printf(\"Desconto (10%%): R$ %8.2f\\n\", desconto);\n  printf(\"TOTAL:         R$ %8.2f\\n\", total);\n  return 0;\n}\n"
        }
      ]
    },
    {
      "type": "callout",
      "variant": "error",
      "title": "Comprovação visual obrigatória",
      "content": [
        {
          "type": "paragraph",
          "text": "Capture o console exibindo o recibo final e o código utilizado lado a lado antes de enviar a atividade."
        },
        {
          "type": "list",
          "items": [
            {
              "text": "Mostre pelo menos dois cenários diferentes (com desconto e sem desconto adicional)."
            },
            {
              "text": "Garanta que a máscara printf usada apareça claramente na captura."
            },
            {
              "text": "Nomeie o arquivo da evidência como screenshot_aula08.png e anexe ao Moodle."
            }
          ]
        }
      ]
    },
    {
      "type": "contentBlock",
      "title": "Tarefa da semana",
      "content": [
        {
          "type": "paragraph",
          "text": "Implemente individualmente um programa que leia três lançamentos financeiros, calcule descontos sucessivos e exporte um relatório com totais e percentual economizado."
        },
        {
          "type": "paragraph",
          "text": "Publique o arquivo .c no Moodle até domingo 23h59 com comentários em inglês para cada etapa."
        }
      ]
    },
    {
      "type": "videos",
      "title": "Vídeos de apoio",
      "videos": [
        {
          "title": "Entrada e saída em C",
          "src": "https://www.youtube.com/embed/uX0r1JlyDFg"
        },
        {
          "title": "Formatando printf na prática",
          "src": "https://www.youtube.com/embed/0EEXxcTa7Ok"
        }
      ]
    },
    {
      "type": "checklist",
      "title": "Ao final da aula você consegue",
      "items": [
        "Ler múltiplos valores com uma única chamada scanf.",
        "Organizar cálculos em etapas reutilizáveis.",
        "Escolher máscaras printf adequadas para cada campo.",
        "Produzir recibos claros com totais e descontos."
      ]
    },
    {
      "type": "callout",
      "variant": "warning",
      "title": "TED pós-aula",
      "content": [
        {
          "type": "paragraph",
          "text": "Reserve um momento após a aula para concluir a atividade descrita a seguir. Ela complementa os estudos e ajuda a consolidar o que foi trabalhado em sala."
        },
        {
          "type": "list",
          "items": [
            {
              "text": "Desenvolva a prática proposta na aula registrando os passos e resultados no caderno ou no editor de sua preferência."
            },
            {
              "text": "Anote dúvidas e insights que surgirem para discutirmos na próxima aula."
            }
          ]
        }
      ]
    },
    {
      "type": "stepper",
      "title": "Modelo Entrada → Processamento → Saída",
      "steps": [
        {
          "title": "Entrada",
          "description": "Ler dados do usuário (scanf) e validar."
        },
        {
          "title": "Processamento",
          "description": "Aplicar cálculos e regras de negócio."
        },
        {
          "title": "Saída",
          "description": "Exibir resultados formatados (printf)."
        }
      ]
    },
    {
      "type": "callout",
      "variant": "academic",
      "title": "Leitura recomendada",
      "content": [
        {
          "type": "list",
          "items": [
            "FORBELLONE, A. L. V.; EBERSPÄCHER, H. F. Algoritmos: Lógica para Desenvolvimento de Programas. Prentice Hall.",
            "MANZANO, J. A. N. G.; OLIVEIRA, J. F. Algoritmos: lógica para desenvolvimento de programação. Érica.",
            "BACKES, A. Linguagem C: completa e descomplicada. Elsevier."
          ]
        }
      ]
    },
    {
      "type": "callout",
      "variant": "info",
      "title": "Casos de teste sugeridos",
      "content": [
        {
          "type": "code",
          "code": "# Entrada → Saída\n100 10 -> 90.00\n250 5 -> 237.50",
          "language": "plaintext"
        }
      ]
    },
    {
      "type": "callout",
      "variant": "warning",
      "title": "Erros comuns e refatorações",
      "content": [
        {
          "type": "list",
          "items": [
            "Leia o enunciado e valide entradas antes de processar.",
            "Inicialize variáveis; evite estados indefinidos."
          ]
        }
      ]
    },
    {
      "type": "callout",
      "variant": "academic",
      "title": "Solução de referência",
      "content": [
        {
          "type": "code",
          "code": "#include <stdio.h>\nint main(){\n  float preco, desc;\n  if (scanf(\"%f %f\", &preco, &desc)!=2) return 1;\n  float final = preco - (preco*desc/100.0f);\n  printf(\"%.2f\n\", final);\n  return 0;\n}",
          "language": "c"
        }
      ]
    },
    {
      "type": "callout",
      "variant": "task",
      "title": "Check-out (fechamento rápido)",
      "content": [
        {
          "type": "list",
          "items": [
            "Qual parte do EPS te gerou mais dúvidas?",
            "Cite um caso de teste que você usou."
          ]
        }
      ]
    },
    {
      "type": "callout",
      "variant": "info",
      "title": "Gerador de casos de teste (C)",
      "content": [
        {
          "type": "code",
          "language": "c",
          "code": "#include <stdio.h>\n#include <stdlib.h>\n#include <time.h>\n\nint main(void) {\n  srand((unsigned)time(NULL));\n\n  double salarioBase = (double)(rand() % 4001 + 1200);\n  double vendas = (double)(rand() % 8001 + 500);\n  double bonusPercentual = (double)(rand() % 11 + 5) / 100.0;\n\n  double comissao = vendas * bonusPercentual;\n  double salarioFinal = salarioBase + comissao;\n\n  printf(\"Entrada (salario_base vendas percentual_bonus):\\n%.2f %.2f %.2f\\n\", salarioBase, vendas, bonusPercentual * 100.0);\n  printf(\"Saidas esperadas:\\n- comissao = %.2f\\n- salario_final = %.2f\\n\", comissao, salarioFinal);\n\n  return 0;\n}"
        }
      ]
    }
  ],
  "metadata": {
    "status": "published",
    "updatedAt": "2025-10-02T08:28:28.972Z",
    "owners": ["Prof. Tiago Sombra"],
    "sources": ["Plano pedagógico Algoritmos I 2025.1", "Ata pedagógica de revisão 2024-12"]
  }
}
