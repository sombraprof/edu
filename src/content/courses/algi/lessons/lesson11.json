{
  "id": "lesson11",
  "title": "Aula 11: Sele√ß√£o M√∫ltipla com <code>switch-case</code>",
  "objective": "Organizando decis√µes complexas de forma limpa e eficiente.",
  "content": [
    {
      "type": "lessonPlan",
      "title": "Plano da Aula",
      "cards": [
        {
          "icon": "book-open",
          "title": "CONTE√öDO",
          "content": "Estrutura de sele√ß√£o m√∫ltipla <code>switch-case</code>, a import√¢ncia do <code>break</code> e do <code>default</code>, e a compara√ß√£o com cadeias de <code>if-else if</code>."
        },
        {
          "icon": "bullseye",
          "title": "OBJETIVO",
          "content": "Escrever programas em C que selecionem um entre v√°rios blocos de c√≥digo com base no valor de uma vari√°vel, utilizando <code>switch-case</code> de forma eficiente."
        },
        {
          "icon": "gears",
          "title": "METODOLOGIA",
          "content": "Aula expositiva com exemplos progressivos, demonstra√ß√£o de casos de uso e atividade pr√°tica em duplas para criar programas de sele√ß√£o m√∫ltipla."
        }
      ]
    },
    {
      "type": "flightPlan",
      "title": "Plano de Voo da Aula de Hoje",
      "items": [
        "A transi√ß√£o de programas sequenciais para programas din√¢micos.",
        "A estrutura <code>if</code>: como executar c√≥digo apenas se uma condi√ß√£o for verdadeira.",
        "A estrutura <code>if-else</code>: a bifurca√ß√£o que permite escolher entre dois caminhos.",
        "A estrutura <code>else if</code>: criando m√∫ltiplos caminhos para decis√µes complexas.",
        "Atividade pr√°tica em duplas: resolvendo problemas com condicionais.",
        "Apresenta√ß√£o da tarefa (TED) da Aula 10."
      ]
    },
    {
      "type": "contentBlock",
      "title": "Quando o \"if-else\" n√£o √© suficiente?",
      "content": [
        {
          "type": "paragraph",
          "text": "Na √∫ltima aula, vimos como o <code>else if</code> nos permite criar m√∫ltiplos caminhos. No entanto, quando todas as compara√ß√µes s√£o feitas contra a <strong>mesma vari√°vel</strong>, o c√≥digo pode ficar repetitivo e menos leg√≠vel."
        },
        {
          "type": "paragraph",
          "text": "Imagine um menu onde o utilizador digita um n√∫mero para escolher uma op√ß√£o. Usar <code>if (opcao == 1)</code>, <code>else if (opcao == 2)</code>, <code>else if (opcao == 3)</code>... funciona, mas n√£o √© elegante."
        },
        {
          "type": "paragraph",
          "text": "O <code>switch-case</code> √© uma estrutura de controlo desenhada exatamente para esta situa√ß√£o: selecionar um bloco de c√≥digo para executar com base no valor de uma √∫nica vari√°vel ou express√£o."
        }
      ]
    },
    {
      "type": "contentBlock",
      "title": "Anatomia do \"switch-case\"",
      "content": [
        {
          "type": "paragraph",
          "text": "A estrutura <code>switch</code> avalia uma vari√°vel e \"salta\" para o <code>case</code> que corresponde ao valor encontrado."
        },
        {
          "type": "code",
          "language": "c",
          "code": "switch (variavel_ou_expressao) {\n    case valor1:\n        // Bloco de c√≥digo para o valor1\n        break;\n    case valor2:\n        // Bloco de c√≥digo para o valor2\n        break;\n    // ... outros cases\n    default:\n        // Bloco de c√≥digo se nenhum case corresponder\n        break;\n}"
        },
        {
          "type": "subBlock",
          "title": "Anatomia",
          "items": [
            "<ul><li><strong><code>switch (variavel)</code>:</strong> A vari√°vel (do tipo <code>int</code> ou <code>char</code>) que ser√° avaliada.</li><li><strong><code>case valor:</code>:</strong> Um r√≥tulo que representa um poss√≠vel valor para a vari√°vel. O valor deve ser uma constante.</li><li><strong><code>break;</code>:</strong> **Essencial!** Interrompe a execu√ß√£o do <code>switch</code>. Sem ele, o c√≥digo continuaria a executar os <code>case</code>s seguintes (comportamento \"fall-through\").</li><li><strong><code>default:</code>:</strong> Opcional. Funciona como o <code>else</code> final, executando se nenhum dos <code>case</code>s anteriores corresponder ao valor da vari√°vel.</li></ul>"
          ]
        }
      ]
    },
    {
      "type": "contentBlock",
      "title": "Exemplo Pr√°tico 1: Menu de Op√ß√µes",
      "content": [
        {
          "type": "paragraph",
          "text": "Vamos implementar um menu de op√ß√µes simples, um dos usos mais comuns para o <code>switch-case</code>."
        },
        {
          "type": "code",
          "language": "c",
          "code": "#include <stdio.h>\n\nint main() {\n    int opcao;\n\n    printf(\"--- MENU ---\\n\");\n    printf(\"1 - Cadastrar\\n\");\n    printf(\"2 - Listar\\n\");\n    printf(\"3 - Sair\\n\");\n    printf(\"Escolha uma opcao: \");\n    scanf(\"%d\", &opcao);\n\n    switch (opcao) {\n        case 1:\n            printf(\"Voce escolheu a opcao CADASTRAR.\\n\");\n            // Aqui entraria a l√≥gica de cadastro\n            break;\n        case 2:\n            printf(\"Voce escolheu a opcao LISTAR.\\n\");\n            // Aqui entraria a l√≥gica de listagem\n            break;\n        case 3:\n            printf(\"A sair do programa...\\n\");\n            break;\n        default:\n            printf(\"Opcao invalida!\\n\");\n            break;\n    }\n\n    return 0;\n}\n"
        }
      ]
    },
    {
      "type": "contentBlock",
      "title": "Agrupando \"cases\"",
      "content": [
        {
          "type": "paragraph",
          "text": "Uma t√©cnica poderosa √© agrupar v√°rios <code>case</code>s para que executem o mesmo bloco de c√≥digo. Como a execu√ß√£o continua at√© encontrar um <code>break</code>, podemos omiti-lo para criar este efeito."
        },
        {
          "type": "subBlock",
          "title": "Exemplo: Dias do M√™s",
          "items": [
            "<p>Este programa l√™ o n√∫mero de um m√™s e informa quantos dias ele tem (ignorando anos bissextos).</p>"
          ]
        },
        {
          "type": "code",
          "language": "c",
          "code": "#include <stdio.h>\n\nint main() {\n    int mes;\n    printf(\"Digite o numero do mes (1-12): \");\n    scanf(\"%d\", &mes);\n\n    switch (mes) {\n        // Meses com 31 dias\n        case 1:\n        case 3:\n        case 5:\n        case 7:\n        case 8:\n        case 10:\n        case 12:\n            printf(\"Este mes tem 31 dias.\\n\");\n            break;\n\n        // Meses com 30 dias\n        case 4:\n        case 6:\n        case 9:\n        case 11:\n            printf(\"Este mes tem 30 dias.\\n\");\n            break;\n\n        // Caso especial: Fevereiro\n        case 2:\n            printf(\"Este mes tem 28 ou 29 dias.\\n\");\n            break;\n\n        default:\n            printf(\"Mes invalido!\\n\");\n            break;\n    }\n\n    return 0;\n}\n"
        }
      ]
    },
    {
      "type": "contentBlock",
      "title": "Atividade Pr√°tica em Duplas",
      "content": [
        {
          "type": "paragraph",
          "text": "Em duplas, criem um programa que leia um √∫nico caractere representando o estado civil de uma pessoa (<code>S</code> para Solteiro, <code>C</code> para Casado, <code>V</code> para Vi√∫vo, <code>D</code> para Divorciado) e imprima o estado civil por extenso."
        },
        {
          "type": "callout",
          "variant": "good-practice",
          "title": "Dica",
          "content": "<p>O <code>switch</code> tamb√©m funciona com o tipo <code>char</code>. Lembre-se de que os valores dos <code>case</code>s para caracteres devem estar entre aspas simples, como <code>case 'S':</code>.</p>"
        }
      ]
    },
    {
      "type": "callout",
      "variant": "info",
      "title": "Pr√≥ximos Passos e Tarefa (TED)",
      "content": "<h4>Tarefa para a pr√≥xima aula</h4><p class=\"mb-4\">O objetivo √© praticar a estrutura de sele√ß√£o m√∫ltipla <code>switch-case</code>.</p><ol class=\"list-decimal list-inside space-y-3 font-semibold\"><li>Crie um programa em C chamado <code>aula11_dia_semana.c</code>.</li><li>O programa deve ler um n√∫mero inteiro de 1 a 7.</li><li>Utilizando <code>switch-case</code>, o programa deve exibir o dia da semana correspondente (1 para Domingo, 2 para Segunda, etc.).</li><li>Se o n√∫mero digitado estiver fora do intervalo de 1 a 7, o programa deve exibir a mensagem \"Dia inv√°lido\" (use o <code>default</code>).</li><li>Poste o ficheiro <code>.c</code> na Atividade da \"Aula 11\" no Moodle.</li></ol>"
    },
    {
      "type": "contentBlock",
      "title": "üíª √Årea de Testes Interativa",
      "content": [
        {
          "type": "paragraph",
          "text": "Abra o editor OnlineGDB em uma nova aba para compilar e executar seus programas em C."
        },
        {
          "type": "html",
          "html": "<a href=\"https://www.onlinegdb.com/online_c_compiler\" target=\"_blank\" rel=\"\" class=\"btn btn-tonal\">Abrir OnlineGDB</a>"
        }
      ]
    },
    {
      "type": "videos",
      "title": "üé• V√≠deos de Apoio",
      "videos": [
        {
          "title": "Entenda \"switch case\" em C (PT-BR)",
          "src": "https://www.youtube.com/embed/w78aBu9cByo"
        },
        {
          "title": "Estrutura de decis√£o \"switch-case\" (C em Portugu√™s)",
          "src": "https://www.youtube.com/embed/TWMJkFnLjtw"
        }
      ]
    },
    {
      "type": "checklist",
      "title": "‚úÖ Ao final desta aula voc√™ deve ser capaz de:",
      "items": [
        "Explicar quando usar <code>switch-case</code> em vez de <code>if-else</code>.",
        "Escrever um programa funcional utilizando a sintaxe do <code>switch-case</code>.",
        "Entender a fun√ß√£o cr√≠tica da palavra-chave <code>break</code>.",
        "Utilizar o <code>default</code> para lidar com casos inesperados."
      ]
    },
    {
      "type": "bibliography",
      "title": "üìö Bibliografia de Apoio",
      "items": [
        "<strong>BACKES, Andr√©.</strong> <em>Linguagem C: completa e descomplicada.</em> Rio de Janeiro: Elsevier, 2019.",
        "<strong>SANTOS, Marcelo Gon√ßalves dos.</strong> <em>Linguagem de programa√ß√£o.</em> S√£o Paulo: Pearson, 2018."
      ]
    }
  ]
}
