{
  "formatVersion": "md3.lesson.v1",
  "id": "lesson-10",
  "title": "Aula 10: Condicionais com if e else",
  "summary": "Transforma algoritmos sequenciais em decisões controladas por condições booleanas, introduzindo desvios simples e comunicação clara de cada caminho.",
  "objective": "Empregar estruturas if e if-else para alterar o fluxo do programa conforme regras de negócio bem definidas.",
  "objectives": [
    "Reconhecer situações em que o fluxo sequencial precisa ser desviado por meio de uma condição.",
    "Escrever e testar expressões booleanas que alimentam estruturas if e if-else.",
    "Documentar cada caminho da decisão para garantir clareza e manutenção futura."
  ],
  "competencies": ["02", "05", "11"],
  "skills": [
    "Identificar pontos de decisão que exigem uso de estruturas if e else.",
    "Codificar blocos condicionais com mensagens claras para cada caminho.",
    "Explicar verbalmente ou por escrito o fluxo completo do algoritmo destacando estados finais."
  ],
  "outcomes": [
    "Apresenta diagrama ou tabela que mapeia condições para ações correspondentes.",
    "Entrega código revisado que trata casos verdadeiro e falso com mensagens específicas.",
    "Realiza apresentação curta explicando como o programa responde a pelo menos três entradas diferentes."
  ],
  "prerequisites": [
    "Revisar operadores aritméticos, relacionais e o fluxo sequencial abordados nas aulas 7 a 9."
  ],
  "tags": ["condicionais", "if-else", "controle-de-fluxo"],
  "duration": 100,
  "modality": "in-person",
  "resources": [
    {
      "label": "Moodle — AVA (Unichristus)",
      "type": "plataforma",
      "url": "https://ava.unichristus.edu.br/"
    }
  ],
  "bibliography": [
    "KERNIGHAN, B.; RITCHIE, D. A Linguagem de Programação C. Prentice Hall, 2020.",
    "BACKES, A. Linguagem C: Completa e Descomplicada. Elsevier, 2019.",
    "MANZANO, J. A. N. G.; OLIVEIRA, J. F. Algoritmos. Érica, 2019."
  ],
  "assessment": {
    "type": "prática",
    "description": "Prática orientada para fortalecer os conceitos trabalhados em aula. Registre suas soluções e dúvidas para acompanhamento posterior."
  },
  "content": [
    {
      "type": "callout",
      "variant": "info",
      "title": "Warm-up (pré-aula)",
      "content": [
        {
          "type": "paragraph",
          "text": "Revise os materiais desta aula aqui no site e anote os pontos-chave que precisam de atenção. Identifique dúvidas ou conceitos que merecem ser revisitados durante o encontro."
        },
        {
          "type": "list",
          "items": [
            {
              "text": "Reserve alguns minutos para tentar resolver mentalmente um exemplo relacionado ao tema da aula."
            },
            {
              "text": "Garanta acesso ao OnlineGDB ou ao Dev-C++ para experimentar os códigos durante a aula."
            }
          ]
        }
      ]
    },
    {
      "type": "lessonPlan",
      "title": "Plano da aula",
      "cards": [
        {
          "icon": "book-open",
          "title": "Conteúdo",
          "content": "Estruturas if e if-else, leitura de expressões booleanas e validação com casos positivos/negativos."
        },
        {
          "icon": "bullseye",
          "title": "Objetivo",
          "content": "Registrar decisões binárias de maneira clara e previsível em programas C."
        },
        {
          "icon": "gears",
          "title": "Metodologia",
          "content": "Discussão guiada, demonstrações no projetor e laboratório em duplas com feedback entre pares."
        }
      ]
    },
    {
      "type": "flightPlan",
      "title": "Plano de voo (1h40)",
      "items": [
        "(9 min) Check-in: onde condicionais aparecem em sistemas reais.",
        "(17 min) Estrutura if simples com leitura de expressões verdadeiras/falsas.",
        "(22 min) Construindo if-else completos com saídas distintas.",
        "(22 min) Oficina guiada: simulador de aprovação acadêmica.",
        "(17 min) Duplas testam e registram cenários opostos.",
        "(13 min) TED e alinhamento de expectativas para a próxima aula."
      ]
    },
    {
      "type": "contentBlock",
      "title": "Atividade em sala",
      "content": [
        {
          "type": "paragraph",
          "text": "Em duplas ou trios, resolvam as questões a seguir para reforçar o aprendizado durante a aula."
        },
        {
          "type": "orderedList",
          "items": [
            {
              "title": "Questão teórica",
              "text": "Explique com suas palavras os principais conceitos abordados em \"Condicionais com if e else\" e destaque por que eles são importantes para a resolução de problemas."
            },
            {
              "title": "Questão prática",
              "text": "Implemente ou descreva um exemplo curto relacionado a \"Condicionais com if e else\" utilizando OnlineGDB ou Dev-C++ e compartilhe o resultado com o grupo."
            }
          ]
        }
      ]
    },
    {
      "type": "promptTip",
      "title": "Prompt para planejar Condicionais com if e else",
      "description": "Use com o assistente para organizar seus estudos, revisar conteúdos e praticar com exercícios.",
      "audience": "estudantes de Algoritmos I",
      "prompt": "Você é estudante de Algoritmos I estudando Aula 10: Condicionais com if e else. Contexto da aula: Transforma algoritmos sequenciais em decisões controladas por condições booleanas, introduzindo desvios simples e comunicação clara de cada caminho. Objetivo central: Empregar estruturas if e if-else para alterar o fluxo do programa conforme regras de negócio bem definidas. Monte um plano de estudo dividido em revisão teórica, prática guiada e autoavaliação, indicando atividades de leitura, exercícios resolvidos em C ou pseudocódigo e perguntas de checagem que ajudem você a consolidar o conteúdo. Sugira estratégias para aprofundar o aprendizado, reforçar pontos frágeis e buscar ajuda quando necessário.",
      "tags": ["algoritmos", "condicionais", "controle-de-fluxo", "if-else"],
      "tips": [
        "Peça ao assistente variações de exercícios que reforcem reconhecer situações em que o fluxo sequencial precisa ser desviado por meio de uma condição.",
        "Solicite exemplos adicionais relacionados a condicionais, if-else para praticar.",
        "Peça um checklist final para acompanhar suas dúvidas recorrentes e organizar revisões.",
        "Peça sugestões de autoavaliação que ajudem você a escrever e testar expressões booleanas que alimentam estruturas if e if-else."
      ]
    },
    {
      "type": "contentBlock",
      "title": "Quando precisamos desviar do fluxo sequencial",
      "content": [
        {
          "type": "paragraph",
          "text": "Programas reais raramente seguem uma única linha reta. Precisamos tomar decisões: liberar acesso, calcular descontos ou exibir avisos dependendo da entrada do usuário."
        },
        {
          "type": "paragraph",
          "text": "As estruturas condicionais representam essas bifurcações. Um if bem escrito deixa claro quando algo acontece e, tão importante quanto, quando nada deve acontecer."
        }
      ]
    },
    {
      "type": "truthTable",
      "title": "Exemplo: autorização por idade",
      "headers": ["Idade", "idade >= 18", "Ação"],
      "rows": [
        [
          {
            "value": "16"
          },
          {
            "state": "false",
            "display": "Falso"
          },
          {
            "state": "false",
            "display": "Não exibe autorização"
          }
        ],
        [
          {
            "value": "18"
          },
          {
            "state": "true",
            "display": "Verdadeiro"
          },
          {
            "state": "true",
            "display": "Imprime \"Acesso liberado\""
          }
        ],
        [
          {
            "value": "21"
          },
          {
            "state": "true",
            "display": "Verdadeiro"
          },
          {
            "state": "true",
            "display": "Imprime \"Acesso liberado\""
          }
        ]
      ],
      "legend": [
        {
          "label": "Condição satisfeita",
          "state": "true"
        },
        {
          "label": "Condição não satisfeita",
          "state": "false"
        }
      ]
    },
    {
      "type": "truthTable",
      "title": "Quando usar if-else ou switch-case",
      "headers": ["Cenário", "if-else", "switch-case", "Observação"],
      "rows": [
        [
          {
            "value": "Comparar faixas numéricas (ex.: idade)"
          },
          {
            "value": "Permite intervalos complexos"
          },
          {
            "value": "Pouco eficiente"
          },
          {
            "value": "Use if-else para lidar com <, >, >=, <="
          }
        ],
        [
          {
            "value": "Verificar estados de string ou boolean"
          },
          {
            "value": "Funciona, mas exige várias comparações"
          },
          {
            "value": "Aceita apenas números/char"
          },
          {
            "value": "Converta para códigos inteiros antes de usar switch"
          }
        ],
        [
          {
            "value": "Menu com opções fixas (1,2,3,4)"
          },
          {
            "value": "Funciona, porém repetitivo"
          },
          {
            "value": "Legível e direto"
          },
          {
            "value": "Prefira switch-case para listar alternativas"
          }
        ],
        [
          {
            "value": "Verificar combinações de condições"
          },
          {
            "value": "Agrupa com operadores lógicos"
          },
          {
            "value": "Não suporta expressões complexas"
          },
          {
            "value": "if-else permite &&, || e funções auxiliares"
          }
        ]
      ]
    },
    {
      "type": "contentBlock",
      "title": "Estrutura de um if",
      "content": [
        {
          "type": "paragraph",
          "text": "O bloco if executa apenas quando a condição é verdadeira. Para manter a leitura fluida, coloque a comparação dentro de parênteses e alinhe o bloco com chaves."
        },
        {
          "type": "code",
          "language": "c",
          "code": "if (saldo >= valorSaque) {\n  saldo = saldo - valorSaque;\n  printf(\"Saque realizado.\");\n}\nprintf(\"Operacao encerrada.\");"
        },
        {
          "type": "subBlock",
          "title": "Checklist rápido",
          "items": [
            "Leia a condição em voz alta: \"se o saldo for maior ou igual ao valor do saque\".",
            "Garanta que a mensagem fora do if execute sempre, independentemente da condição."
          ]
        }
      ]
    },
    {
      "type": "component",
      "component": "Md3Flowchart",
      "props": {
        "title": "Fluxo de aprovação por média",
        "summary": "Decisão binária baseada na média calculada para um estudante.",
        "nodes": [
          {
            "id": "start",
            "type": "start",
            "title": "Início"
          },
          {
            "id": "input",
            "type": "input",
            "title": "Ler média"
          },
          {
            "id": "decision",
            "type": "decision",
            "title": "Média ≥ 7?",
            "branches": [
              {
                "id": "branch-aprovado",
                "label": "Sim",
                "target": "process-aprovado",
                "description": "Segue para registrar aprovação."
              },
              {
                "id": "branch-reforco",
                "label": "Não",
                "target": "process-reforco",
                "description": "Aciona plano de reforço."
              }
            ]
          },
          {
            "id": "process-aprovado",
            "type": "process",
            "title": "Imprimir mensagem de aprovação"
          },
          {
            "id": "process-reforco",
            "type": "process",
            "title": "Agendar estudo adicional"
          },
          {
            "id": "end",
            "type": "end",
            "title": "Fim"
          }
        ],
        "connections": [
          {
            "from": "start",
            "to": "input"
          },
          {
            "from": "input",
            "to": "decision"
          },
          {
            "from": "process-aprovado",
            "to": "end"
          },
          {
            "from": "process-reforco",
            "to": "end"
          }
        ]
      }
    },
    {
      "type": "contentBlock",
      "title": "Construindo um if-else completo",
      "content": [
        {
          "type": "paragraph",
          "text": "Quando só pode existir um de dois resultados possíveis, use if-else. Assim cada caminho fica explícito e evita efeitos colaterais inesperados."
        },
        {
          "type": "code",
          "language": "c",
          "code": "if (numero % 2 == 0) {\n  printf(\"O numero %d e PAR.\\n\", numero);\n} else {\n  printf(\"O numero %d e IMPAR.\\n\", numero);\n}"
        },
        {
          "type": "orderedList",
          "items": [
            "Teste com ao menos um valor para cada ramo.",
            "Escreva comentários explicando o significado da condição.",
            "Registre as saídas esperadas antes de compilar."
          ]
        }
      ]
    },
    {
      "type": "callout",
      "variant": "warning",
      "title": "Cuidado com a atribuição",
      "content": [
        {
          "type": "paragraph",
          "text": "Use == para comparar valores e = apenas para atribuir. Um único símbolo pode mudar completamente a lógica e sempre retornará verdadeiro, causando bugs difíceis de rastrear."
        }
      ]
    },
    {
      "type": "contentBlock",
      "title": "Laboratório guiado",
      "content": [
        {
          "type": "orderedList",
          "items": [
            "Em duplas, modelem um cenário que dependa de uma decisão binária (ex.: desconto fidelidade, envio de alerta).",
            "Identifiquem quais entradas são necessárias e qual mensagem cada ramo deve exibir.",
            "Implementem o programa em C, documentando os casos de teste utilizados."
          ]
        }
      ]
    },
    {
      "type": "contentBlock",
      "title": "Rubrica do simulador de aprovação",
      "content": [
        {
          "type": "unorderedList",
          "items": [
            {
              "text": "Lógica (40%) – Condições cobrem todos os cenários previstos (aprovado, recuperação, reprovado)."
            },
            {
              "text": "Organização (25%) – Variáveis nomeadas, comentários indicando cada ramo e mensagens claras."
            },
            {
              "text": "Testes (25%) – Evidências de execução com notas limite (6.9, 7.0, 10.0) e casos negativos."
            },
            {
              "text": "Apresentação (10%) – Pitch de 2 minutos explicando a regra e melhorias futuras."
            }
          ]
        }
      ]
    },
    {
      "type": "videos",
      "title": "Vídeos de apoio",
      "videos": [
        {
          "title": "Estrutura de decisão if/else em C",
          "src": "https://www.youtube.com/embed/PE4-xGdC9NM"
        },
        {
          "title": "Boas práticas com condicionais",
          "src": "https://www.youtube.com/embed/KXHRiW2MlKk"
        }
      ]
    },
    {
      "type": "checklist",
      "title": "Você sai da aula capaz de",
      "items": [
        "Identificar quando aplicar if simples ou if-else.",
        "Explicar verbalmente o que cada condição avalia.",
        "Testar ambos os ramos antes de considerar o programa concluído."
      ]
    },
    {
      "type": "callout",
      "variant": "warning",
      "title": "TED pós-aula",
      "content": [
        {
          "type": "paragraph",
          "text": "Reserve um momento após a aula para concluir a atividade descrita a seguir. Ela complementa os estudos e ajuda a consolidar o que foi trabalhado em sala."
        },
        {
          "type": "list",
          "items": [
            {
              "text": "Desenvolva a prática proposta na aula registrando os passos e resultados no caderno ou no editor de sua preferência."
            },
            {
              "text": "Anote dúvidas e insights que surgirem para discutirmos na próxima aula."
            }
          ]
        }
      ]
    },
    {
      "type": "stepper",
      "title": "Modelo Entrada → Processamento → Saída",
      "steps": [
        {
          "title": "Entrada",
          "description": "Ler dados do usuário (scanf) e validar."
        },
        {
          "title": "Processamento",
          "description": "Aplicar cálculos e regras de negócio."
        },
        {
          "title": "Saída",
          "description": "Exibir resultados formatados (printf)."
        }
      ]
    },
    {
      "type": "callout",
      "variant": "academic",
      "title": "Leitura recomendada",
      "content": [
        {
          "type": "list",
          "items": [
            "FORBELLONE, A. L. V.; EBERSPÄCHER, H. F. Algoritmos: Lógica para Desenvolvimento de Programas. Prentice Hall.",
            "MANZANO, J. A. N. G.; OLIVEIRA, J. F. Algoritmos: lógica para desenvolvimento de programação. Érica.",
            "BACKES, A. Linguagem C: completa e descomplicada. Elsevier."
          ]
        }
      ]
    },
    {
      "type": "callout",
      "variant": "info",
      "title": "Casos de teste sugeridos",
      "content": [
        {
          "type": "code",
          "code": "# Entrada → Saída\n100 10 -> 90.00\n250 5 -> 237.50",
          "language": "plaintext"
        }
      ]
    },
    {
      "type": "callout",
      "variant": "good-practice",
      "title": "Boas práticas",
      "content": [
        {
          "type": "list",
          "items": [
            "Use nomes de variáveis autoexplicativos (ex.: total, media, indice).",
            "Evite números mágicos; use constantes quando apropriado.",
            "Comente trechos que expressem intenção (não o óbvio)."
          ]
        }
      ]
    },
    {
      "type": "callout",
      "variant": "warning",
      "title": "Erros comuns e refatorações",
      "content": [
        {
          "type": "list",
          "items": [
            "Leia o enunciado e valide entradas antes de processar.",
            "Inicialize variáveis; evite estados indefinidos."
          ]
        }
      ]
    },
    {
      "type": "callout",
      "variant": "task",
      "title": "Check-out (fechamento rápido)",
      "content": [
        {
          "type": "list",
          "items": [
            "Qual parte do EPS te gerou mais dúvidas?",
            "Cite um caso de teste que você usou."
          ]
        }
      ]
    },
    {
      "type": "callout",
      "variant": "info",
      "title": "Gerador de casos de teste (C)",
      "content": [
        {
          "type": "code",
          "language": "c",
          "code": "#include <stdio.h>\n#include <stdlib.h>\n#include <time.h>\n\nconst char *classificar(float media, int faltas) {\n  if (media >= 7.0f && faltas <= 10) {\n    return \"APROVADO\";\n  } else if (media >= 5.0f && faltas <= 15) {\n    return \"RECUPERACAO\";\n  }\n  return \"REPROVADO\";\n}\n\nint main(void) {\n  srand((unsigned)time(NULL));\n\n  float media = (float)(rand() % 401 + 300) / 100.0f;\n  int faltas = rand() % 21;\n\n  printf(\"Entrada (media faltas):\\n%.2f %d\\n\", media, faltas);\n  printf(\"Saida esperada: %s\\n\", classificar(media, faltas));\n\n  return 0;\n}"
        }
      ]
    }
  ],
  "metadata": {
    "status": "published",
    "updatedAt": "2025-10-02T08:28:28.975Z",
    "owners": ["Prof. Tiago Sombra"],
    "sources": ["Plano pedagógico Algoritmos I 2025.1", "Ata pedagógica de revisão 2024-12"]
  }
}
