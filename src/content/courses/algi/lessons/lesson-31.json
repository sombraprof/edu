{
  "formatVersion": "md3.lesson.v1",
  "id": "lesson-31",
  "title": "Operações e Transformações com Vetores",
  "summary": "Explora padrões de somatório, normalização e geração de tabelas a partir de vetores, consolidando o domínio de loops e acumuladores.",
  "description": "Explora operações de somatório, normalização e geração de tabelas de frequência com vetores.",
  "objective": "Aplicar percursos sobre vetores para executar operações agregadas e construir tabelas de frequência ou rankings simples.",
  "objectives": [
    "Implementar funções para somar, normalizar e copiar vetores.",
    "Construir tabelas de frequência a partir de dados numéricos.",
    "Interpretar impactos de operações em tempo e memória."
  ],
  "competencies": ["05", "08"],
  "skills": [
    "Projetar transformações sobre vetores utilizando acumuladores e normalizações.",
    "Validar resultados comparando totais, médias e discrepâncias detectadas.",
    "Registrar experimentos realizados descrevendo parâmetros e impactos observados."
  ],
  "outcomes": [
    "Disponibiliza script que gera tabela derivada do vetor original com indicadores calculados.",
    "Entrega planilha de verificação comprovando consistência dos resultados obtidos.",
    "Documenta relatório curto explicando como ajustes no algoritmo afetaram os indicadores."
  ],
  "prerequisites": [
    "Compreensão de vetores e loops (Aula 30).",
    "Conhecimento de funções básicas em C."
  ],
  "tags": ["vetores", "arrays", "operacoes"],
  "duration": 100,
  "modality": "in-person",
  "resources": [
    {
      "label": "Moodle — AVA (Unichristus)",
      "type": "plataforma",
      "url": "https://ava.unichristus.edu.br/"
    }
  ],
  "bibliography": [
    "FORBELLONE, A. L. V.; EBERSPÄCHER, H. F. Lógica de Programação. 3. ed. Pearson, 2020. Cap. 5, Vetores e tabelas.",
    "MANZANO, J. A. N. G.; OLIVEIRA, J. F. Algoritmos – Lógica para Desenvolvimento de Programação de Computadores. 28. ed. Érica, 2019. Cap. 9, Estatística aplicada com vetores.",
    "BACKES, A. Linguagem C: Completa e Descomplicada. 2. ed. Elsevier, 2019. Cap. 7, Manipulação de arrays.",
    "SANTOS, R. Introdução à Programação em C. Bookman, 2021. Cap. 8, Registros de desempenho e validação cruzada.",
    "ASCENCIO, A. F. G.; CAMPOS, E. A. V. Fundamentos da Programação de Computadores. 3. ed. Pearson, 2012. Cap. 7, Vetores e matrizes em estudos de caso."
  ],
  "assessment": {
    "type": "prática",
    "description": "Prática orientada para fortalecer os conceitos trabalhados em aula. Registre suas soluções e dúvidas para acompanhamento posterior.",
    "rubric": "Pensamento crítico (45%): interpreta tendências energéticas ao aplicar o roteiro de tabelas de Forbellone & Eberspächer (Cap. 5) e Manzano & Oliveira (Cap. 9). Análise de dados (35%): normaliza e compara faixas respeitando as validações de Backes (Cap. 7) e Santos (Cap. 8). Comunicação técnica (20%): documenta resultados e limitações seguindo o formato de estudos de caso de Ascencio & Campos (Cap. 7)."
  },
  "content": [
    {
      "type": "contentBlock",
      "title": "Atividade em sala",
      "content": [
        {
          "type": "paragraph",
          "text": "Em duplas ou trios, resolvam as questões a seguir para reforçar o aprendizado durante a aula."
        },
        {
          "type": "orderedList",
          "items": [
            {
              "title": "Questão teórica",
              "text": "Explique com suas palavras os principais conceitos abordados em \"Operações e Transformações com Vetores\" e destaque por que eles são importantes para a resolução de problemas."
            },
            {
              "title": "Questão prática",
              "text": "Implemente ou descreva um exemplo curto relacionado a \"Operações e Transformações com Vetores\" utilizando OnlineGDB ou Dev-C++ e compartilhe o resultado com o grupo."
            }
          ]
        }
      ]
    },
    {
      "type": "videos",
      "title": "Vídeos de apoio",
      "videos": [
        {
          "title": "Vídeo recomendado (41ubXTEPFO0)",
          "src": "https://www.youtube.com/embed/41ubXTEPFO0"
        },
        {
          "title": "- YouTube",
          "src": "https://www.youtube.com/embed/4A2f0ZuLQ1Q"
        }
      ]
    },
    {
      "type": "callout",
      "variant": "info",
      "title": "Warm-up (pré-aula)",
      "content": [
        {
          "type": "paragraph",
          "text": "Revise os materiais desta aula aqui no site e anote os pontos-chave que precisam de atenção. Identifique dúvidas ou conceitos que merecem ser revisitados durante o encontro."
        },
        {
          "type": "list",
          "items": [
            {
              "text": "Reserve alguns minutos para tentar resolver mentalmente um exemplo relacionado ao tema da aula."
            },
            {
              "text": "Garanta acesso ao OnlineGDB ou ao Dev-C++ para experimentar os códigos durante a aula."
            }
          ]
        }
      ]
    },
    {
      "type": "lessonPlan",
      "title": "Sequência da aula",
      "cards": [
        {
          "icon": "bullseye",
          "title": "Aquecimento",
          "content": "Revisar cálculo de média de vetor (10 min)."
        },
        {
          "icon": "gears",
          "title": "Somatórios",
          "content": "Implementação e teste de somatórios com vetores (25 min)."
        },
        {
          "icon": "settings",
          "title": "Normalização",
          "content": "Dividir elementos pelo total acumulado (20 min)."
        },
        {
          "icon": "database",
          "title": "Tabelas",
          "content": "Construir tabela de frequência a partir do dataset (30 min)."
        },
        {
          "icon": "check-circle",
          "title": "Wrap-up",
          "content": "Checklist e encaminhamento da prática pós-aula (10 min)."
        }
      ]
    },
    {
      "type": "promptTip",
      "title": "Prompt para planejar Operações e Transformações com Vetores",
      "description": "Use com o assistente para organizar seus estudos, revisar conteúdos e praticar com exercícios.",
      "audience": "estudantes de Algoritmos I",
      "prompt": "Você é estudante de Algoritmos I estudando Operações e Transformações com Vetores. Contexto da aula: Explora padrões de somatório, normalização e geração de tabelas a partir de vetores, consolidando o domínio de loops e acumuladores. Objetivo central: Aplicar percursos sobre vetores para executar operações agregadas e construir tabelas de frequência ou rankings simples. Monte um plano de estudo dividido em revisão teórica, prática guiada e autoavaliação, indicando atividades de leitura, exercícios resolvidos em C ou pseudocódigo e perguntas de checagem que ajudem você a consolidar o conteúdo. Sugira estratégias para aprofundar o aprendizado, reforçar pontos frágeis e buscar ajuda quando necessário.",
      "tags": ["algoritmos", "arrays", "operacoes", "vetores"],
      "tips": [
        "Peça ao assistente variações de exercícios que reforcem implementar funções para somar, normalizar e copiar vetores.",
        "Solicite exemplos adicionais relacionados a vetores, arrays para praticar.",
        "Peça um checklist final para acompanhar suas dúvidas recorrentes e organizar revisões.",
        "Peça sugestões de autoavaliação que ajudem você a construir tabelas de frequência a partir de dados numéricos."
      ]
    },
    {
      "type": "lessonPlan",
      "title": "Plano de voo (1h40)",
      "cards": [
        {
          "icon": "check-circle",
          "title": "9 min",
          "content": "Perguntas diagnósticas sobre Aula 30."
        },
        {
          "icon": "check-circle",
          "title": "(17 min) Live coding",
          "content": "funções soma e média."
        },
        {
          "icon": "check-circle",
          "title": "(22 min) Mini-projeto",
          "content": "normalizar vendas para percentual."
        },
        {
          "icon": "check-circle",
          "title": "26 min",
          "content": "Geração de tabela de frequência em MD3 Table."
        },
        {
          "icon": "check-circle",
          "title": "17 min",
          "content": "Rodada de revisão por pares."
        },
        {
          "icon": "check-circle",
          "title": "9 min",
          "content": "Atividade pós-aula guiada em sala virtual."
        }
      ]
    },
    {
      "type": "contentBlock",
      "title": "Operações comuns sobre vetores",
      "content": [
        {
          "type": "unorderedList",
          "items": [
            {
              "text": "Operação: Somatório | Assinatura sugerida: int soma(int v[], int n) | Tempo: O(n) | Observações: Retorna a soma, não altera o vetor."
            },
            {
              "text": "Operação: Cópia | Assinatura sugerida: void copia(int origem[], int destino[], int n) | Tempo: O(n) | Observações: Necessário vetor destino previamente alocado."
            },
            {
              "text": "Operação: Normalização | Assinatura sugerida: void normaliza(float v[], int n) | Tempo: O(n) | Observações: Divide cada posição pelo somatório total."
            },
            {
              "text": "Operação: Média móvel | Assinatura sugerida: void mediaMovel(float v[], int n, int janela, float saida[]) | Tempo: O(n) | Observações: Requer vetor auxiliar para resultados."
            },
            {
              "text": "Operação: Busca maior | Assinatura sugerida: int indiceMaior(float v[], int n) | Tempo: O(n) | Observações: Retorna índice do maior elemento."
            }
          ]
        }
      ]
    },
    {
      "type": "contentBlock",
      "title": "Exemplo prático: Tabela de frequência de faixas de vendas",
      "content": [
        {
          "type": "paragraph",
          "text": "O estudo de caso combina o arquivo vetores-vendas.csv com a planilha do painel de energia renovável. Forbellone & Eberspächer (Cap. 5) e Manzano & Oliveira (Cap. 9) orientam a decompor o problema em leituras, agregações e apresentação dos percentuais."
        },
        {
          "type": "orderedList",
          "items": [
            {
              "text": "Ler 30 valores de vendas diárias e 30 medições de energia em vetores separados, garantindo alinhamento conforme Backes (Cap. 7)."
            },
            {
              "text": "Criar vetores de contadores para faixas (vendas e energia) e registrar validações cruzadas na planilha, como propõe Santos (Cap. 8)."
            },
            {
              "text": "Calcular percentual relativo ao total e imprimir tabela formatada destacando alertas para faixas críticas, seguindo o modelo de estudos de caso de Ascencio & Campos (Cap. 7)."
            }
          ]
        },
        {
          "type": "paragraph",
          "text": "Relacione na devolutiva quais decisões foram tomadas a partir das leituras, explicando como cada autor embasa a interpretação dos indicadores."
        }
      ]
    },
    {
      "type": "contentBlock",
      "title": "Fluxo de normalização do vetor",
      "content": [
        {
          "type": "orderedList",
          "items": [
            {
              "text": "Início – tipo: start"
            },
            {
              "text": "total = soma(v) – tipo: process"
            },
            {
              "text": "total == 0? – tipo: decision"
            },
            {
              "text": "Se zero, emitir aviso – tipo: process"
            },
            {
              "text": "Para i = 0 até n-1 – tipo: loop"
            },
            {
              "text": "v[i] = v[i] / total – tipo: process"
            },
            {
              "text": "Fim – tipo: end"
            }
          ]
        },
        {
          "type": "unorderedList",
          "items": [
            {
              "text": "start → sum"
            },
            {
              "text": "sum → decision"
            },
            {
              "text": "decision → guard – sim"
            },
            {
              "text": "decision → loop – não"
            },
            {
              "text": "guard → end"
            },
            {
              "text": "loop → norm"
            },
            {
              "text": "norm → loop"
            },
            {
              "text": "loop → end – fim"
            }
          ]
        }
      ]
    },
    {
      "type": "callout",
      "variant": "good-practice",
      "title": "Estudo de caso: Painel de energia renovável",
      "content": [
        {
          "type": "paragraph",
          "text": "Aplique as rotinas em um painel municipal de energia solar. Some e normalize os dados por bairro para priorizar investimentos, como sugerem Manzano & Oliveira (Cap. 9)."
        },
        {
          "type": "list",
          "items": [
            {
              "text": "Use vetores paralelos para armazenar geração e perdas, técnica destacada por Backes (Cap. 7)."
            },
            {
              "text": "Documente a validação de faixas e discrepâncias com base no protocolo de Santos (Cap. 8)."
            },
            {
              "text": "Justifique as decisões de ranqueamento mencionando as diretrizes de estudos de caso de Ascencio & Campos (Cap. 7)."
            }
          ]
        }
      ]
    },
    {
      "type": "contentBlock",
      "title": "Clipes recomendados",
      "content": [
        {
          "type": "unorderedList",
          "items": [
            {
              "text": "CS50 Lab Arrays – https://www.youtube.com/watch?v=N-0At__Wwzg"
            },
            {
              "text": "Khan Academy - Frequency tables – https://www.youtube.com/watch?v=mYVz5ZdGJ0s"
            }
          ]
        }
      ]
    },
    {
      "type": "callout",
      "variant": "info",
      "title": "Atividades pós-aula",
      "content": [
        {
          "type": "list",
          "items": [
            "Implementar função de ordenação parcial (top 5) reutilizando operações de cópia.",
            "Registrar resultados de normalização em planilha compartilhada.",
            "Assistir aos vídeos recomendados e anotar dúvidas sobre eficiência."
          ]
        }
      ]
    },
    {
      "type": "callout",
      "variant": "warning",
      "title": "TED pós-aula",
      "content": [
        {
          "type": "paragraph",
          "text": "Reserve um momento após a aula para concluir a atividade descrita a seguir. Ela complementa os estudos e ajuda a consolidar o que foi trabalhado em sala."
        },
        {
          "type": "list",
          "items": [
            {
              "text": "Desenvolva a prática proposta na aula registrando os passos e resultados no caderno ou no editor de sua preferência."
            },
            {
              "text": "Anote dúvidas e insights que surgirem para discutirmos na próxima aula."
            }
          ]
        }
      ]
    },
    {
      "type": "stepper",
      "title": "Operações com vetores",
      "steps": [
        {
          "title": "Somatório",
          "description": "Percorrer e somar"
        },
        {
          "title": "Média",
          "description": "Somatório / n"
        },
        {
          "title": "Extremos",
          "description": "Maior/Menor"
        }
      ]
    },
    {
      "type": "callout",
      "variant": "academic",
      "title": "Leitura recomendada",
      "content": [
        {
          "type": "list",
          "items": [
            "FORBELLONE, A. L. V.; EBERSPÄCHER, H. F. Algoritmos: Lógica para Desenvolvimento de Programas. Prentice Hall.",
            "MANZANO, J. A. N. G.; OLIVEIRA, J. F. Algoritmos: lógica para desenvolvimento de programação. Érica.",
            "BACKES, A. Linguagem C: completa e descomplicada. Elsevier."
          ]
        }
      ]
    },
    {
      "type": "callout",
      "variant": "info",
      "title": "Casos de teste sugeridos",
      "content": [
        {
          "type": "code",
          "code": "# Vetor (soma, média, extremos)\n[10, 20, 30] -> soma=60, média=20, maior=30, menor=10",
          "language": "plaintext"
        }
      ]
    },
    {
      "type": "callout",
      "variant": "warning",
      "title": "Erros comuns e refatorações",
      "content": [
        {
          "type": "list",
          "items": [
            "Leia o enunciado e valide entradas antes de processar.",
            "Inicialize variáveis; evite estados indefinidos."
          ]
        },
        {
          "type": "paragraph",
          "text": "<strong>Anti-exemplo</strong>"
        },
        {
          "type": "code",
          "code": "int maior = 0; // pode falhar com negativos",
          "language": "c"
        },
        {
          "type": "paragraph",
          "text": "<strong>Refatorado</strong>"
        },
        {
          "type": "code",
          "code": "#include <limits.h>\nint maior = INT_MIN; // robusto",
          "language": "c"
        }
      ]
    },
    {
      "type": "callout",
      "variant": "academic",
      "title": "Solução de referência",
      "content": [
        {
          "type": "code",
          "code": "#include <stdio.h>\n#include <limits.h>\nint main(){\n  int n; if (scanf(\"%d\", &n)!=1) return 1;\n  int x, soma=0, maior=INT_MIN, menor=INT_MAX;\n  for (int i=0;i<n;i++){\n    scanf(\"%d\", &x); soma+=x; if (x>maior) maior=x; if (x<menor) menor=x;\n  }\n  printf(\"soma=%d media=%.2f maior=%d menor=%d\n\", soma, (double)soma/n, maior, menor);\n  return 0;\n}",
          "language": "c"
        }
      ]
    },
    {
      "type": "callout",
      "variant": "task",
      "title": "Check-out (fechamento rápido)",
      "content": [
        {
          "type": "list",
          "items": ["Registre 1 aprendizado e 1 dúvida.", "Entregue no AVA (campo de texto)."]
        }
      ]
    },
    {
      "type": "callout",
      "variant": "info",
      "title": "Gerador de casos de teste (C)",
      "content": [
        {
          "type": "code",
          "language": "c",
          "code": "#include <stdio.h>\n#include <stdlib.h>\n#include <time.h>\n\nint main(void) {\n  srand((unsigned)time(NULL));\n\n  int tamanho = 8;\n  double vetor[8];\n  double maior = -1e9;\n  double menor = 1e9;\n\n  printf(\"Vetor original:\\n\");\n  for (int i = 0; i < tamanho; ++i) {\n    vetor[i] = (double)(rand() % 401 + 100) / 10.0;\n    if (vetor[i] > maior) maior = vetor[i];\n    if (vetor[i] < menor) menor = vetor[i];\n    printf(\"%.1f \", vetor[i]);\n  }\n\n  printf(\"\\nSaida esperada (vetor normalizado 0-1):\\n\");\n  for (int i = 0; i < tamanho; ++i) {\n    double normalizado = (vetor[i] - menor) / (maior - menor);\n    printf(\"%.3f \", normalizado);\n  }\n  printf(\"\\n\");\n\n  return 0;\n}"
        }
      ]
    },
    {
      "type": "checklist",
      "title": "Exercícios propostos",
      "items": [
        "Leia N inteiros, calcule soma, média, maior e menor.",
        "Imprima somente os valores nos índices pares."
      ]
    }
  ],
  "metadata": {
    "status": "published",
    "updatedAt": "2025-10-02T08:28:29.001Z",
    "owners": ["Prof. Tiago Sombra"],
    "sources": [
      "Plano pedagógico Algoritmos I 2025.2",
      "Briefing de oficinas Vetores 2025",
      "Planilha de auditoria pós-módulo (aba Vetores)"
    ]
  }
}
