{
  "id": "lesson-13",
  "title": "Aula 13: Unidade III – Persistência com SharedPreferences",
  "objective": "",
  "content": [
    {
      "type": "html",
      "html": "<section id=\"aula13\" class=\"max-w-7xl mx-auto\">\n  <header class=\"mb-12 border-b pb-8\">\n    <h2 class=\"text-4xl font-bold text-slate-900\">\n      Aula 13: Unidade III – Persistência com SharedPreferences\n    </h2>\n    <p class=\"text-lg text-slate-600 mt-2\">\n      Revisar os conceitos de persistência de dados simples para armazenar\n      preferências e valores de forma local e permanente.\n    </p>\n  </header>\n\n  <div class=\"bg-white p-6 rounded-lg shadow-md mb-12\">\n    <h3 class=\"font-bold text-2xl text-slate-800 mb-4\">Plano de Voo da Aula</h3>\n    <ul class=\"list-disc list-inside space-y-2 text-slate-700\">\n      <li>\n        <strong>Contextualização:</strong> Diferença entre Estado Temporário\n        (<code>Bundle</code>) e Persistência de Dados.\n      </li>\n      <li>\n        <strong>O que são SharedPreferences:</strong> A \"gaveta de\n        configurações\" do seu app.\n      </li>\n      <li>\n        <strong>Como Usar:</strong> Um guia passo a passo para ler e escrever\n        dados.\n      </li>\n      <li>\n        <strong>Atividade Prática Guiada:</strong> Construir um app que \"lembra\"\n        o nome do usuário.\n      </li>\n      <li>\n        <strong>Relevância Profissional:</strong> Onde e por que usamos\n        <code>SharedPreferences</code> no mercado.\n      </li>\n      <li>\n        <strong>Tarefa (TED):</strong> Consolidar o aprendizado com um projeto\n        prático.\n      </li>\n    </ul>\n  </div>\n\n  <div id=\"contexto\" class=\"mb-16\">\n    <h3 class=\"text-3xl font-bold text-slate-800 mb-6\">\n      Estado Temporário vs. Persistência de Dados\n    </h3>\n    <div class=\"bg-white p-8 rounded-lg shadow-md\">\n      <p class=\"text-lg mb-4\">\n        Na <strong>Aula 8</strong>, aprendemos a usar o <code>Bundle</code> para\n        salvar o estado da UI durante mudanças de configuração, como a rotação\n        da tela. No entanto, esses dados são <strong>temporários</strong>. Se o\n        usuário fechar o aplicativo e abri-lo novamente, as informações do\n        <code>Bundle</code> se perdem.\n      </p>\n      <p>\n        Hoje, entramos na\n        <strong>Unidade III: Persistência Local Moderna</strong>. Persistência\n        significa salvar dados de forma que eles\n        <strong>sobrevivam</strong> mesmo que o aplicativo seja completamente\n        fechado e reaberto. Nossa primeira ferramenta para isso é o\n        <code>SharedPreferences</code>.\n      </p>\n      <div class=\"callout callout-info\">\n        <h5 class=\"font-bold mb-2\">\n          Analogia: Lembrete vs. Caderno de Anotações\n        </h5>\n        <p>\n          Pense no <code>Bundle</code> como um <strong>post-it</strong> que você\n          cola na tela: útil para lembretes rápidos, mas fácil de perder. Já o\n          <code>SharedPreferences</code> é como um\n          <strong>pequeno caderno de anotações</strong> que você guarda na\n          gaveta: seguro, confiável e sempre lá quando você precisar.\n        </p>\n      </div>\n    </div>\n  </div>\n\n  <div id=\"o-que-e\" class=\"mb-16\">\n    <h3 class=\"text-3xl font-bold text-slate-800 mb-6\">\n      O que são SharedPreferences?\n    </h3>\n    <div class=\"bg-white p-8 rounded-lg shadow-md\">\n      <p class=\"text-lg mb-4\">\n        <code>SharedPreferences</code> é uma API do Android para salvar pequenas\n        coleções de dados no formato <strong>chave-valor</strong>. Ele armazena\n        os dados em um arquivo XML privado dentro do armazenamento interno do\n        aplicativo.\n      </p>\n      <h4 class=\"font-bold text-xl text-slate-800 mt-6 mb-2\">\n        Quando Usar SharedPreferences?\n      </h4>\n      <ul class=\"list-disc list-inside space-y-2\">\n        <li>\n          <strong>Configurações do Usuário:</strong> Salvar se o modo noturno\n          está ativo, o idioma preferido, ou se as notificações estão\n          habilitadas.\n        </li>\n        <li>\n          <strong>Pequenos Dados:</strong> Lembrar o nome ou e-mail do último\n          usuário que fez login.\n        </li>\n        <li>\n          <strong>Estados Simples de Jogo:</strong> Salvar a pontuação máxima\n          (high score) de um jogo casual.\n        </li>\n      </ul>\n      <div class=\"callout callout-warning\">\n        <h5 class=\"font-bold mb-2\">Quando NÃO Usar</h5>\n        <p>\n          <code>SharedPreferences</code> não é ideal para dados complexos ou\n          grandes, como uma lista de contatos ou fotos. Para isso, usaremos o\n          <strong>Room</strong> nas próximas aulas. Além disso, ele\n          <strong>não é seguro</strong> para armazenar dados sensíveis como\n          senhas ou tokens de API.\n        </p>\n      </div>\n    </div>\n  </div>\n\n  <div id=\"como-usar\" class=\"mb-16\">\n    <h3 class=\"text-3xl font-bold text-slate-800 mb-6\">\n      Como Usar SharedPreferences: Leitura e Escrita\n    </h3>\n    <div class=\"bg-white p-8 rounded-lg shadow-md\">\n      <p class=\"mb-6\">O processo é simples e envolve três etapas principais:</p>\n      <ol class=\"list-decimal list-inside space-y-8\">\n        <li>\n          <h4 class=\"font-bold text-xl text-slate-800 inline\">\n            Obter uma instância de SharedPreferences\n          </h4>\n          <p>\n            Você precisa de uma referência ao arquivo onde os dados serão\n            salvos. Usamos o método <code>getSharedPreferences()</code>.\n          </p>\n          <div class=\"code-block-wrapper\">\n            <button class=\"copy-button\">Copiar</button>\n            <div class=\"code-block\">\n              <pre><code>val sharedPreferences = getSharedPreferences(\"PREFS_DO_MEU_APP\", MODE_PRIVATE)</code></pre>\n            </div>\n          </div>\n        </li>\n        <li>\n          <h4 class=\"font-bold text-xl text-slate-800 inline\">\n            Escrever Dados\n          </h4>\n          <p>\n            Para escrever, usamos o editor de <code>SharedPreferences</code>. O\n            processo é: <strong>chamar <code>.edit()</code></strong\n            >, usar os métodos <code>put...()</code> e, por fim,\n            <strong>chamar <code>.apply()</code></strong> para salvar.\n          </p>\n          <div class=\"code-block-wrapper\">\n            <button class=\"copy-button\">Copiar</button>\n            <div class=\"code-block\">\n              <pre><code>val editor = sharedPreferences.edit()\neditor.putString(\"CHAVE_NOME_USUARIO\", \"Tiago Sombra\")\neditor.putBoolean(\"CHAVE_MODO_NOTURNO\", true)\neditor.apply() // Salva os dados de forma assíncrona</code></pre>\n            </div>\n          </div>\n          <div class=\"callout callout-info\">\n            <h5 class=\"font-bold mb-2\">\n              <code>apply()</code> vs. <code>commit()</code>\n            </h5>\n            <p>\n              Sempre prefira <code>apply()</code>. Ele salva os dados em segundo\n              plano sem bloquear a thread principal, garantindo que seu app\n              continue responsivo. <code>commit()</code> é síncrono e deve ser\n              evitado.\n            </p>\n          </div>\n        </li>\n        <li>\n          <h4 class=\"font-bold text-xl text-slate-800 inline\">Ler Dados</h4>\n          <p>\n            Para ler, basta usar os métodos <code>get...()</code>, passando a\n            chave e um valor padrão, que será retornado caso a chave não exista.\n          </p>\n          <div class=\"code-block-wrapper\">\n            <button class=\"copy-button\">Copiar</button>\n            <div class=\"code-block\">\n              <pre><code>val nomeSalvo = sharedPreferences.getString(\"CHAVE_NOME_USUARIO\", \"Usuário\")\nval modoNoturnoAtivo = sharedPreferences.getBoolean(\"CHAVE_MODO_NOTURNO\", false)</code></pre>\n            </div>\n          </div>\n        </li>\n      </ol>\n    </div>\n  </div>\n\n  <div id=\"atividade-pratica-aula13\" class=\"mb-16\">\n    <h3 class=\"text-3xl font-bold text-slate-800 mb-6\">\n      Atividade Prática: App \"Lembrar de Mim\"\n    </h3>\n    <div class=\"bg-white p-8 rounded-lg shadow-md\">\n      <p class=\"mb-4\">\n        Vamos construir o app do TED. Ele terá um campo para o nome, um botão\n        para salvar e, ao ser aberto, exibirá uma saudação se um nome já tiver\n        sido salvo.\n      </p>\n      <h4 class=\"font-bold text-2xl text-slate-800 mt-8 mb-4\">\n        Passo 1: O Layout (<code>activity_main.xml</code>)\n      </h4>\n      <div class=\"code-block-wrapper\">\n        <button class=\"copy-button\">Copiar</button>\n        <div class=\"code-block\">\n          <pre><code>&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;\n&lt;LinearLayout ... android:orientation=\"vertical\" android:padding=\"16dp\"&gt;\n    &lt;TextView\n        android:id=\"@+id/textViewSaudacao\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:textSize=\"20sp\"\n        tools:text=\"Olá, Visitante!\" /&gt;\n    &lt;EditText\n        android:id=\"@+id/editTextNome\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\"\n        android:layout_marginTop=\"24dp\"\n        android:hint=\"Qual o seu nome?\" /&gt;\n    &lt;Button\n        android:id=\"@+id/buttonSalvar\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:layout_marginTop=\"16dp\"\n        android:text=\"Salvar Nome\" /&gt;\n&lt;/LinearLayout&gt;</code></pre>\n        </div>\n      </div>\n\n      <h4 class=\"font-bold text-2xl text-slate-800 mt-12 mb-4\">\n        Passo 2: A Lógica (<code>MainActivity.kt</code>)\n      </h4>\n      <div class=\"code-block-wrapper\">\n        <button class=\"copy-button\">Copiar</button>\n        <div class=\"code-block\">\n          <pre><code>package br.com.unichristus.ads.sharedprefs\n\nimport android.content.SharedPreferences\nimport androidx.appcompat.app.AppCompatActivity\nimport android.os.Bundle\nimport android.widget.Button\nimport android.widget.EditText\nimport android.widget.TextView\n\nclass MainActivity : AppCompatActivity() {\n\n    private lateinit var textViewSaudacao: TextView\n    private lateinit var editTextNome: EditText\n    private lateinit var buttonSalvar: Button\n    private lateinit var sharedPreferences: SharedPreferences\n\n    companion object {\n        private const val ARQUIVO_PREFS = \"AppPrefs\"\n        private const val CHAVE_NOME = \"NOME_USUARIO\"\n    }\n\n    override fun onCreate(savedInstanceState: Bundle?) {\n        super.onCreate(savedInstanceState)\n        setContentView(R.layout.activity_main)\n\n        // Inicializa as Views\n        textViewSaudacao = findViewById(R.id.textViewSaudacao)\n        editTextNome = findViewById(R.id.editTextNome)\n        buttonSalvar = findViewById(R.id.buttonSalvar)\n        \n        // Inicializa o SharedPreferences\n        sharedPreferences = getSharedPreferences(ARQUIVO_PREFS, MODE_PRIVATE)\n\n        carregarSaudacao()\n\n        buttonSalvar.setOnClickListener {\n            salvarNome()\n        }\n    }\n\n    private fun carregarSaudacao() {\n        val nomeSalvo = sharedPreferences.getString(CHAVE_NOME, null)\n        if (nomeSalvo != null && nomeSalvo.isNotBlank()) {\n            textViewSaudacao.text = \"Olá, $nomeSalvo!\"\n        } else {\n            textViewSaudacao.text = \"Olá, Visitante!\"\n        }\n    }\n\n    private fun salvarNome() {\n        val nomeDigitado = editTextNome.text.toString()\n        if (nomeDigitado.isNotBlank()) {\n            val editor = sharedPreferences.edit()\n            editor.putString(CHAVE_NOME, nomeDigitado)\n            editor.apply()\n            \n            // Atualiza a saudação na tela imediatamente\n            textViewSaudacao.text = \"Olá, $nomeDigitado!\"\n            editTextNome.text.clear()\n        }\n    }\n}</code></pre>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <div id=\"tarefa-aula13\" class=\"mb-16\">\n    <h3 class=\"text-3xl font-bold text-slate-800 mb-6\">\n      Encerramento e Próximos Passos\n    </h3>\n    <div class=\"callout callout-task\">\n      <h5 class=\"font-bold mb-2\">Tarefa para a próxima aula (TED)</h5>\n      <p class=\"mb-4\">\n        O desafio é criar um app simples que utilize\n        <code>SharedPreferences</code> para lembrar o nome do usuário entre\n        sessões, exibindo uma mensagem personalizada ao abrir o app novamente.\n      </p>\n      <ol class=\"list-decimal list-inside space-y-2\">\n        <li>\n          Siga a atividade prática para construir e entender o app \"Lembrar de\n          Mim\".\n        </li>\n        <li>\n          Execute o app, salve um nome, feche completamente o aplicativo (pelo\n          gerenciador de apps recentes) e abra-o novamente para confirmar que a\n          saudação personalizada foi carregada.\n        </li>\n        <li>\n          Tire um print da tela mostrando a saudação personalizada após reabrir\n          o app e submeta no Moodle.\n        </li>\n      </ol>\n    </div>\n    <div class=\"bg-white p-6 rounded-lg shadow-md mt-8\">\n      <h4 class=\"font-bold text-xl text-slate-800 mb-4\">\n        Bibliografia Recomendada\n      </h4>\n      <ul class=\"list-disc list-inside space-y-2\">\n        <li>\n          OLIVEIRA, Diego Bittencourt de et al.\n          <strong>Desenvolvimento para Dispositivos Móveis</strong>. Porto\n          Alegre: SAGAH, 2019. v. 1.\n        </li>\n        <li>\n          SIMAS, V. L. et al.\n          <strong>Desenvolvimento para Dispositivos Móveis – Volume 2</strong>.\n          Grupo A, 2019.\n        </li>\n        <li>\n          <a\n            href=\"https://developer.android.com/training/data-storage/shared-preferences\"\n            target=\"_blank\"\n            class=\"text-indigo-600 hover:underline font-semibold\"\n            >Documentação Oficial sobre SharedPreferences</a\n          >.\n        </li>\n      </ul>\n    </div>\n  </div>\n</section>\n"
    }
  ]
}
