{
  "formatVersion": "md3.lesson.v1",
  "id": "lesson-08",
  "title": "Aula 8: Unidade II – Salvando Estado com Bundle",
  "summary": "Detalha estratégias para preservar e restaurar dados de interface usando Bundle, onRestoreInstanceState e SavedStateHandle.",
  "objective": "Aplicar técnicas de preservação de estado para garantir continuidade da experiência em mudanças de configuração.",
  "objectives": [
    "Implementar `onSaveInstanceState` e `onRestoreInstanceState` para persistir rascunhos da interface.",
    "Comparar Bundle, ViewModel e SavedStateHandle, identificando limites e complementaridades.",
    "Aplicar testes manuais para validar restauração após rotação e mudança de idioma."
  ],
  "competencies": [
    "Manutenção de estado em aplicações móveis",
    "Arquitetura resiliente a mudanças de configuração"
  ],
  "skills": [
    "Persistir dados temporários usando Bundle.",
    "Configurar ViewModel com SavedStateHandle.",
    "Diagnosticar falhas de restauração por meio de testes instrumentados."
  ],
  "outcomes": [
    "App de boas-vindas preserva mensagens personalizadas em qualquer rotação.",
    "Checklist de cobertura descrevendo quais dados devem sobreviver às mudanças de configuração."
  ],
  "prerequisites": [
    "Conhecer o ciclo de vida de Activities (aula 7).",
    "Projeto base do app de boas-vindas concluído."
  ],
  "tags": ["android", "state", "bundle"],
  "duration": 105,
  "modality": "in-person",
  "resources": [
    {
      "label": "Save UI states",
      "url": "https://developer.android.com/topic/libraries/architecture/saving-states",
      "type": "article"
    },
    {
      "label": "SavedStateHandle documentation",
      "url": "https://developer.android.com/reference/androidx/lifecycle/SavedStateHandle",
      "type": "reference"
    }
  ],
  "bibliography": [
    "GOOGLE. <strong>ViewModel overview</strong>. Android Developers, 2024.",
    "SAGAH. <strong>Desenvolvimento para Dispositivos Móveis</strong>. Cap. 5 – Persistência de Estado, 2019."
  ],
  "assessment": {
    "type": "practice",
    "description": "Checklist e vídeo curto demonstrando restauração de estado no app desenvolvido em aula.",
    "rubric": "Mostra o estado preservado após rotação, documenta decisões e envia evidências no Moodle."
  },
  "content": [
    {
      "type": "flightPlan",
      "title": "Plano de voo da aula (1h 45min)",
      "items": [
        "<strong>(10 min) Icebreaker:</strong> bugs clássicos de formulário que perdem dados.",
        "<strong>(20 min) Revisão do ciclo de vida:</strong> ligando eventos às oportunidades de salvar estado.",
        "<strong>(25 min) Bundle essencial:</strong> `onSaveInstanceState` e `onRestoreInstanceState` passo a passo.",
        "<strong>(20 min) ViewModel + SavedStateHandle:</strong> preservando lógica e dados pesados.",
        "<strong>(15 min) Boas práticas e limites:</strong> quando optar por Room/SharedPreferences.",
        "<strong>(15 min) Laboratório + TED:</strong> checklist de cobertura e ajustes no app."
      ]
    },
    {
      "type": "callout",
      "variant": "info",
      "title": "Situação real",
      "content": "Seu app fecha ao rotacionar durante uma apresentação para a gerência. Como impedir que a demo falhe novamente?"
    },
    {
      "type": "cardGrid",
      "title": "Estratégias de preservação",
      "columns": 2,
      "cards": [
        {
          "title": "Bundle",
          "subtitle": "Estado imediato",
          "tone": "info",
          "items": [
            "Dados leves e serializáveis",
            "Sobrevive a recriações pontuais",
            "Boa opção para campos de formulário"
          ]
        },
        {
          "title": "ViewModel + SavedStateHandle",
          "subtitle": "Estado de tela",
          "tone": "success",
          "items": [
            "Mantém lógica e dados em memória",
            "Integra com corrotinas e Flow",
            "Usa bundle apenas como fallback"
          ]
        }
      ]
    },
    {
      "type": "contentBlock",
      "title": "Bundle na prática",
      "content": [
        {
          "type": "paragraph",
          "text": "Use o Bundle como um snapshot rápido do que precisa ser restaurado. Evite serializar objetos grandes: priorize IDs ou strings necessárias para reconstruir o estado."
        },
        {
          "type": "code",
          "language": "kotlin",
          "code": "private const val KEY_MESSAGE = \"message\"\n\noverride fun onSaveInstanceState(outState: Bundle) {\n  super.onSaveInstanceState(outState)\n  outState.putString(KEY_MESSAGE, binding.messageInput.text.toString())\n}\n\noverride fun onRestoreInstanceState(savedInstanceState: Bundle) {\n  super.onRestoreInstanceState(savedInstanceState)\n  binding.messageInput.setText(savedInstanceState.getString(KEY_MESSAGE))\n}"
        },
        {
          "type": "callout",
          "variant": "warning",
          "title": "Cuidado com parcelables pesados",
          "content": "Não coloque listas enormes ou bitmaps no Bundle – use repositórios persistentes para dados grandes."
        }
      ]
    },
    {
      "type": "contentBlock",
      "title": "ViewModel com SavedStateHandle",
      "content": [
        {
          "type": "paragraph",
          "text": "Combine ViewModel com SavedStateHandle para manter dados reativos que sobrevivem a recriações, sem depender de serialização manual."
        },
        {
          "type": "code",
          "language": "kotlin",
          "code": "class GreetingViewModel(\n  private val state: SavedStateHandle\n) : ViewModel() {\n\n  var name: String\n    get() = state.get<String>(\"name\").orEmpty()\n    set(value) {\n      state[\"name\"] = value\n    }\n\n  val greeting: StateFlow<String> = state\n    .getStateFlow(\"greeting\", \"Olá, visitante!\")\n}"
        },
        {
          "type": "orderedList",
          "items": [
            {
              "title": "Expose dados reativos",
              "text": "Utilize `StateFlow` ou `LiveData` para atualizar a UI automaticamente."
            },
            {
              "title": "Sincronize campos",
              "text": "Atualize o SavedStateHandle sempre que o usuário editar o texto."
            },
            {
              "title": "Restaurar na Activity",
              "text": "Colete o fluxo no `onCreate` e preencha o formulário."
            }
          ]
        }
      ]
    },
    {
      "type": "contentBlock",
      "title": "Testes de robustez",
      "content": [
        {
          "type": "orderedList",
          "items": [
            {
              "title": "Rotacione o dispositivo",
              "text": "Verifique se nenhum dado some ao alternar entre portrait/landscape."
            },
            {
              "title": "Altere o idioma",
              "text": "Simule mudança de locale via Settings > System > Languages."
            },
            {
              "title": "Entre e saia do app",
              "text": "Pressione Home, volte via overview e confira se o estado persiste."
            }
          ]
        },
        {
          "type": "callout",
          "variant": "info",
          "title": "Dica",
          "content": "Use o comando <code>adb shell am kill</code> para simular o sistema finalizando o processo em segundo plano."
        }
      ]
    },
    {
      "type": "contentBlock",
      "title": "Laboratório + TED",
      "content": [
        {
          "type": "paragraph",
          "text": "Atualize o app de boas-vindas: preserve o nome, personalize a saudação e registre as evidências de teste."
        },
        {
          "type": "orderedList",
          "items": [
            {
              "title": "Checklist em dupla",
              "text": "Marque quais campos precisam ser preservados e quem será responsável."
            },
            {
              "title": "Implementação",
              "text": "Aplique Bundle para campos simples e ViewModel para lógica derivada."
            },
            {
              "title": "Validação",
              "text": "Grave um vídeo curto demonstrando o estado preservado."
            }
          ]
        },
        {
          "type": "callout",
          "variant": "task",
          "title": "Entrega assíncrona",
          "content": "<p>Publique o vídeo e o checklist no Moodle. Adicione notas sobre o que ainda precisa ser protegido no app final.</p>"
        }
      ]
    },
    {
      "type": "bibliographyBlock",
      "title": "Leituras recomendadas",
      "references": [
        "GOOGLE. <strong>Handle configuration changes</strong>. 2024.",
        "DÍAZ, José. <strong>Kotlin for Android Developers</strong>. Leanpub, 2023. Cap. 6."
      ]
    }
  ],
  "metadata": {
    "status": "in-review",
    "updatedAt": "2024-05-20T00:00:00.000Z",
    "owners": ["Prof. João Lima", "Profa. Ana Bezerra"],
    "sources": ["Backlog da sprint 'State' – DDM", "Notas de laboratório 2024.1"]
  }
}
