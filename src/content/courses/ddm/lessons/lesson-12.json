{
  "formatVersion": "md3.lesson.v1",
  "id": "lesson-12",
  "title": "Aula 12: Unidade II – Mini App de Contatos",
  "summary": "Integra ciclo de vida, Intents e persistência temporária para construir um mini app de contatos com navegação completa.",
  "objective": "Consolidar os aprendizados da unidade criando um fluxo completo de cadastro, detalhes e compartilhamento de contatos.",
  "objectives": [
    "Planejar o fluxo completo do mini app utilizando Intents explícitas e implícitas.",
    "Persistir estado temporário entre telas e mudanças de configuração.",
    "Publicar evidências do protótipo e documentar decisões técnicas."
  ],
  "competencies": [
    "Entrega iterativa de funcionalidades mobile",
    "Documentação técnica de apps Android"
  ],
  "skills": [
    "Desenhar jornadas multi-Activity com troca de dados.",
    "Aplicar bundles e ViewModel em formulários dinâmicos.",
    "Utilizar Intents implícitas para compartilhar o contato final."
  ],
  "outcomes": [
    "Mini app funcional com cadastro, detalhes e compartilhamento de contato.",
    "Apresentação curta destacando decisões e próximos incrementos."
  ],
  "prerequisites": [
    "Concluir as aulas 07-11 e exercícios prévios.",
    "Android Studio atualizado e emulador configurado."
  ],
  "tags": ["android", "projeto", "contatos"],
  "duration": 120,
  "modality": "in-person",
  "resources": [
    {
      "label": "Material 3 guidelines",
      "url": "https://m3.material.io/components",
      "type": "design"
    },
    {
      "label": "Android Architecture Samples",
      "url": "https://github.com/android/architecture-samples",
      "type": "repository"
    }
  ],
  "bibliography": [
    "GOOGLE. Guide to app architecture. 2024.",
    "SAGAH. Desenvolvimento para Dispositivos Móveis. Cap. 7 – Integração de Funcionalidades, 2019."
  ],
  "assessment": {
    "type": "project",
    "description": "Entrega do mini app de contatos com vídeo demonstrativo e relatório curto.",
    "rubric": "App compila, executa o fluxo completo, apresenta validações e documentação compartilhada com a turma."
  },
  "content": [
    {
      "type": "flightPlan",
      "title": "Plano de voo da aula (2h)",
      "items": [
        "(15 min) Kick-off: visão geral do mini app e critérios de avaliação.",
        "(25 min) Arquitetura de navegação: definindo Activities, extras e Intents implícitas.",
        "(25 min) Implementação guiada: cadastro → detalhes → compartilhamento.",
        "(20 min) Persistência de estado: ViewModel, SavedStateHandle e bundles.",
        "(20 min) Testes e ajustes finais: rotação, cenários inválidos, logs.",
        "(15 min) Apresentações relâmpago e TED."
      ]
    },
    {
      "type": "callout",
      "variant": "info",
      "title": "Visão do produto",
      "content": [
        {
          "type": "paragraph",
          "text": "O professor precisa de um app simples para registrar contatos de supervisores e compartilhar rapidamente durante visitas técnicas."
        }
      ]
    },
    {
      "type": "timeline",
      "title": "Fases do mini app",
      "steps": [
        {
          "title": "Planejamento",
          "content": "Defina campos obrigatórios, fluxo de navegação e Intents necessárias."
        },
        {
          "title": "Prototipagem",
          "content": "Monte telas com Material 3 e valide estados vazios."
        },
        {
          "title": "Integração",
          "content": "Implemente troca de dados entre Activities e estados persistidos."
        },
        {
          "title": "Refinamento",
          "content": "Adicione feedbacks, validações e compartilhamento final."
        },
        {
          "title": "Apresentação",
          "content": "Registre vídeo e documentação compartilhada com a turma."
        }
      ]
    },
    {
      "type": "cardGrid",
      "title": "Componentes do mini app",
      "columns": 3,
      "cards": [
        {
          "title": "Cadastro",
          "subtitle": "Activity principal",
          "tone": "info",
          "items": [
            "Campos: nome, telefone, empresa",
            "Validação com mensagens inline",
            "ViewModel para rascunhos"
          ]
        },
        {
          "title": "Detalhes",
          "subtitle": "Resumo do contato",
          "tone": "success",
          "items": [
            "Recebe `UserInfo` por Parcelable",
            "Exibe opções de edição",
            "Permite retorno com alterações"
          ]
        },
        {
          "title": "Compartilhar",
          "subtitle": "Intent implícita",
          "tone": "secondary",
          "items": [
            "Gera texto formatado",
            "Oferece chooser de apps",
            "Inclui botão para mapa com endereço"
          ]
        }
      ]
    },
    {
      "type": "contentBlock",
      "title": "Fluxo de implementação",
      "content": [
        {
          "type": "orderedList",
          "items": [
            {
              "title": "Modelagem",
              "text": "Atualize o `UserInfo` com campos adicionais (telefone, empresa, endereço)."
            },
            {
              "title": "Navegação",
              "text": "Reaproveite contratos de extras e Activity Result da aula 10."
            },
            {
              "title": "Compartilhamento",
              "text": "Monte mensagem amigável e utilize `Intent.ACTION_SEND`."
            }
          ]
        }
      ]
    },
    {
      "type": "contentBlock",
      "title": "Persistindo estado e prevenindo erros",
      "content": [
        {
          "type": "code",
          "language": "kotlin",
          "code": "class ContactViewModel(private val state: SavedStateHandle) : ViewModel() {\n  var draft by mutableStateOf(\n    state.get<UserInfo>(\"draft\") ?: UserInfo.blank()\n  )\n    private set\n\n  fun updateDraft(transform: (UserInfo) -> UserInfo) {\n    draft = transform(draft)\n    state[\"draft\"] = draft\n  }\n}"
        },
        {
          "type": "callout",
          "variant": "warning",
          "title": "Evite duplicar Activities",
          "content": [
            {
              "type": "paragraph",
              "text": "Ao retornar do resumo, finalize a Activity de detalhes ou utilize `ActivityResultContracts` para sincronizar alterações."
            }
          ]
        }
      ]
    },
    {
      "type": "contentBlock",
      "title": "Testes recomendados",
      "content": [
        {
          "type": "orderedList",
          "items": [
            {
              "title": "Mudança de orientação",
              "text": "O rascunho permanece intacto?"
            },
            {
              "title": "Campos vazios",
              "text": "Mensagens de erro informam o usuário?"
            },
            {
              "title": "Compartilhar",
              "text": "O texto gerado é legível e inclui todos os dados?"
            }
          ]
        }
      ]
    },
    {
      "type": "contentBlock",
      "title": "Apresentação e TED",
      "content": [
        {
          "type": "orderedList",
          "items": [
            {
              "title": "Vídeo de 3 minutos",
              "text": "Demonstre o fluxo completo e destaque decisões de arquitetura."
            },
            {
              "title": "Checklist",
              "text": "Publique no mural quais requisitos foram atendidos e o backlog futuro."
            },
            {
              "title": "Feedback",
              "text": "Anote melhorias sugeridas pela dupla/par."
            }
          ]
        },
        {
          "type": "callout",
          "variant": "task",
          "title": "Entrega assíncrona",
          "content": [
            {
              "type": "paragraph",
              "text": "Envie o vídeo, checklist e link do repositório no Moodle até 23h59 do dia seguinte."
            },
            {
              "type": "list",
              "ordered": false,
              "items": [
                "Link da tarefa: https://moodle.unichristus.br/mod/assign/view.php?id=98171.",
                "Publique o feedback no fórum: https://moodle.unichristus.br/mod/forum/view.php?id=45322.",
                "Atualize a planilha de checkpoint antes de enviar (planilha compartilhada na aba Unidade II)."
              ]
            },
            {
              "type": "paragraph",
              "text": "Checklist mínimo: vídeo MP4 de até 3 minutos, checklist em PDF e repositório com README atualizado e tag release."
            }
          ]
        }
      ]
    },
    {
      "type": "callout",
      "variant": "info",
      "title": "Fórum de feedback obrigatório",
      "content": [
        {
          "type": "paragraph",
          "text": "Após enviar a entrega, registre um resumo das melhorias priorizadas no fórum da turma para receber comentários dos pares."
        },
        {
          "type": "list",
          "ordered": false,
          "items": [
            "Use o tópico: Fórum de Iterações do Mini App de Contatos.",
            "Inclua link para o vídeo e destaques do backlog.",
            "Responda a pelo menos dois colegas até 24h após a postagem."
          ]
        }
      ]
    },
    {
      "type": "bibliographyBlock",
      "title": "Referências complementares",
      "references": [
        "GOOGLE. Sample apps: Sunflower. 2024.",
        "DÍAZ, José. Kotlin for Android Developers. Leanpub, 2023. Cap. 9."
      ]
    }
  ],
  "metadata": {
    "status": "in-review",
    "updatedAt": "2024-06-18T00:00:00.000Z",
    "owners": ["Prof. Tiago Sombra", "Ana Paula (Governança)"],
    "sources": [
      "Plano de projeto DDM",
      "Notas de laboratório 2024.1",
      "docs/governance/moodle-ted-crosswalk.md"
    ],
    "evidences": [
      "Ata: docs/governance/professor-validation-meeting.md",
      "Planilha: docs/governance/post-module-monitoring.md"
    ]
  }
}
