{
  "formatVersion": "md3.lesson.v1",
  "id": "lesson-20",
  "title": "Aula 20: Notificações Push e WorkManager",
  "slug": "notificacoes-push-e-workmanager",
  "summary": "Integra Firebase Cloud Messaging, agenda tarefas com WorkManager e aplica boas práticas de UX e privacidade.",
  "objective": "Implementar notificações confiáveis e tarefas em segundo plano alinhadas ao comportamento esperado pela Play Store.",
  "objectives": [
    "Registrar dispositivos no Firebase Cloud Messaging e lidar com tokens.",
    "Configurar WorkManager para sincronização periódica e ações críticas.",
    "Desenhar UX de notificações com canais, prioridade e acessibilidade.",
    "Monitorar entregabilidade usando dashboards e logs estruturados."
  ],
  "competencies": [
    "Arquitetura de mensageria móvel",
    "Trabalho assíncrono em Android",
    "UX writing para notificações"
  ],
  "skills": [
    "Criar canais de notificação com `NotificationCompat`.",
    "Implementar `FirebaseMessagingService` com injeção de dependência.",
    "Agendar Workers com restrições de rede/bateria.",
    "Registrar analytics de cliques e cancelamentos."
  ],
  "outcomes": [
    "App recebe e exibe notificações com deep link funcional.",
    "WorkManager executa tarefa programada com logs e retry controlado.",
    "Dashboard documenta taxa de abertura e erros."
  ],
  "prerequisites": ["Aulas 17–19"],
  "tags": ["android", "firebase", "workmanager", "ux"],
  "duration": 120,
  "modality": "in-person",
  "resources": [
    {
      "label": "Firebase Cloud Messaging",
      "url": "https://firebase.google.com/docs/cloud-messaging",
      "type": "guide"
    },
    {
      "label": "WorkManager",
      "url": "https://developer.android.com/topic/libraries/architecture/workmanager",
      "type": "guide"
    },
    {
      "label": "Notification design",
      "url": "https://developer.android.com/develop/ui/views/notifications",
      "type": "guide"
    }
  ],
  "bibliography": [
    "Google. WorkManager Guides. 2024.",
    "Google. Notification UX Checklist. 2024.",
    "Android Dev BR. Guia de mensageria. 2024."
  ],
  "assessment": {
    "type": "formative",
    "description": "Formulário avaliando clareza, timing e registro de métricas das notificações enviadas."
  },
  "content": [
    {
      "type": "videos",
      "title": "Vídeos em português para mensageria",
      "videos": [
        {
          "url": "https://www.youtube.com/watch?v=Ewh9ERtkLxI",
          "title": "Notificações Android com Firebase Cloud Messaging (Canal Tek Zoom)",
          "caption": "Configuração completa do FCM com exemplos em português."
        },
        {
          "url": "https://www.youtube.com/watch?v=4S-YFQki71s",
          "title": "WorkManager na prática (Android Dev BR)",
          "caption": "Demonstra como agendar workers com restrições e acompanhar status."
        }
      ]
    },
    {
      "type": "lessonPlan",
      "title": "Plano de aula",
      "cards": [
        {
          "title": "Aquecimento",
          "content": "Revisar notificações recentes no celular e identificar quais foram úteis ou spam."
        },
        {
          "title": "Live coding",
          "content": "Implementar FCM + canal + deep link, seguido de Worker para sincronizar dados."
        },
        {
          "title": "Retro",
          "content": "Registrar métricas de entrega e ajustar backlog da sprint."
        }
      ]
    },
    {
      "type": "contentBlock",
      "title": "Estudo de caso – Urban Delivery: push que não converte",
      "content": [
        {
          "type": "paragraph",
          "text": "O app Urban Delivery envia promoções e atualizações de rota, mas a taxa de abertura caiu para 6%."
        },
        {
          "type": "paragraph",
          "text": "Os usuários reclamam de notificações em horários ruins e mensagens irrelevantes. Além disso, alguns devices Android não recebem push por falta de renovação do token."
        },
        {
          "type": "unorderedList",
          "items": [
            "Base ativa: 320 mil entregadores",
            "KPIs: Abertura > 18%, execução de ação em 30%",
            "Infra: Firebase Cloud Messaging + WorkManager + BigQuery"
          ]
        },
        {
          "type": "unorderedList",
          "items": [
            "Pergunta: Como organizar canais e tópicos para separar alertas operacionais de marketing?",
            "Pergunta: Qual rotina garante que tokens expirados sejam renovados sem exigir login manual?",
            "Pergunta: Como medir impacto de notificações em conversão dentro do app?"
          ]
        },
        {
          "type": "unorderedList",
          "items": [
            "Ação sugerida: Criar estratégia de canais com opt-in explícito e mensagens personalizadas.",
            "Ação sugerida: Agendar worker periódico para sincronizar tokens e atualizar preferências do usuário.",
            "Ação sugerida: Publicar dashboard com aberturas, cliques e ações pós-notificação."
          ]
        }
      ]
    },
    {
      "type": "callout",
      "variant": "warning",
      "title": "LGPD e consentimento",
      "content": "Solicite opt-in explícito para notificações promocionais e registre a escolha do usuário."
    },
    {
      "type": "contentBlock",
      "title": "Diagrama de fluxo",
      "content": [
        {
          "type": "image",
          "src": "https://firebase.google.com/static/docs/cloud-messaging/images/mobile-server-interaction.svg",
          "alt": "Fluxo de mensagens Firebase"
        },
        {
          "type": "unorderedList",
          "items": [
            "Recepção → canal → conteúdo → ação/deep link.",
            "Worker programado → requisição → atualização local → notificação condicional.",
            "Logs → Analytics → painel semanal."
          ]
        }
      ]
    },
    {
      "type": "stepper",
      "title": "Operação de mensageria",
      "steps": [
        {
          "title": "Arquitetar canais",
          "description": "Defina categorias (operacional, marketing, crítica) e permissões LGPD."
        },
        {
          "title": "Implementar serviço",
          "description": "Gerencie tokens, tópicos e deep links no `FirebaseMessagingService`."
        },
        {
          "title": "Agendar workers",
          "description": "Use WorkManager para sincronizar preferências, renovar tokens e enviar alertas programados."
        },
        {
          "title": "Mensurar e iterar",
          "description": "Coleta métricas de entrega/abertura, roda experimentos A/B e ajusta copy e horários."
        }
      ]
    },
    {
      "type": "pipelineCanvas",
      "title": "Pipeline de mensageria",
      "summary": "Garantir entrega confiável, UX clara e observabilidade.",
      "stages": [
        {
          "id": "config",
          "title": "1. Configuração",
          "summary": "Tokens, canais, permissões e tópico padrão.",
          "status": "in-progress",
          "owners": ["Mobile"],
          "deliverables": [
            {
              "id": "token",
              "label": "Token registrado"
            },
            {
              "id": "canal",
              "label": "Canais documentados"
            }
          ]
        },
        {
          "id": "execucao",
          "title": "2. Execução",
          "summary": "Worker e serviço de mensagens implementados com testes.",
          "status": "not-started",
          "owners": ["Mobile", "QA"],
          "deliverables": [
            {
              "id": "deep",
              "label": "Deep link testado"
            },
            {
              "id": "relatorio",
              "label": "Planilha de métricas"
            }
          ]
        },
        {
          "id": "monitoramento",
          "title": "3. Monitoramento",
          "summary": "Acompanhamento de entregabilidade, opt-outs e falhas.",
          "status": "not-started",
          "owners": ["Mobile", "Marketing"],
          "deliverables": [
            {
              "id": "dashboard",
              "label": "Dashboard Data Studio"
            },
            {
              "id": "playbook",
              "label": "Playbook de contingência"
            }
          ]
        }
      ]
    },
    {
      "type": "quiz",
      "title": "Checagem rápida",
      "question": "Um worker periódico está falhando por falta de rede. Qual abordagem mantém o compromisso de entrega sem drenar bateria?",
      "options": [
        {
          "id": "opt-1",
          "text": "Configurar restrição de rede não medida (`NETWORK_TYPE_UNMETERED`) e permitir reexecução quando a condição for satisfeita.",
          "correct": true
        },
        {
          "id": "opt-2",
          "text": "Executar o worker imediatamente em `Dispatchers.IO` ignorando restrições.",
          "correct": false
        },
        {
          "id": "opt-3",
          "text": "Aumentar o intervalo do worker para 24 horas para evitar conflitos.",
          "correct": false
        }
      ],
      "allowRetry": true,
      "feedback": {
        "correct": "Respeitar restrições garante economia de bateria e o WorkManager reagenda automaticamente ao detectar rede adequada.",
        "incorrect": "Respeitar restrições garante economia de bateria e o WorkManager reagenda automaticamente ao detectar rede adequada."
      }
    },
    {
      "type": "callout",
      "variant": "task",
      "title": "TED – Push observável",
      "content": "Enviar notificação gatilhada por Worker, registrar métricas em planilha e postar vídeo de 60s mostrando fluxo completo. Commit com tag `NOTIFY_A20`."
    }
  ],
  "metadata": {
    "status": "in-review",
    "updatedAt": "2025-02-10T00:00:00.000Z",
    "owners": ["Equipe de Conteúdo DDM"],
    "sources": ["Plano de ensino DDM 2025.2", "Revisão docente fev/2025"]
  }
}
