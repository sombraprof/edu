{
  "formatVersion": "md3.lesson.v1",
  "id": "lesson-19",
  "title": "Aula 19: Autenticação Firebase e Firestore com Arquitetura Limpa",
  "slug": "firebase-auth-firestore-arquitetura-limpa",
  "summary": "Configura login com Firebase Authentication, sincroniza dados no Firestore e mantém a arquitetura modular preparada para testes.",
  "objective": "Integrar autenticação e persistência em nuvem garantindo segurança, consistência offline-first e rastreabilidade de dados.",
  "objectives": [
    "Configurar Firebase Authentication (email/senha + provedor externo).",
    "Sincronizar dados do usuário com Firestore usando flows reativos.",
    "Implementar camadas repository/use case desacopladas para testes.",
    "Registrar regras de segurança e estratégias de cache offline."
  ],
  "competencies": [
    "Integração com BaaS",
    "Arquitetura limpa em mobile",
    "Segurança de dados em aplicativos"
  ],
  "skills": [
    "Configurar Firebase BoM e dependências gradle.",
    "Criar `FirebaseAuth` wrapper com `suspend` functions.",
    "Utilizar `SnapshotListener`/`Flow` para sincronização em tempo real.",
    "Escrever regras Firestore mínimas e scripts de emulador."
  ],
  "outcomes": [
    "Tela de login funcional com validação e feedbacks acessíveis.",
    "Firestore sincronizando perfil do usuário com cache offline.",
    "Documentação das regras e estratégias de rollback anexada ao Moodle."
  ],
  "prerequisites": ["Aulas 17-18 – Retrofit + Coroutines"],
  "tags": ["android", "firebase", "firestore", "arquitetura"],
  "duration": 120,
  "modality": "in-person",
  "resources": [
    {
      "label": "Firebase Auth for Android",
      "url": "https://firebase.google.com/docs/auth/android/start",
      "type": "guide"
    },
    {
      "label": "Cloud Firestore Android",
      "url": "https://firebase.google.com/docs/firestore/quickstart",
      "type": "guide"
    },
    {
      "label": "Firebase Security Rules",
      "url": "https://firebase.google.com/docs/rules",
      "type": "guide"
    }
  ],
  "bibliography": [
    "Google. Firebase Authentication Documentation. 2024.",
    "Google. Firestore Security Rules Samples. 2024.",
    "Google. Offline data with Firestore. 2024."
  ],
  "assessment": {
    "type": "formative",
    "description": "Checklist de login + Firestore com evidências (vídeo e captura de regras)."
  },
  "content": [
    {
      "type": "videos",
      "title": "Vídeos em português para integrar Firebase",
      "videos": [
        {
          "url": "https://www.youtube.com/watch?v=3I5l-6N6S4w",
          "title": "Firebase Authentication no Android passo a passo (DevDojo Brasil)",
          "caption": "Configuração inicial, telas de login e feedback de erros em português."
        },
        {
          "url": "https://www.youtube.com/watch?v=vYlGNZZwY5Y",
          "title": "Firestore na prática com Kotlin (Canal Android Dev BR)",
          "caption": "Demonstra sincronização em tempo real e boas práticas de cache."
        }
      ]
    },
    {
      "type": "lessonPlan",
      "title": "Plano da aula",
      "cards": [
        {
          "title": "Check-in",
          "content": "Qual experiência de login mais travou você nos últimos meses?"
        },
        {
          "title": "Laboratório",
          "content": "Configurar projeto Firebase, criar tela de login e sincronizar dados com Firestore usando arquitetura modular."
        },
        {
          "title": "Retro",
          "content": "Revisar logs, regras de segurança e tarefas assíncronas para o squad."
        }
      ]
    },
    {
      "type": "contentBlock",
      "title": "Estudo de caso – FinSaver: onboarding turbulento",
      "content": [
        {
          "type": "paragraph",
          "text": "O app financeiro FinSaver lançou login social, mas usuários estão perdendo dados de perfil ao alternar dispositivos."
        },
        {
          "type": "paragraph",
          "text": "A arquitetura foi migrada para Clean Architecture, porém o repository não trata diferenças entre cache local, Firestore e contas sociais. A retenção de novos usuários caiu 18%."
        },
        {
          "type": "unorderedList",
          "items": [
            "Fluxos críticos: Cadastro, sincronização de metas, recuperação de senha",
            "Stack: Firebase Auth + Firestore + emulador local",
            "SLA: Perfil sincronizado em < 3 s após login"
          ]
        },
        {
          "type": "unorderedList",
          "items": [
            "Pergunta: Como garantir consistência entre dados locais e remotos usando Flow?",
            "Pergunta: Quais regras de segurança precisam ser validadas para evitar exposição de dados?",
            "Pergunta: Que testes automatizados comprovam que o onboarding foi estabilizado?"
          ]
        },
        {
          "type": "unorderedList",
          "items": [
            "Ação sugerida: Implemente use case que carrega perfil, salva em cache e expõe estado imutável.",
            "Ação sugerida: Configure regras Firestore restritivas por `uid` e escreva testes com Emulator Suite.",
            "Ação sugerida: Monte checklist de QA para login social, incluindo fluxos offline."
          ]
        }
      ]
    },
    {
      "type": "callout",
      "variant": "warning",
      "title": "Pré-requisitos técnicos",
      "content": "Conta Firebase configurada, Google Services JSON baixado, emulador atualizado e Play Services habilitado."
    },
    {
      "type": "contentBlock",
      "title": "Arquitetura",
      "content": [
        {
          "type": "image",
          "src": "https://firebase.google.com/static/images/firestore/firestore-security-rules.png",
          "alt": "Fluxo de segurança do Firestore"
        },
        {
          "type": "orderedList",
          "items": [
            {
              "title": "Camada de dados",
              "text": "Wrapper para FirebaseAuth + Firestore com mapeamento para DTOs."
            },
            {
              "title": "Domínio",
              "text": "Use cases `SignInUser`, `ObserveProfile`, `SignOut`."
            },
            {
              "title": "Apresentação",
              "text": "ViewModel com `StateFlow<LoginUiState>` e Compose exibindo feedbacks acessíveis."
            }
          ]
        }
      ]
    },
    {
      "type": "stepper",
      "title": "Fluxo seguro de autenticação",
      "steps": [
        {
          "title": "Setup confiável",
          "description": "Registrar SHA, configurar providers e validar chaves em ambientes dev/stage."
        },
        {
          "title": "Camada de dados",
          "description": "Criar abstrações para Auth/Firestore com tratamento de erros e mapeamento para modelos do domínio."
        },
        {
          "title": "Experiência do usuário",
          "description": "Renderizar estados Loading/Success/Error, oferecer login offline e explicar limites ao jogador."
        },
        {
          "title": "QA e segurança",
          "description": "Rodar testes com emulador, validar regras, revisar métricas no dashboard e preparar plano de rollback."
        }
      ]
    },
    {
      "type": "pipelineCanvas",
      "title": "Pipeline de autenticação + Firestore",
      "summary": "Sequência para integrar login seguro, sincronização e testes.",
      "stages": [
        {
          "id": "setup",
          "title": "1. Setup",
          "summary": "Criar projeto Firebase, configurar SHA, adicionar JSON e dependências.",
          "status": "in-progress",
          "owners": ["Mobile"],
          "deliverables": [
            {
              "id": "googlejson",
              "label": "google-services.json"
            },
            {
              "id": "bom",
              "label": "BoM configurado"
            }
          ]
        },
        {
          "id": "implementacao",
          "title": "2. Implementação",
          "summary": "Criar fluxos de login, cadastro e sincronização de perfil.",
          "status": "not-started",
          "owners": ["Mobile"],
          "deliverables": [
            {
              "id": "ui",
              "label": "Tela Compose pronta"
            },
            {
              "id": "rules",
              "label": "Regras V1"
            }
          ]
        },
        {
          "id": "qa",
          "title": "3. QA & segurança",
          "summary": "Testes com Firebase Emulator Suite, validação offline e documentação.",
          "status": "not-started",
          "owners": ["QA"],
          "deliverables": [
            {
              "id": "evidencia",
              "label": "Vídeo QA"
            },
            {
              "id": "doc",
              "label": "Checklist de segurança"
            }
          ]
        }
      ]
    },
    {
      "type": "quiz",
      "title": "Checagem rápida",
      "question": "O app precisa funcionar offline por até 48h. Qual estratégia mantém o perfil atualizado sem conflitos quando a conexão volta?",
      "options": [
        {
          "id": "opt-1",
          "text": "Ativar `setPersistenceEnabled(true)`, armazenar última versão local e aplicar `merge` ao reconectar, resolvendo conflitos no use case.",
          "correct": true
        },
        {
          "id": "opt-2",
          "text": "Desabilitar o cache offline do Firestore para evitar dados divergentes.",
          "correct": false
        },
        {
          "id": "opt-3",
          "text": "Criar uma coleção paralela apenas para dados offline e sincronizar manualmente depois.",
          "correct": false
        }
      ],
      "allowRetry": true,
      "feedback": {
        "correct": "O cache offline do Firestore cuida da fila local; cabe ao domínio tratar conflitos e expor estado consistente.",
        "incorrect": "O cache offline do Firestore cuida da fila local; cabe ao domínio tratar conflitos e expor estado consistente."
      }
    },
    {
      "type": "callout",
      "variant": "task",
      "title": "TED – Login completo",
      "content": "Submeta vídeo de 2 minutos demonstrando login, cadastro, sincronização de perfil e atualização offline, anexando as regras Firestore e link do commit (tag `FIREBASE_A19`)."
    }
  ],
  "metadata": {
    "status": "in-review",
    "updatedAt": "2025-02-10T00:00:00.000Z",
    "owners": ["Equipe de Conteúdo DDM"],
    "sources": ["Plano de ensino DDM 2025.2", "Revisão docente fev/2025"]
  }
}
