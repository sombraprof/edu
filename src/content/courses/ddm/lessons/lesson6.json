{
  "id": "lesson6",
  "title": "Aula 6: Unidade I – Projeto Prático: App de Boas-vindas",
  "objective": "",
  "content": [
    {
      "type": "html",
      "html": " <section id=\"aula6\" class=\"mb-16 pt-16\">\n        <header class=\"mb-12 border-b pb-8\">\n            <h2 class=\"text-4xl font-bold text-slate-900\">\n                Aula 6: Unidade I – Projeto Prático: App de Boas-vindas\n            </h2>\n            <p class=\"text-lg text-slate-600 mt-2\">\n                Consolidar os conhecimentos adquiridos, desenvolvendo um aplicativo funcional com interface interativa e\n                mensagens personalizadas.\n            </p>\n        </header>\n\n        <div class=\"bg-white p-6 rounded-lg shadow-md mb-12\">\n            <h3 class=\"font-bold text-2xl text-slate-800 mb-4\">Plano de Voo da Aula</h3>\n            <ul class=\"list-disc list-inside space-y-2 text-slate-700\">\n                <li><strong>Recapitulação e Objetivo:</strong> Juntar as peças! Vamos conectar a UI (Aula 4) com a\n                    lógica de eventos (Aula 5).</li>\n                <li><strong>O Desafio:</strong> Transformar nosso app para que ele mostre uma saudação personalizada na\n                    tela.</li>\n                <li><strong>Atividade Prática Guiada:</strong> Codificação passo a passo da funcionalidade completa.\n                </li>\n                <li><strong>Resultado Final:</strong> Ter um aplicativo 100% funcional que responde à interação do\n                    usuário.</li>\n                <li><strong>Documentação e Boas Práticas:</strong> A importância de comentar o código.</li>\n                <li><strong>Tarefa (TED):</strong> Finalizar e documentar o projeto.</li>\n            </ul>\n        </div>\n\n        <div id=\"recapitulacao\" class=\"mb-16\">\n            <h3 class=\"text-3xl font-bold text-slate-800 mb-6\">Recapitulação e Objetivo Final</h3>\n            <div class=\"bg-white p-8 rounded-lg shadow-md\">\n                <p class=\"text-lg mb-4\">Até agora, construímos um caminho sólido:</p>\n                <ul class=\"list-disc list-inside space-y-2\">\n                    <li>Na <strong>Aula 4</strong>, montamos a interface visual (o \"corpo\") do nosso app com <span class=\"code-text\">TextView</span>,\n                        <span class=\"code-text\">EditText</span> e <span class=\"code-text\">Button</span> no arquivo <span class=\"code-text\">activity_main.xml</span>.</li>\n                    <li>Na <strong>Aula 5</strong>, demos ao nosso app a capacidade de \"ouvir\" o usuário, capturando o\n                        clique do botão e exibindo uma mensagem de depuração no Logcat.</li>\n                </ul>\n                <p class=\"text-lg mt-4\">Hoje, vamos dar o passo final: <strong>conectar a lógica ao visual</strong>.\n                    Faremos com que o texto digitado pelo usuário apareça em um <span class=\"code-text\">TextView</span> na própria tela, criando\n                    nossa primeira experiência interativa completa.</p>\n                <img src=\"https://placehold.co/800x450/e0e7ff/3730a3?text=App+de+Boas-vindas+Funcionando\" alt=\"Mockup do aplicativo de boas-vindas\" class=\"mt-6 rounded-lg shadow-sm mx-auto\">\n            </div>\n        </div>\n\n        <div id=\"atividade-pratica-aula6\" class=\"mb-16\">\n            <h3 class=\"text-3xl font-bold text-slate-800 mb-6\">Atividade Prática: Mãos à Obra!</h3>\n            <div class=\"bg-white p-8 rounded-lg shadow-md\">\n                <p class=\"mb-4\">Vamos modificar nosso projeto para alcançar o objetivo. Precisaremos ajustar tanto o\n                    layout (XML) quanto a lógica (Kotlin).</p>\n\n                <h4 class=\"font-bold text-2xl text-slate-800 mt-8 mb-4\">Passo 1: Ajustar o Layout (XML)</h4>\n                <p class=\"mb-4\">Primeiro, vamos adicionar um novo <span class=\"code-text\">TextView</span> ao nosso layout, que servirá para exibir a\n                    mensagem de saudação. Ele começará invisível.</p>\n                <ol class=\"list-decimal list-inside space-y-2 my-4\">\n                    <li>Abra o arquivo <span class=\"code-text\">res/layout/activity_main.xml</span>.</li>\n                    <li>Adicione o novo <span class=\"code-text\">TextView</span> conforme o código abaixo.</li>\n                </ol>\n                <div class=\"code-block-wrapper\">\n                    <button class=\"copy-button\">Copiar</button>\n                    <div class=\"code-block\">\n                        <h5 class=\"mono\">&lt;-- Código Final para activity_main.xml --&gt;</h5>\n                        <pre><code>&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;\n&lt;androidx.constraintlayout.widget.ConstraintLayout ...&gt;\n\n    &lt;TextView\n        android:id=\"@+id/textViewLabel\"\n        ... /&gt;\n\n    &lt;EditText\n        android:id=\"@+id/editTextNome\"\n        ... /&gt;\n\n    &lt;Button\n        android:id=\"@+id/buttonSaudacao\"\n        ... /&gt;\n\n    &lt;!-- NOVO COMPONENTE ADICIONADO ABAIXO --&gt;\n    &lt;TextView\n        android:id=\"@+id/textViewResultado\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:layout_marginTop=\"32dp\"\n        android:textSize=\"20sp\"\n        android:textStyle=\"bold\"\n        android:visibility=\"invisible\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintTop_toBottomOf=\"@+id/buttonSaudacao\"\n        tools:text=\"Olá, Mundo!\"\n        tools:visibility=\"visible\" /&gt;\n\n&lt;/androidx.constraintlayout.widget.ConstraintLayout&gt;</code></pre>\n                    </div>\n                </div>\n                <div class=\"callout callout-info\">\n                    <h5 class=\"font-bold mb-2\">Novos Atributos</h5>\n                    <ul class=\"list-disc list-inside\">\n                        <li><span class=\"code-text\">android:visibility=\"invisible\"</span>: Faz com que o <code>TextView</code> exista e\n                            ocupe seu espaço, mas não seja visível para o usuário inicialmente.</li>\n                        <li><span class=\"code-text\">tools:text</span> e <span class=\"code-text\">tools:visibility</span>: Esses são\n                            atributos de tempo de design. Eles nos permitem ver como o componente ficará no editor do\n                            Android Studio, mas não têm efeito quando o app é executado.</li>\n                    </ul>\n                </div>\n\n                <h4 class=\"font-bold text-2xl text-slate-800 mt-12 mb-4\">Passo 2: Atualizar a Lógica (Kotlin)</h4>\n                <p class=\"mb-4\">Agora, vamos modificar a <code>MainActivity.kt</code> para encontrar o novo\n                    <code>TextView</code> e atualizar seu texto quando o botão for clicado.</p>\n                <div class=\"code-block-wrapper\">\n                    <button class=\"copy-button\">Copiar</button>\n                    <div class=\"code-block\">\n                        <h5 class=\"mono\">// Código Final para MainActivity.kt</h5>\n                        <pre><code>package br.com.unichristus.ads.olamundoandroid\n\nimport androidx.appcompat.app.AppCompatActivity\nimport android.os.Bundle\nimport android.view.View\nimport android.widget.Button\nimport android.widget.EditText\nimport android.widget.TextView\n\nclass MainActivity : AppCompatActivity() {\n\n    override fun onCreate(savedInstanceState: Bundle?) {\n        super.onCreate(savedInstanceState)\n        setContentView(R.layout.activity_main)\n\n        // 1. Encontrar todas as Views necessárias pelo ID\n        val buttonSaudacao: Button = findViewById(R.id.buttonSaudacao)\n        val editTextNome: EditText = findViewById(R.id.editTextNome)\n        val textViewResultado: TextView = findViewById(R.id.textViewResultado)\n\n        // 2. Configurar o listener de clique para o botão\n        buttonSaudacao.setOnClickListener {\n            // 3. Pegar o texto que o usuário digitou\n            val nomeDigitado = editTextNome.text.toString()\n\n            // 4. Criar a mensagem de saudação\n            val mensagem = \"Olá, $nomeDigitado!\"\n\n            // 5. Atualizar o texto do TextView de resultado\n            textViewResultado.text = mensagem\n            \n            // 6. Tornar o TextView de resultado visível\n            textViewResultado.visibility = View.VISIBLE\n        }\n    }\n}</code></pre>\n                    </div>\n                </div>\n                <h4 class=\"font-semibold text-xl mt-6 mb-3\">Como Testar:</h4>\n                <ul class=\"list-disc list-inside space-y-2\">\n                    <li>Execute o aplicativo.</li>\n                    <li>Digite seu nome no campo de texto.</li>\n                    <li>Clique no botão \"Exibir Mensagem\".</li>\n                    <li>A saudação personalizada deve aparecer na tela!</li>\n                </ul>\n            </div>\n        </div>\n\n        <div id=\"tarefa-aula6\" class=\"mb-16\">\n            <h3 class=\"text-3xl font-bold text-slate-800 mb-6\">Encerramento e Próximos Passos</h3>\n            <div class=\"callout callout-task\">\n                <h5 class=\"font-bold mb-2\">Tarefa para a próxima aula (TED)</h5>\n                <p class=\"mb-4\">Agora que temos um aplicativo funcional, a tarefa é focar na documentação e na\n                    apresentação do seu trabalho, uma habilidade crucial para qualquer desenvolvedor.</p>\n                <ol class=\"list-decimal list-inside space-y-2\">\n                    <li><strong>Finalize o App:</strong> Garanta que seu aplicativo de boas-vindas está funcionando\n                        perfeitamente.</li>\n                    <li><strong>Documente o Código:</strong> Adicione comentários ao seu arquivo\n                        <code>MainActivity.kt</code> explicando o que cada parte do código faz (o que é o\n                        <code>onCreate</code>, para que serve o <code>findViewById</code>, o que o <code>setOnClickListener</code> faz, etc.).</li>\n                    <li><strong>Prepare a Apresentação:</strong> Tire prints (capturas de tela) da interface do seu app\n                        e do seu código comentado.</li>\n                    <li>Submeta os prints no Moodle e esteja preparado para apresentar informalmente o que você fez na\n                        próxima aula.</li>\n                </ol>\n            </div>\n            <div class=\"bg-white p-6 rounded-lg shadow-md mt-8\">\n                <h4 class=\"font-bold text-xl text-slate-800 mb-4\">Bibliografia Recomendada</h4>\n                <ul class=\"list-disc list-inside space-y-2\">\n                    <li>OLIVEIRA, Diego Bittencourt de et al. <strong>Desenvolvimento para Dispositivos Móveis</strong>.\n                        Porto Alegre: SAGAH, 2019. v. 1.</li>\n                    <li>URMA, Raoul-Gabriel; WARBURTON, Richard.\n                        <strong>Desenvolvimento Real de Software: Um Guia de Projetos para Fundamentos em Java</strong>.\n                        Alta Books, 2021.</li>\n                </ul>\n            </div>\n        </div>\n    </section>"
    }
  ]
}
