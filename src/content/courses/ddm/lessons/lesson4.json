{
  "id": "lesson4",
  "title": "Aula 4: Unidade I – Activities e Intents",
  "objective": "",
  "content": [
    {
      "type": "legacySection",
      "id": "aula4",
      "title": "Plano de Voo da Aula",
      "html": "<div data-legacy-card=\"\"> <ul> <li> <strong>Recapitulação:</strong> O que são a pasta <code-text>res</code-text> e o arquivo <code-text>activity_main.xml</code-text>? </li> <li> <strong>Os Blocos de Construção da Interface:</strong> Introdução ao conceito de <code-text>View</code-text>. </li> <li> <strong>Análise dos Componentes Essenciais:</strong> Um olhar detalhado sobre <code-text>TextView</code-text>, <code-text>EditText</code-text>, <code-text>Button</code-text>, <code-text>ImageView</code-text>, <code-text>CheckBox</code-text> e <code-text>RadioButton</code-text>. </li> <li> <strong>Atividade Prática:</strong> Mãos à obra! Vamos construir nossa primeira interface de usuário no Android Studio. </li> <li> <strong>Próximos Passos:</strong> Como daremos \"vida\" a esta interface na próxima aula. </li> <li> <strong>Tarefa (TED):</strong> Desafio para consolidar o aprendizado. </li> </ul> </div> <div id=\"views\" data-legacy-card=\"\"> <h3> Os Blocos de Construção: O que é uma <code-text>View</code-text>? </h3> <div> <p> No Android, todo componente de interface que você vê na tela é uma subclasse de uma classe chamada <strong><code-text>View</code-text></strong>. Pense nas <code-text>Views</code-text> como os \"blocos de Lego\" da nossa interface. </p> <p> Um <code-text>TextView</code-text> (para mostrar texto) é um tipo de <code-text>View</code-text>. Um <code-text>Button</code-text> (para cliques) é outro tipo de <code-text>View</code-text>. Um <code-text>EditText</code-text> (para inserir texto) também é um tipo de <code-text>View</code-text>. Hoje, vamos aprender a usar alguns desses blocos fundamentais para construir nossa primeira estrutura. </p> </div> </div> <div data-legacy-grid=\"\"> <h3> Componentes Essenciais de UI </h3> <!-- TextView --> <div data-legacy-card=\"\"> <h4>1. TextView</h4> <p> <strong>O que é e para que serve?</strong> É o componente mais básico para exibir texto na tela. Use-o para mostrar títulos, parágrafos, rótulos e qualquer informação estática para o usuário. </p> <img src=\"https://placehold.co/600x100/e0e7ff/3730a3?text=Este+é+um+TextView\" alt=\"Exemplo de um TextView\"> <div> <h5>&lt;-- Exemplo de TextView em XML --&gt;</h5> <pre><code>&lt;TextView android:id=\"@+id/textViewTitulo\" android:layout_width=\"wrap_content\" android:layout_height=\"wrap_content\" android:text=\"Bem-vindo ao Meu App\" android:textSize=\"24sp\" android:textColor=\"@color/black\" /&gt;</code></pre> </div> <div> <h5>Atributos Importantes</h5> <ul> <li> <code>android:id=\"@+id/...\"</code>: Um identificador único para este componente. É como o \"CPF\" da View, essencial para podermos referenciá-la no código Kotlin mais tarde. </li> <li> <code>android:layout_width</code> e <code>android:layout_height</code>: Definem a largura e altura. <code>wrap_content</code> faz o componente ter o tamanho exato do seu conteúdo. </li> <li> <code>android:text</code>: O texto que será exibido. <strong>Boa prática:</strong> use referências a recursos de string (<code>@string/meu_texto</code>) em vez de texto fixo. </li> <li> <code>android:textSize</code>: O tamanho do texto (use a unidade <code-text>sp</code-text> para escalabilidade). </li> </ul> <p> Explore todos os atributos na <a href=\"https://developer.android.com/reference/android/widget/TextView\" target=\"_blank\">documentação oficial do TextView</a>. </p> </div> </div> <!-- EditText --> <div data-legacy-card=\"\"> <h4>2. EditText</h4> <p> <strong>O que é e para que serve?</strong> É um campo de texto que permite ao usuário inserir e editar informações. É a porta de entrada de dados do seu aplicativo. </p> <img src=\"https://placehold.co/600x100/e0e7ff/3730a3?text=Digite+seu+nome+aqui...\" alt=\"Exemplo de um EditText\"> <div> <h5>&lt;-- Exemplo de EditText em XML --&gt;</h5> <pre><code>&lt;EditText android:id=\"@+id/editTextNome\" android:layout_width=\"match_parent\" android:layout_height=\"wrap_content\" android:hint=\"Digite seu nome\" android:inputType=\"textPersonName\" /&gt;</code></pre> </div> <div> <h5>Atributos Importantes</h5> <ul> <li> <code>android:layout_width=\"match_parent\"</code>: Faz o componente ocupar toda a largura disponível do seu \"container\" pai. </li> <li> <code>android:hint</code>: Mostra um texto de dica cinza claro que desaparece quando o usuário começa a digitar. É uma ótima prática para guiar o usuário. </li> <li> <code>android:inputType</code>: Ajuda o sistema a otimizar o teclado para o tipo de dado esperado (texto, número, email, senha, etc.), melhorando a experiência do usuário. </li> </ul> <p> Veja todos os tipos de input na <a href=\"https://developer.android.com/reference/android/widget/EditText\" target=\"_blank\">documentação oficial do EditText</a>. </p> </div> </div> <!-- Button --> <div data-legacy-card=\"\"> <h4>3. Button</h4> <p> <strong>O que é e para que serve?</strong> É um componente que o usuário pode pressionar para acionar uma ação. É o principal meio de interação para executar comandos no app. </p> <img src=\"https://placehold.co/600x100/e0e7ff/3730a3?text=CLIQUE+AQUI\" alt=\"Exemplo de um Button\"> <div> <h5>&lt;-- Exemplo de Button em XML --&gt;</h5> <pre><code>&lt;Button android:id=\"@+id/buttonConfirmar\" android:layout_width=\"wrap_content\" android:layout_height=\"wrap_content\" android:text=\"Confirmar\" /&gt;</code></pre> </div> <div> <h5>Atributos Importantes</h5> <ul> <li> <code>android:text</code>: O texto que aparece dentro do botão. </li> <li> A principal função do botão é responder a cliques, o que faremos na próxima aula usando um <code-text>setOnClickListener</code-text> no nosso código Kotlin. </li> </ul> <p> Saiba mais na <a href=\"https://developer.android.com/reference/android/widget/Button\" target=\"_blank\">documentação oficial do Button</a>. </p> </div> </div> <!-- ImageView --> <div data-legacy-card=\"\"> <h4>4. ImageView</h4> <p> <strong>O que é e para que serve?</strong> É o componente utilizado para exibir imagens, como fotos, ícones e outras mídias visuais. As imagens devem ser colocadas na pasta <code-text>res/drawable</code-text>. </p> <img src=\"https://placehold.co/200x200/e0e7ff/3730a3?text=ImageView\" alt=\"Exemplo de um ImageView\"> <div> <h5>&lt;-- Exemplo de ImageView em XML --&gt;</h5> <pre><code>&lt;ImageView android:id=\"@+id/imageViewLogo\" android:layout_width=\"100dp\" android:layout_height=\"100dp\" android:src=\"@drawable/ic_logo\" android:contentDescription=\"@string/descricao_logo\" /&gt;</code></pre> </div> <div> <h5>Atributos Importantes</h5> <ul> <li> <code>android:src</code>: Especifica a imagem a ser exibida, geralmente referenciando um arquivo na pasta <code-text>drawable</code-text>. </li> <li> <code>android:contentDescription</code>: Texto descritivo para acessibilidade. É lido por leitores de tela para usuários com deficiência visual. <strong>É uma prática essencial!</strong> </li> <li> <code>android:scaleType</code>: Controla como a imagem é redimensionada para caber no espaço do <code-text>ImageView</code-text> (ex: <code-text>centerCrop</code-text>, <code-text>fitCenter</code-text>). </li> </ul> <p> Explore mais na <a href=\"https://developer.android.com/reference/android/widget/ImageView\" target=\"_blank\">documentação oficial do ImageView</a>. </p> </div> </div> <!-- CheckBox --> <div data-legacy-card=\"\"> <h4>5. CheckBox</h4> <p> <strong>O que é e para que serve?</strong> É um tipo de botão de duas opções que pode ser marcado ou desmarcado. Ideal para situações onde o usuário pode selecionar múltiplas opções de uma lista. </p> <img src=\"https://placehold.co/600x100/e0e7ff/3730a3?text=☐+Aceito+os+termos\" alt=\"Exemplo de um CheckBox\"> <div> <h5>&lt;-- Exemplo de CheckBox em XML --&gt;</h5> <pre><code>&lt;CheckBox android:id=\"@+id/checkboxTermos\" android:layout_width=\"wrap_content\" android:layout_height=\"wrap_content\" android:text=\"Aceito os termos e condições\" /&gt;</code></pre> </div> <div> <h5>Atributos Importantes</h5> <ul> <li> <code>android:checked</code>: Pode ser definido como <code-text>true</code-text> ou <code-text>false</code-text> para determinar se a caixa já começa marcada. </li> <li> No código Kotlin, podemos verificar se um <code-text>CheckBox</code-text> está marcado usando a propriedade <code-text>isChecked</code-text>. </li> </ul> <p> Veja mais detalhes na <a href=\"https://developer.android.com/reference/android/widget/CheckBox\" target=\"_blank\">documentação oficial do CheckBox</a>. </p> </div> </div> <!-- RadioButton e RadioGroup --> <div data-legacy-card=\"\"> <h4> 6. RadioButton e RadioGroup </h4> <p> <strong>O que é e para que serve?</strong> <code-text>RadioButton</code-text> é um botão de duas opções (marcado ou desmarcado). A sua principal característica é que, quando usado dentro de um <code-text>RadioGroup</code-text>, apenas uma opção pode ser selecionada por vez. Perfeito para perguntas de escolha única. </p> <img src=\"https://placehold.co/600x150/e0e7ff/3730a3?text=Qual+o+seu+gênero?%0A(•)+Masc+O+Fem\" alt=\"Exemplo de RadioButtons\"> <div> <h5>&lt;-- Exemplo de RadioGroup em XML --&gt;</h5> <pre><code>&lt;RadioGroup android:id=\"@+id/radioGroupGenero\" android:layout_width=\"wrap_content\" android:layout_height=\"wrap_content\"&gt; &lt;RadioButton android:id=\"@+id/radioButtonMasc\" android:layout_width=\"wrap_content\" android:layout_height=\"wrap_content\" android:text=\"Masculino\" /&gt; &lt;RadioButton android:id=\"@+id/radioButtonFem\" android:layout_width=\"wrap_content\" android:layout_height=\"wrap_content\" android:text=\"Feminino\" /&gt; &lt;/RadioGroup&gt;</code></pre> </div> <div> <h5>Atributos Importantes</h5> <ul> <li> <code>RadioGroup</code>: É o \"container\" invisível que agrupa os <code-text>RadioButton</code-text> e garante que apenas um deles possa ser selecionado. </li> <li> <code>android:orientation</code>: Pode ser definido no <code-text>RadioGroup</code-text> como <code-text>vertical</code-text> (padrão) ou <code-text>horizontal</code-text> para alinhar os botões. </li> </ul> <p> Leia mais na <a href=\"https://developer.android.com/guide/topics/ui/controls/radiobutton\" target=\"_blank\">documentação oficial sobre Radio Buttons</a>. </p> </div> </div> </div> <div id=\"atividade-pratica\" data-legacy-card=\"\"> <h3> Atividade Prática: Construindo a Primeira Interface </h3> <div> <p> Vamos aplicar o que aprendemos! Abra o projeto \"Olá, Mundo!\" da aula anterior e siga os passos para construir a interface da nossa tarefa (TED). </p> <ol> <li> Abra o arquivo <code>res/layout/activity_main.xml</code>. Se ele abrir no modo \"Design\", mude para a visão \"Code\" ou \"Split\" no canto superior direito. </li> <li> Apague o <code>&lt;TextView&gt;</code> existente que mostra \"Hello World!\". </li> <li> Dentro do <code>&lt;androidx.constraintlayout.widget.ConstraintLayout&gt;</code> (ou outro layout que estiver lá), adicione um <code>TextView</code>, um <code>EditText</code> e um <code>Button</code>. </li> <li> Configure os atributos de cada um conforme o código abaixo. Preste atenção especial aos IDs e às constraints (<code>app:layout_...</code>), que posicionam os elementos na tela. </li> </ol> <div> <h5>&lt;-- Código Final para activity_main.xml --&gt;</h5> <pre><code>&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;\n&lt;androidx.constraintlayout.widget.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\" xmlns:app=\"http://schemas.android.com/apk/res-auto\" xmlns:tools=\"http://schemas.android.com/tools\" android:layout_width=\"match_parent\" android:layout_height=\"match_parent\" tools:context=\".MainActivity\"&gt; &lt;TextView android:id=\"@+id/textViewLabel\" android:layout_width=\"wrap_content\" android:layout_height=\"wrap_content\" android:layout_marginTop=\"128dp\" android:text=\"Por favor, digite seu nome abaixo:\" android:textSize=\"18sp\" app:layout_constraintEnd_toEndOf=\"parent\" app:layout_constraintStart_toStartOf=\"parent\" app:layout_constraintTop_toTopOf=\"parent\" /&gt; &lt;EditText android:id=\"@+id/editTextNome\" android:layout_width=\"0dp\" android:layout_height=\"wrap_content\" android:layout_marginStart=\"32dp\" android:layout_marginTop=\"16dp\" android:layout_marginEnd=\"32dp\" android:hint=\"Seu nome\" android:inputType=\"textPersonName\" app:layout_constraintEnd_toEndOf=\"parent\" app:layout_constraintStart_toStartOf=\"parent\" app:layout_constraintTop_toBottomOf=\"@+id/textViewLabel\" /&gt; &lt;Button android:id=\"@+id/buttonSaudacao\" android:layout_width=\"wrap_content\" android:layout_height=\"wrap_content\" android:layout_marginTop=\"24dp\" android:text=\"Exibir Mensagem\" app:layout_constraintEnd_toEndOf=\"parent\" app:layout_constraintStart_toStartOf=\"parent\" app:layout_constraintTop_toBottomOf=\"@+id/editTextNome\" /&gt; &lt;/androidx.constraintlayout.widget.ConstraintLayout&gt;</code></pre> </div> </div> </div> <div id=\"tarefa-aula4\" data-legacy-grid=\"\"> <h3> Encerramento e Próximos Passos </h3> <div data-legacy-card=\"\"> <h5>Ponte para a Aula 5</h5> <p> Parabéns! Vocês construíram a primeira interface de usuário. Se executar o app agora, verá os componentes na tela, mas o botão não faz nada. A nossa interface está \"sem vida\". Na próxima aula sobre <strong>Manipulação de Eventos</strong>, vamos entrar no arquivo <code>MainActivity.kt</code> e escrever o código Kotlin para \"ouvir\" o clique do botão e fazer a mágica acontecer! </p> </div> <div data-legacy-card=\"\"> <h5>Tarefa para a próxima aula (TED)</h5> <p> O desafio é replicar e consolidar o que fizemos hoje. Esta tarefa é a base para a nossa próxima aula prática. </p> <ol> <li> No seu projeto do Android Studio, crie a interface com <code>TextView</code>, <code>EditText</code> e <code>Button</code>, exatamente como fizemos na atividade prática. </li> <li> Execute o aplicativo no emulador ou no seu dispositivo físico para garantir que a interface aparece corretamente. </li> <li> Tire um print (captura de tela) da sua aplicação em execução e submeta no Moodle. </li> </ol> </div> <div data-legacy-card=\"\"> <h4> Bibliografia Recomendada </h4> <ul> <li> SIMAS, V. L. et al. <strong>Desenvolvimento para Dispositivos Móveis – Volume 2</strong>. Grupo A, 2019. </li> <li> OLIVEIRA, Diego Bittencourt de et al. <strong>Desenvolvimento para Dispositivos Móveis</strong>. SAGAH, 2019. v. 1. </li> </ul> </div> </div>"
    }
  ]
}
