{
  "formatVersion": "md3.lesson.v1",
  "id": "lesson-04",
  "title": "Aula 4: Unidade I – Componentes de UI",
  "summary": "Introdução aos componentes visuais do Android e às diretrizes do Material Design 3 para construir interfaces consistentes.",
  "objective": "Apresentar os principais componentes de interface gráfica no Android e demonstrar como utilizá-los na construção de telas simples.",
  "objectives": [
    "Reconhecer componentes de UI nativos e suas boas práticas de uso.",
    "Aplicar guidelines do Material Design na composição de telas responsivas."
  ],
  "competencies": ["Criação de interfaces mobile acessíveis e responsivas"],
  "skills": [
    "Compor telas utilizando ViewGroups e hierarquias eficientes.",
    "Selecionar componentes Material adequados para cada cenário apresentado."
  ],
  "outcomes": [
    "Apresenta um wireframe de tela utilizando componentes básicos do Material 3.",
    "Justifica a escolha de componentes conforme os princípios de acessibilidade e consistência."
  ],
  "prerequisites": [
    "Conhecer a estrutura básica de um projeto Android e organização de resources."
  ],
  "tags": ["ui", "componentes", "material-design"],
  "duration": 100,
  "modality": "in-person",
  "resources": [
    {
      "label": "Material Design 3 – Component Gallery",
      "url": "https://m3.material.io/components",
      "type": "reference"
    },
    {
      "label": "Build a UI with Layout Editor",
      "url": "https://developer.android.com/studio/write/layout-editor",
      "type": "guide"
    }
  ],
  "bibliography": [
    "Material Design. \"Components.\" 2024.",
    "Google. \"Build a UI with Layout Editor.\" 2024."
  ],
  "assessment": {
    "type": "design critique",
    "description": "Apresentação e feedback coletivo sobre o wireframe criado na aula."
  },
  "content": [
    {
      "type": "videos",
      "title": "Referências em vídeo – Unidade I",
      "videos": [
        {
          "url": "https://www.youtube.com/playlist?list=PLWz5rJ2EKKc9CBxr3BVjPTPoDPLdPIFCE",
          "title": "Android Basics in Kotlin (Android Developers)",
          "caption": "Playlist oficial sobre fundamentos de Android e Kotlin. Créditos: Android Developers (Google, 2024)."
        },
        {
          "url": "https://www.youtube.com/watch?v=ldM6QZy9e0s",
          "title": "Kotlin-first no Google I/O 2019",
          "caption": "Keynote institucional destacando a adoção do Kotlin no Android. Créditos: Google I/O (2019)."
        }
      ]
    },
    {
      "type": "flightPlan",
      "title": "Plano de Voo da Aula",
      "items": [
        "Recapitulação: O que são a pasta res e o arquivo activity_main.xml",
        "Os Blocos de Construção da Interface: Introdução ao conceito de View",
        "Análise dos Componentes Essenciais: Um olhar detalhado sobre TextView, EditText, Button, ImageView, CheckBox e RadioButton",
        "Atividade Prática: Mãos à obra! Vamos construir nossa primeira interface de usuário no Android Studio",
        "Próximos Passos: Como daremos \\\"vida\\\" a esta interface na próxima aula",
        "Tarefa (TED): Desafio para consolidar o aprendizado."
      ]
    },
    {
      "type": "contentBlock",
      "title": "Os Blocos de Construção: O que é uma View",
      "content": [
        {
          "type": "paragraph",
          "text": "No Android, todo componente de interface que você vê na tela é uma subclasse de uma classe chamada View. Pense nas Views como os \\\"blocos de Lego\\\" da nossa interface."
        },
        {
          "type": "paragraph",
          "text": "Um TextView (para mostrar texto) é um tipo de View. Um Button (para cliques) é outro tipo de View. Um EditText (para inserir texto) também é um tipo de View. Hoje, vamos aprender a usar alguns desses blocos fundamentais para construir nossa primeira estrutura."
        }
      ]
    },
    {
      "type": "contentBlock",
      "title": "Componentes Essenciais de UI",
      "content": [
        {
          "type": "contentBlock",
          "title": "1. TextView",
          "content": [
            {
              "type": "paragraph",
              "text": "O que é e para que serve? É o componente mais básico para exibir texto na tela. Use-o para mostrar títulos, parágrafos, rótulos e qualquer informação estática para o usuário."
            },
            {
              "type": "image",
              "src": "https://placehold.co/600x100/e0e7ff/3730a3?text=Este+%C3%A9+um+TextView",
              "alt": "Exemplo de um TextView"
            },
            {
              "type": "code",
              "language": "xml",
              "code": "<!-- Basic TextView example (EN): Displays a static title on screen. -->\\n<TextView\\n    android:id=\\\"@+id/textViewTitulo\\\"\\n    android:layout_width=\\\"wrap_content\\\"\\n    android:layout_height=\\\"wrap_content\\\"\\n    android:text=\\\"Bem-vindo ao Meu App\\\"\\n    android:textSize=\\\"24sp\\\"\\n    android:textColor=\\\"@color/black\\\" />\n\n// Referência: Material Design (2024)"
            },
            {
              "type": "callout",
              "variant": "info",
              "title": "Atributos Importantes",
              "richContent": [
                {
                  "type": "list",
                  "items": [
                    "android:id=\\\"@+id/...\\\": Um identificador único para este componente. É como o \\\"CPF\\\" da View, essencial para podermos referenciá-la no código Kotlin mais tarde.",
                    "android:layout_width e android:layout_height: Definem a largura e altura. wrap_content faz o componente ter o tamanho exato do seu conteúdo.",
                    "android:text: O texto que será exibido. Boa prática: use referências a recursos de string (@string/meu_texto) em vez de texto fixo.",
                    "android:textSize: O tamanho do texto (use a unidade sp para escalabilidade)."
                  ]
                },
                {
                  "type": "paragraph",
                  "text": "Explore todos os atributos na documentação oficial do TextView (\\\"https://developer.android.com/reference/android/widget/TextView\\\")."
                }
              ],
              "content": []
            }
          ]
        },
        {
          "type": "contentBlock",
          "title": "2. EditText",
          "content": [
            {
              "type": "paragraph",
              "text": "O que é e para que serve? É um campo de texto que permite ao usuário inserir e editar informações. É a porta de entrada de dados do seu aplicativo."
            },
            {
              "type": "image",
              "src": "https://placehold.co/600x100/e0e7ff/3730a3?text=Digite+seu+nome+aqui...",
              "alt": "Exemplo de um EditText"
            },
            {
              "type": "code",
              "language": "xml",
              "code": "<!-- EditText example (EN): Collects user's name with a suitable keyboard. -->\\n<EditText\\n    android:id=\\\"@+id/editTextNome\\\"\\n    android:layout_width=\\\"match_parent\\\"\\n    android:layout_height=\\\"wrap_content\\\"\\n    android:hint=\\\"Digite seu nome\\\"\\n    android:inputType=\\\"textPersonName\\\" />\n\n// Referência: Material Design (2024)"
            },
            {
              "type": "callout",
              "variant": "info",
              "title": "Atributos Importantes",
              "richContent": [
                {
                  "type": "list",
                  "items": [
                    "android:layout_width=\\\"match_parent\\\": Faz o componente ocupar toda a largura disponível do seu \\\"container\\\" pai.",
                    "android:hint: Mostra um texto de dica cinza claro que desaparece quando o usuário começa a digitar. É uma ótima prática para guiar o usuário.",
                    "android:inputType: Ajuda o sistema a otimizar o teclado para o tipo de dado esperado (texto, número, email, senha, etc.), melhorando a experiência do usuário."
                  ]
                },
                {
                  "type": "paragraph",
                  "text": "Veja todos os tipos de input na documentação oficial do EditText (\\\"https://developer.android.com/reference/android/widget/EditText\\\")."
                }
              ],
              "content": []
            }
          ]
        },
        {
          "type": "contentBlock",
          "title": "3. Button",
          "content": [
            {
              "type": "paragraph",
              "text": "O que é e para que serve? É um componente que o usuário pode pressionar para acionar uma ação. É o principal meio de interação para executar comandos no app."
            },
            {
              "type": "image",
              "src": "https://placehold.co/600x100/e0e7ff/3730a3?text=CLIQUE+AQUI",
              "alt": "Exemplo de um Button"
            },
            {
              "type": "code",
              "language": "xml",
              "code": "<!-- Button example (EN): A simple action trigger. -->\\n<Button\\n    android:id=\\\"@+id/buttonConfirmar\\\"\\n    android:layout_width=\\\"wrap_content\\\"\\n    android:layout_height=\\\"wrap_content\\\"\\n    android:text=\\\"Confirmar\\\" />\n\n// Referência: Material Design (2024)"
            },
            {
              "type": "callout",
              "variant": "info",
              "title": "Atributos Importantes",
              "richContent": [
                {
                  "type": "list",
                  "items": [
                    "android:text: O texto que aparece dentro do botão.",
                    "A principal função do botão é responder a cliques, o que faremos na próxima aula usando um setOnClickListener no nosso código Kotlin."
                  ]
                },
                {
                  "type": "paragraph",
                  "text": "Saiba mais na documentação oficial do Button (\\\"https://developer.android.com/reference/android/widget/Button\\\")."
                }
              ],
              "content": []
            }
          ]
        },
        {
          "type": "contentBlock",
          "title": "4. ImageView",
          "content": [
            {
              "type": "paragraph",
              "text": "O que é e para que serve? É o componente utilizado para exibir imagens, como fotos, ícones e outras mídias visuais. As imagens devem ser colocadas na pasta res/drawable."
            },
            {
              "type": "image",
              "src": "https://placehold.co/200x200/e0e7ff/3730a3?text=ImageView",
              "alt": "Exemplo de um ImageView"
            },
            {
              "type": "code",
              "language": "xml",
              "code": "<!-- ImageView example (EN): Shows a drawable with accessibility text. -->\\n\n\n// Referência: Material Design (2024)"
            },
            {
              "type": "callout",
              "variant": "info",
              "title": "Atributos Importantes",
              "richContent": [
                {
                  "type": "list",
                  "items": [
                    "android:src: Especifica a imagem a ser exibida, geralmente referenciando um arquivo na pasta drawable.",
                    "android:contentDescription: Texto descritivo para acessibilidade. É lido por leitores de tela para usuários com deficiência visual. É uma prática essencial!",
                    "android:scaleType: Controla como a imagem é redimensionada para caber no espaço do ImageView (ex: centerCrop, fitCenter)."
                  ]
                },
                {
                  "type": "paragraph",
                  "text": "Explore mais na documentação oficial do ImageView (\\\"https://developer.android.com/reference/android/widget/ImageView\\\")."
                }
              ],
              "content": []
            }
          ]
        },
        {
          "type": "contentBlock",
          "title": "5. CheckBox",
          "content": [
            {
              "type": "paragraph",
              "text": "O que é e para que serve? É um tipo de botão de duas opções que pode ser marcado ou desmarcado. Ideal para situações onde o usuário pode selecionar múltiplas opções de uma lista."
            },
            {
              "type": "image",
              "src": "https://placehold.co/600x100/e0e7ff/3730a3?text=%E2%98%90+Aceito+os+termos",
              "alt": "Exemplo de um CheckBox"
            },
            {
              "type": "code",
              "language": "xml",
              "code": "<!-- CheckBox example (EN): Multiple selections allowed. -->\\n<CheckBox\\n    android:id=\\\"@+id/checkboxTermos\\\"\\n    android:layout_width=\\\"wrap_content\\\"\\n    android:layout_height=\\\"wrap_content\\\"\\n    android:text=\\\"Aceito os termos e condições\\\" />\n\n// Referência: Material Design (2024)"
            },
            {
              "type": "callout",
              "variant": "info",
              "title": "Atributos Importantes",
              "richContent": [
                {
                  "type": "list",
                  "items": [
                    "android:checked: Pode ser definido como true ou false para determinar se a caixa já começa marcada.",
                    "No código Kotlin, podemos verificar se um CheckBox está marcado usando a propriedade isChecked."
                  ]
                },
                {
                  "type": "paragraph",
                  "text": "Veja mais detalhes na documentação oficial do CheckBox (\\\"https://developer.android.com/reference/android/widget/CheckBox\\\")."
                }
              ],
              "content": []
            }
          ]
        },
        {
          "type": "contentBlock",
          "title": "6. RadioButton e RadioGroup",
          "content": [
            {
              "type": "paragraph",
              "text": "O que é e para que serve? RadioButton é um botão de duas opções (marcado ou desmarcado). A sua principal característica é que, quando usado dentro de um RadioGroup, apenas uma opção pode ser selecionada por vez. Perfeito para perguntas de escolha única."
            },
            {
              "type": "image",
              "src": "https://placehold.co/600x150/e0e7ff/3730a3?text=Qual+o+seu+g%C3%AAnero%3F%0A(%E2%80%A2)+Masc+O+Fem",
              "alt": "Exemplo de RadioButtons"
            },
            {
              "type": "code",
              "language": "xml",
              "code": "<!-- RadioGroup example (EN): Only one option can be selected at a time. -->\\n<RadioGroup\\n    android:id=\\\"@+id/radioGroupGenero\\\"\\n    android:layout_width=\\\"wrap_content\\\"\\n    android:layout_height=\\\"wrap_content\\\"\\n    android:orientation=\\\"vertical\\\">\\n\\n    <RadioButton\\n        android:id=\\\"@+id/radioButtonMasc\\\"\\n        android:layout_width=\\\"wrap_content\\\"\\n        android:layout_height=\\\"wrap_content\\\"\\n        android:text=\\\"Masculino\\\" />\\n\\n    <RadioButton\\n        android:id=\\\"@+id/radioButtonFem\\\"\\n        android:layout_width=\\\"wrap_content\\\"\\n        android:layout_height=\\\"wrap_content\\\"\\n        android:text=\\\"Feminino\\\" />\\n\\n</RadioGroup>\n\n// Referência: Material Design (2024)"
            },
            {
              "type": "callout",
              "variant": "info",
              "title": "Atributos Importantes",
              "richContent": [
                {
                  "type": "list",
                  "items": [
                    "RadioGroup: É o \\\"container\\\" invisível que agrupa os RadioButton e garante que apenas um deles possa ser selecionado.",
                    "android:orientation: Pode ser definido no RadioGroup como vertical (padrão) ou horizontal para alinhar os botões."
                  ]
                },
                {
                  "type": "paragraph",
                  "text": "Leia mais na documentação oficial sobre Radio Buttons (\\\"https://developer.android.com/guide/topics/ui/controls/radiobutton\\\")."
                }
              ],
              "content": []
            }
          ]
        }
      ]
    },
    {
      "type": "contentBlock",
      "title": "Atividade Prática: Construindo a Primeira Interface",
      "content": [
        {
          "type": "paragraph",
          "text": "Vamos aplicar o que aprendemos! Abra o projeto \\\"Olá, Mundo!\\\" da aula anterior e siga os passos para construir a interface da nossa tarefa (TED)."
        },
        {
          "type": "list",
          "items": [
            "Abra o arquivo res/layout/activity_main.xml. Se ele abrir no modo \\\"Design\\\", mude para a visão \\\"Code\\\" ou \\\"Split\\\" no canto superior direito.",
            "Apague o existente que mostra \\\"Hello World!\\\".",
            "Dentro do (ou outro layout que estiver lá), adicione um TextView, um EditText e um Button.",
            "Configure os atributos de cada um conforme o código abaixo. Preste atenção especial aos IDs e às constraints (app:layout_...), que posicionam os elementos na tela."
          ]
        },
        {
          "type": "code",
          "language": "xml",
          "code": "<!-- ConstraintLayout example (EN): Labels, input field, and a button centered with constraints. -->\\n<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\"?>\\n<androidx.constraintlayout.widget.ConstraintLayout xmlns:android=\\\"http://schemas.android.com/apk/res/android\\\"\\n    xmlns:app=\\\"http://schemas.android.com/apk/res-auto\\\"\\n    xmlns:tools=\\\"http://schemas.android.com/tools\\\"\\n    android:layout_width=\\\"match_parent\\\"\\n    android:layout_height=\\\"match_parent\\\"\\n    tools:context=\\\".MainActivity\\\">\\n\\n    <TextView\\n        android:id=\\\"@+id/textViewLabel\\\"\\n        android:layout_width=\\\"wrap_content\\\"\\n        android:layout_height=\\\"wrap_content\\\"\\n        android:layout_marginTop=\\\"128dp\\\"\\n        android:text=\\\"Por favor, digite seu nome abaixo:\\\"\\n        android:textSize=\\\"18sp\\\"\\n        app:layout_constraintTop_toTopOf=\\\"parent\\\"\\n        app:layout_constraintStart_toStartOf=\\\"parent\\\"\\n        app:layout_constraintEnd_toEndOf=\\\"parent\\\" />\\n\\n    <EditText\\n        android:id=\\\"@+id/editTextNome\\\"\\n        android:layout_width=\\\"0dp\\\"\\n        android:layout_height=\\\"wrap_content\\\"\\n        android:layout_marginStart=\\\"32dp\\\"\\n        android:layout_marginTop=\\\"16dp\\\"\\n        android:layout_marginEnd=\\\"32dp\\\"\\n        android:hint=\\\"Seu nome\\\"\\n        android:inputType=\\\"textPersonName\\\"\\n        app:layout_constraintTop_toBottomOf=\\\"@id/textViewLabel\\\"\\n        app:layout_constraintStart_toStartOf=\\\"parent\\\"\\n        app:layout_constraintEnd_toEndOf=\\\"parent\\\" />\\n\\n    <Button\\n        android:id=\\\"@+id/buttonSaudacao\\\"\\n        android:layout_width=\\\"wrap_content\\\"\\n        android:layout_height=\\\"wrap_content\\\"\\n        android:layout_marginTop=\\\"24dp\\\"\\n        android:text=\\\"Exibir Mensagem\\\"\\n        app:layout_constraintTop_toBottomOf=\\\"@id/editTextNome\\\"\\n        app:layout_constraintStart_toStartOf=\\\"parent\\\"\\n        app:layout_constraintEnd_toEndOf=\\\"parent\\\" />\\n\\n</androidx.constraintlayout.widget.ConstraintLayout>\n\n// Referência: Material Design (2024)"
        }
      ]
    },
    {
      "type": "contentBlock",
      "title": "Encerramento e Próximos Passos",
      "content": [
        {
          "type": "callout",
          "variant": "info",
          "title": "Ponte para a Aula 5",
          "content": [
            {
              "type": "paragraph",
              "text": "Parabéns! Vocês construíram a primeira interface de usuário. Se executar o app agora, verá os componentes na tela, mas o botão não faz nada. A nossa interface está \\\"sem vida\\\". Na próxima aula sobre Manipulação de Eventos, vamos entrar no arquivo MainActivity.kt e escrever o código Kotlin para \\\"ouvir\\\" o clique do botão e fazer a mágica acontecer!"
            }
          ]
        },
        {
          "type": "callout",
          "variant": "task",
          "title": "Tarefa para a próxima aula (TED)",
          "richContent": [
            {
              "type": "paragraph",
              "text": "O desafio é replicar e consolidar o que fizemos hoje. Esta tarefa é a base para a nossa próxima aula prática."
            },
            {
              "type": "list",
              "ordered": true,
              "items": [
                "No seu projeto do Android Studio, crie a interface com TextView, EditText e Button, exatamente como fizemos na atividade prática.",
                "Execute o aplicativo no emulador ou no seu dispositivo físico para garantir que a interface aparece corretamente.",
                "Tire um print (captura de tela) da sua aplicação em execução e submeta no Moodle."
              ]
            }
          ],
          "content": []
        },
        {
          "type": "bibliographyBlock",
          "title": "Bibliografia Recomendada",
          "references": [
            "SIMAS, V. L. et al. Desenvolvimento para Dispositivos Móveis – Volume 2. Grupo A, 2019.",
            "OLIVEIRA, Diego Bittencourt de et al. Desenvolvimento para Dispositivos Móveis. SAGAH, 2019. v. 1."
          ]
        }
      ]
    },
    {
      "type": "contentBlock",
      "title": "Exemplo de código comentado",
      "content": [
        {
          "type": "paragraph",
          "text": "O trecho abaixo demonstra como instrumentar o registo de eventos no contexto de Componentes de UI, reforçando o que discutimos em sala."
        },
        {
          "type": "code",
          "language": "kotlin",
          "code": "// Exemplo aplicado de Componentes de UI\nval moduloAtual = \"Componentes de UI\"\nandroid.util.Log.d(\"UnidadeI\", \"Preparando $moduloAtual\")\n// Referência: Material Design (2024)"
        },
        {
          "type": "paragraph",
          "text": "Note como o comentário final conecta o exemplo às diretrizes oficiais discutidas em Material Design (2024)."
        },
        {
          "type": "callout",
          "variant": "academic",
          "title": "Fundamentação bibliográfica",
          "content": [
            {
              "type": "paragraph",
              "text": "Material Design. \"Components.\" 2024."
            }
          ]
        }
      ]
    },
    {
      "type": "contentBlock",
      "title": "Leitura complementar e estudos de caso",
      "content": [
        {
          "type": "paragraph",
          "text": "Para aprofundar Componentes de UI, retome as leituras indicadas e conecte com as práticas de laboratório."
        },
        {
          "type": "list",
          "items": [
            "Releia: Material Design. \"Components.\" 2024.",
            "Conecte com o estudo: Google. \"Build a UI with Layout Editor.\" 2024."
          ]
        },
        {
          "type": "paragraph",
          "text": "Relacione os indicadores discutidos com os dados de mercado apresentados na bibliografia."
        },
        {
          "type": "blockquote",
          "text": "Google. \"Build a UI with Layout Editor.\" 2024."
        }
      ]
    }
  ],
  "metadata": {
    "status": "in-review",
    "updatedAt": "2024-05-08T00:00:00.000Z",
    "owners": ["Prof. Tiago Sombra"],
    "sources": ["Guia de Interface DDM – Sprint Descoberta"]
  }
}
