{
  "id": "lesson-04",
  "title": "Aula 4: Unidade I – Componentes de UI",
  "objective": "Apresentar os principais componentes de interface gráfica no Android e demonstrar como utilizá-los na construção de telas simples.",
  "content": [
    {
      "type": "flightPlan",
      "title": "Plano de Voo da Aula",
      "items": [
        "<strong>Recapitulação:</strong> O que são a pasta <code-text>res</code-text> e o arquivo <code-text>activity_main.xml</code-text>",
        "<strong>Os Blocos de Construção da Interface:</strong> Introdução ao conceito de <code-text>View</code-text>",
        "<strong>Análise dos Componentes Essenciais:</strong> Um olhar detalhado sobre <code-text>TextView</code-text>, <code-text>EditText</code-text>, <code-text>Button</code-text>, <code-text>ImageView</code-text>, <code-text>CheckBox</code-text> e <code-text>RadioButton</code-text>",
        "<strong>Atividade Prática:</strong> Mãos à obra! Vamos construir nossa primeira interface de usuário no Android Studio",
        "<strong>Próximos Passos:</strong> Como daremos \\\"vida\\\" a esta interface na próxima aula",
        "<strong>Tarefa (TED):</strong> Desafio para consolidar o aprendizado."
      ]
    },
    {
      "type": "contentBlock",
      "title": "Os Blocos de Construção: O que é uma <code-text>View</code-text>",
      "content": [
        {
          "type": "paragraph",
          "text": "No Android, todo componente de interface que você vê na tela é uma subclasse de uma classe chamada <strong><code-text>View</code-text></strong>. Pense nas <code-text>Views</code-text> como os \\\"blocos de Lego\\\" da nossa interface."
        },
        {
          "type": "paragraph",
          "text": "Um <code-text>TextView</code-text> (para mostrar texto) é um tipo de <code-text>View</code-text>. Um <code-text>Button</code-text> (para cliques) é outro tipo de <code-text>View</code-text>. Um <code-text>EditText</code-text> (para inserir texto) também é um tipo de <code-text>View</code-text>. Hoje, vamos aprender a usar alguns desses blocos fundamentais para construir nossa primeira estrutura."
        }
      ]
    },
    {
      "type": "contentBlock",
      "title": "Componentes Essenciais de UI",
      "content": [
        {
          "type": "contentBlock",
          "title": "1. TextView",
          "content": [
            {
              "type": "paragraph",
              "text": "<strong>O que é e para que serve?</strong> É o componente mais básico para exibir texto na tela. Use-o para mostrar títulos, parágrafos, rótulos e qualquer informação estática para o usuário."
            },
            {
              "type": "image",
              "src": "https://placehold.co/600x100/e0e7ff/3730a3?text=Este+%C3%A9+um+TextView",
              "alt": "Exemplo de um TextView"
            },
            {
              "type": "code",
              "language": "xml",
              "code": "<!-- Basic TextView example (EN): Displays a static title on screen. -->\\n<TextView\\n    android:id=\\\"@+id/textViewTitulo\\\"\\n    android:layout_width=\\\"wrap_content\\\"\\n    android:layout_height=\\\"wrap_content\\\"\\n    android:text=\\\"Bem-vindo ao Meu App\\\"\\n    android:textSize=\\\"24sp\\\"\\n    android:textColor=\\\"@color/black\\\" />"
            },
            {
              "type": "callout",
              "variant": "info",
              "title": "Atributos Importantes",
              "content": "<ul><li><code>android:id=\\\"@+id/...\\\"</code>: Um identificador único para este componente. É como o \\\"CPF\\\" da View, essencial para podermos referenciá-la no código Kotlin mais tarde.</li><li><code>android:layout_width</code> e <code>android:layout_height</code>: Definem a largura e altura. <code>wrap_content</code> faz o componente ter o tamanho exato do seu conteúdo.</li><li><code>android:text</code>: O texto que será exibido. <strong>Boa prática:</strong> use referências a recursos de string (<code>@string/meu_texto</code>) em vez de texto fixo.</li><li><code>android:textSize</code>: O tamanho do texto (use a unidade <code-text>sp</code-text> para escalabilidade).</li></ul><p class=\\\"mt-4\\\">Explore todos os atributos na <a href=\\\"https://developer.android.com/reference/android/widget/TextView\\\">documentação oficial do TextView</a>.</p>"
            }
          ]
        },
        {
          "type": "contentBlock",
          "title": "2. EditText",
          "content": [
            {
              "type": "paragraph",
              "text": "<strong>O que é e para que serve?</strong> É um campo de texto que permite ao usuário inserir e editar informações. É a porta de entrada de dados do seu aplicativo."
            },
            {
              "type": "image",
              "src": "https://placehold.co/600x100/e0e7ff/3730a3?text=Digite+seu+nome+aqui...",
              "alt": "Exemplo de um EditText"
            },
            {
              "type": "code",
              "language": "xml",
              "code": "<!-- EditText example (EN): Collects user's name with a suitable keyboard. -->\\n<EditText\\n    android:id=\\\"@+id/editTextNome\\\"\\n    android:layout_width=\\\"match_parent\\\"\\n    android:layout_height=\\\"wrap_content\\\"\\n    android:hint=\\\"Digite seu nome\\\"\\n    android:inputType=\\\"textPersonName\\\" />"
            },
            {
              "type": "callout",
              "variant": "info",
              "title": "Atributos Importantes",
              "content": "<ul><li><code>android:layout_width=\\\"match_parent\\\"</code>: Faz o componente ocupar toda a largura disponível do seu \\\"container\\\" pai.</li><li><code>android:hint</code>: Mostra um texto de dica cinza claro que desaparece quando o usuário começa a digitar. É uma ótima prática para guiar o usuário.</li><li><code>android:inputType</code>: Ajuda o sistema a otimizar o teclado para o tipo de dado esperado (texto, número, email, senha, etc.), melhorando a experiência do usuário.</li></ul><p class=\\\"mt-4\\\">Veja todos os tipos de input na <a href=\\\"https://developer.android.com/reference/android/widget/EditText\\\">documentação oficial do EditText</a>.</p>"
            }
          ]
        },
        {
          "type": "contentBlock",
          "title": "3. Button",
          "content": [
            {
              "type": "paragraph",
              "text": "<strong>O que é e para que serve?</strong> É um componente que o usuário pode pressionar para acionar uma ação. É o principal meio de interação para executar comandos no app."
            },
            {
              "type": "image",
              "src": "https://placehold.co/600x100/e0e7ff/3730a3?text=CLIQUE+AQUI",
              "alt": "Exemplo de um Button"
            },
            {
              "type": "code",
              "language": "xml",
              "code": "<!-- Button example (EN): A simple action trigger. -->\\n<Button\\n    android:id=\\\"@+id/buttonConfirmar\\\"\\n    android:layout_width=\\\"wrap_content\\\"\\n    android:layout_height=\\\"wrap_content\\\"\\n    android:text=\\\"Confirmar\\\" />"
            },
            {
              "type": "callout",
              "variant": "info",
              "title": "Atributos Importantes",
              "content": "<ul><li><code>android:text</code>: O texto que aparece dentro do botão.</li><li>A principal função do botão é responder a cliques, o que faremos na próxima aula usando um <code-text>setOnClickListener</code-text> no nosso código Kotlin.</li></ul><p class=\\\"mt-4\\\">Saiba mais na <a href=\\\"https://developer.android.com/reference/android/widget/Button\\\">documentação oficial do Button</a>.</p>"
            }
          ]
        },
        {
          "type": "contentBlock",
          "title": "4. ImageView",
          "content": [
            {
              "type": "paragraph",
              "text": "<strong>O que é e para que serve?</strong> É o componente utilizado para exibir imagens, como fotos, ícones e outras mídias visuais. As imagens devem ser colocadas na pasta <code-text>res/drawable</code-text>."
            },
            {
              "type": "image",
              "src": "https://placehold.co/200x200/e0e7ff/3730a3?text=ImageView",
              "alt": "Exemplo de um ImageView"
            },
            {
              "type": "code",
              "language": "xml",
              "code": "<!-- ImageView example (EN): Shows a drawable with accessibility text. -->\\n<ImageView\\n    android:id=\\\"@+id/imageViewLogo\\\"\\n    android:layout_width=\\\"100dp\\\"\\n    android:layout_height=\\\"100dp\\\"\\n    android:src=\\\"@drawable/ic_logo\\\"\\n    android:contentDescription=\\\"@string/descricao_logo\\\" />"
            },
            {
              "type": "callout",
              "variant": "info",
              "title": "Atributos Importantes",
              "content": "<ul><li><code>android:src</code>: Especifica a imagem a ser exibida, geralmente referenciando um arquivo na pasta <code-text>drawable</code-text>.</li><li><code>android:contentDescription</code>: Texto descritivo para acessibilidade. É lido por leitores de tela para usuários com deficiência visual. <strong>É uma prática essencial!</strong></li><li><code>android:scaleType</code>: Controla como a imagem é redimensionada para caber no espaço do <code-text>ImageView</code-text> (ex: <code-text>centerCrop</code-text>, <code-text>fitCenter</code-text>).</li></ul><p class=\\\"mt-4\\\">Explore mais na <a href=\\\"https://developer.android.com/reference/android/widget/ImageView\\\">documentação oficial do ImageView</a>.</p>"
            }
          ]
        },
        {
          "type": "contentBlock",
          "title": "5. CheckBox",
          "content": [
            {
              "type": "paragraph",
              "text": "<strong>O que é e para que serve?</strong> É um tipo de botão de duas opções que pode ser marcado ou desmarcado. Ideal para situações onde o usuário pode selecionar múltiplas opções de uma lista."
            },
            {
              "type": "image",
              "src": "https://placehold.co/600x100/e0e7ff/3730a3?text=%E2%98%90+Aceito+os+termos",
              "alt": "Exemplo de um CheckBox"
            },
            {
              "type": "code",
              "language": "xml",
              "code": "<!-- CheckBox example (EN): Multiple selections allowed. -->\\n<CheckBox\\n    android:id=\\\"@+id/checkboxTermos\\\"\\n    android:layout_width=\\\"wrap_content\\\"\\n    android:layout_height=\\\"wrap_content\\\"\\n    android:text=\\\"Aceito os termos e condições\\\" />"
            },
            {
              "type": "callout",
              "variant": "info",
              "title": "Atributos Importantes",
              "content": "<ul><li><code>android:checked</code>: Pode ser definido como <code-text>true</code-text> ou <code-text>false</code-text> para determinar se a caixa já começa marcada.</li><li>No código Kotlin, podemos verificar se um <code-text>CheckBox</code-text> está marcado usando a propriedade <code-text>isChecked</code-text>.</li></ul><p class=\\\"mt-4\\\">Veja mais detalhes na <a href=\\\"https://developer.android.com/reference/android/widget/CheckBox\\\">documentação oficial do CheckBox</a>.</p>"
            }
          ]
        },
        {
          "type": "contentBlock",
          "title": "6. RadioButton e RadioGroup",
          "content": [
            {
              "type": "paragraph",
              "text": "<strong>O que é e para que serve?</strong> <code-text>RadioButton</code-text> é um botão de duas opções (marcado ou desmarcado). A sua principal característica é que, quando usado dentro de um <code-text>RadioGroup</code-text>, apenas uma opção pode ser selecionada por vez. Perfeito para perguntas de escolha única."
            },
            {
              "type": "image",
              "src": "https://placehold.co/600x150/e0e7ff/3730a3?text=Qual+o+seu+g%C3%AAnero%3F%0A(%E2%80%A2)+Masc+O+Fem",
              "alt": "Exemplo de RadioButtons"
            },
            {
              "type": "code",
              "language": "xml",
              "code": "<!-- RadioGroup example (EN): Only one option can be selected at a time. -->\\n<RadioGroup\\n    android:id=\\\"@+id/radioGroupGenero\\\"\\n    android:layout_width=\\\"wrap_content\\\"\\n    android:layout_height=\\\"wrap_content\\\"\\n    android:orientation=\\\"vertical\\\">\\n\\n    <RadioButton\\n        android:id=\\\"@+id/radioButtonMasc\\\"\\n        android:layout_width=\\\"wrap_content\\\"\\n        android:layout_height=\\\"wrap_content\\\"\\n        android:text=\\\"Masculino\\\" />\\n\\n    <RadioButton\\n        android:id=\\\"@+id/radioButtonFem\\\"\\n        android:layout_width=\\\"wrap_content\\\"\\n        android:layout_height=\\\"wrap_content\\\"\\n        android:text=\\\"Feminino\\\" />\\n\\n</RadioGroup>"
            },
            {
              "type": "callout",
              "variant": "info",
              "title": "Atributos Importantes",
              "content": "<ul><li><code>RadioGroup</code>: É o \\\"container\\\" invisível que agrupa os <code-text>RadioButton</code-text> e garante que apenas um deles possa ser selecionado.</li><li><code>android:orientation</code>: Pode ser definido no <code-text>RadioGroup</code-text> como <code-text>vertical</code-text> (padrão) ou <code-text>horizontal</code-text> para alinhar os botões.</li></ul><p class=\\\"mt-4\\\">Leia mais na <a href=\\\"https://developer.android.com/guide/topics/ui/controls/radiobutton\\\">documentação oficial sobre Radio Buttons</a>.</p>"
            }
          ]
        }
      ]
    },
    {
      "type": "contentBlock",
      "title": "Atividade Prática: Construindo a Primeira Interface",
      "content": [
        {
          "type": "paragraph",
          "text": "Vamos aplicar o que aprendemos! Abra o projeto \\\"Olá, Mundo!\\\" da aula anterior e siga os passos para construir a interface da nossa tarefa (TED)."
        },
        {
          "type": "list",
          "items": [
            "Abra o arquivo <code>res/layout/activity_main.xml</code>. Se ele abrir no modo \\\"Design\\\", mude para a visão \\\"Code\\\" ou \\\"Split\\\" no canto superior direito.",
            "Apague o <code>&lt;TextView&gt;</code> existente que mostra \\\"Hello World!\\\".",
            "Dentro do <code>&lt;androidx.constraintlayout.widget.ConstraintLayout&gt;</code> (ou outro layout que estiver lá), adicione um <code>TextView</code>, um <code>EditText</code> e um <code>Button</code>.",
            "Configure os atributos de cada um conforme o código abaixo. Preste atenção especial aos IDs e às constraints (<code>app:layout_...</code>), que posicionam os elementos na tela."
          ]
        },
        {
          "type": "code",
          "language": "xml",
          "code": "<!-- ConstraintLayout example (EN): Labels, input field, and a button centered with constraints. -->\\n<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\"?>\\n<androidx.constraintlayout.widget.ConstraintLayout xmlns:android=\\\"http://schemas.android.com/apk/res/android\\\"\\n    xmlns:app=\\\"http://schemas.android.com/apk/res-auto\\\"\\n    xmlns:tools=\\\"http://schemas.android.com/tools\\\"\\n    android:layout_width=\\\"match_parent\\\"\\n    android:layout_height=\\\"match_parent\\\"\\n    tools:context=\\\".MainActivity\\\">\\n\\n    <TextView\\n        android:id=\\\"@+id/textViewLabel\\\"\\n        android:layout_width=\\\"wrap_content\\\"\\n        android:layout_height=\\\"wrap_content\\\"\\n        android:layout_marginTop=\\\"128dp\\\"\\n        android:text=\\\"Por favor, digite seu nome abaixo:\\\"\\n        android:textSize=\\\"18sp\\\"\\n        app:layout_constraintTop_toTopOf=\\\"parent\\\"\\n        app:layout_constraintStart_toStartOf=\\\"parent\\\"\\n        app:layout_constraintEnd_toEndOf=\\\"parent\\\" />\\n\\n    <EditText\\n        android:id=\\\"@+id/editTextNome\\\"\\n        android:layout_width=\\\"0dp\\\"\\n        android:layout_height=\\\"wrap_content\\\"\\n        android:layout_marginStart=\\\"32dp\\\"\\n        android:layout_marginTop=\\\"16dp\\\"\\n        android:layout_marginEnd=\\\"32dp\\\"\\n        android:hint=\\\"Seu nome\\\"\\n        android:inputType=\\\"textPersonName\\\"\\n        app:layout_constraintTop_toBottomOf=\\\"@id/textViewLabel\\\"\\n        app:layout_constraintStart_toStartOf=\\\"parent\\\"\\n        app:layout_constraintEnd_toEndOf=\\\"parent\\\" />\\n\\n    <Button\\n        android:id=\\\"@+id/buttonSaudacao\\\"\\n        android:layout_width=\\\"wrap_content\\\"\\n        android:layout_height=\\\"wrap_content\\\"\\n        android:layout_marginTop=\\\"24dp\\\"\\n        android:text=\\\"Exibir Mensagem\\\"\\n        app:layout_constraintTop_toBottomOf=\\\"@id/editTextNome\\\"\\n        app:layout_constraintStart_toStartOf=\\\"parent\\\"\\n        app:layout_constraintEnd_toEndOf=\\\"parent\\\" />\\n\\n</androidx.constraintlayout.widget.ConstraintLayout>"
        }
      ]
    },
    {
      "type": "contentBlock",
      "title": "Encerramento e Próximos Passos",
      "content": [
        {
          "type": "callout",
          "variant": "info",
          "title": "Ponte para a Aula 5",
          "content": "Parabéns! Vocês construíram a primeira interface de usuário. Se executar o app agora, verá os componentes na tela, mas o botão não faz nada. A nossa interface está \\\"sem vida\\\". Na próxima aula sobre <strong>Manipulação de Eventos</strong>, vamos entrar no arquivo <code>MainActivity.kt</code> e escrever o código Kotlin para \\\"ouvir\\\" o clique do botão e fazer a mágica acontecer!"
        },
        {
          "type": "callout",
          "variant": "task",
          "title": "Tarefa para a próxima aula (TED)",
          "content": "<p class=\\\"mb-4\\\">O desafio é replicar e consolidar o que fizemos hoje. Esta tarefa é a base para a nossa próxima aula prática.</p><ol class=\\\"list-decimal list-inside space-y-2\\\"><li>No seu projeto do Android Studio, crie a interface com <code>TextView</code>, <code>EditText</code> e <code>Button</code>, exatamente como fizemos na atividade prática.</li><li>Execute o aplicativo no emulador ou no seu dispositivo físico para garantir que a interface aparece corretamente.</li><li>Tire um print (captura de tela) da sua aplicação em execução e submeta no Moodle.</li></ol>"
        },
        {
          "type": "bibliographyBlock",
          "title": "Bibliografia Recomendada",
          "references": [
            "SIMAS, V. L. et al. <strong>Desenvolvimento para Dispositivos Móveis – Volume 2</strong>. Grupo A, 2019.",
            "OLIVEIRA, Diego Bittencourt de et al. <strong>Desenvolvimento para Dispositivos Móveis</strong>. SAGAH, 2019. v. 1."
          ]
        }
      ]
    }
  ]
}
