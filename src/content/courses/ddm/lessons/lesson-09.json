{
  "formatVersion": "md3.lesson.v1",
  "id": "lesson-09",
  "title": "Aula 9: Unidade II – Intents Explícitas e Navegação",
  "summary": "Constrói fluxos de navegação multi-Activity usando Intents explícitas, passando dados e controlando a pilha de telas.",
  "objective": "Planejar e implementar navegação entre Activities com troca de dados segura e previsível.",
  "objectives": [
    "Projetar o fluxo de navegação principal do aplicativo com base em Intents explícitas.",
    "Enviar e recuperar dados entre Activities usando extras serializáveis.",
    "Controlar a pilha de Activities com `finish()` e flags adequadas para evitar telas duplicadas."
  ],
  "competencies": [
    "Arquitetura de navegação em aplicativos Android",
    "Comunicação entre componentes do sistema"
  ],
  "skills": [
    "Criar Intents explícitas com contextos seguros.",
    "Anexar objetos `Parcelable` e validar dados recebidos.",
    "Desenhar fluxos de navegação e testar cenários de back stack."
  ],
  "outcomes": [
    "Protótipo com duas telas compartilhando dados do usuário.",
    "Mapa de navegação documentado em Md3Flowchart."
  ],
  "prerequisites": [
    "Conhecer ciclo de vida e Bundle (aulas 7 e 8).",
    "Projeto de boas-vindas configurado com múltiplas telas."
  ],
  "tags": ["android", "intents", "navigation"],
  "duration": 110,
  "modality": "in-person",
  "resources": [
    {
      "label": "Intents and Intent Filters",
      "url": "https://developer.android.com/guide/components/intents-filters",
      "type": "article"
    },
    {
      "label": "Parcelable implementation guide",
      "url": "https://developer.android.com/reference/android/os/Parcelable",
      "type": "reference"
    }
  ],
  "bibliography": [
    "LECHETA, Ricardo. Google Android. Novatec, 2019. Cap. 7.",
    "GOOGLE. Navigate between activities. Android Developers, 2024."
  ],
  "assessment": {
    "type": "practice",
    "description": "Protótipo com navegação entre tela de cadastro e tela de resumo, enviando dados via extras.",
    "rubric": "Demonstra navegação estável, valida entradas e documenta decisões no mural da turma."
  },
  "content": [
    {
      "type": "videos",
      "title": "Referências em vídeo – Unidade II",
      "videos": [
        {
          "url": "https://www.youtube.com/watch?v=FrteWKKVyzI",
          "title": "Lifecycle-aware components",
          "caption": "Sessão oficial do Android Developers sobre ciclos de vida. Créditos: Android Developers (Google, 2020)."
        },
        {
          "url": "https://www.youtube.com/playlist?list=PLWz5rJ2EKKc8j2B95zGMb8Qbb8VG-Snys",
          "title": "Android Developer Fundamentals",
          "caption": "Playlist institucional com foco em intents, navegação e ciclo de vida. Créditos: Android Developers (Google, 2024)."
        }
      ]
    },
    {
      "type": "flightPlan",
      "title": "Plano de voo da aula (1h 50min)",
      "items": [
        "(10 min) Pergunta disparadora: como apps organizam múltiplas telas?",
        "(20 min) Anatomia de uma Intent explícita: contexto, classe destino e extras.",
        "(25 min) Passando dados: strings, objetos Parcelable e argumentos obrigatórios.",
        "(20 min) Back stack e flags: boas práticas ao navegar para telas já abertas.",
        "(20 min) Laboratório guiado: cadastro → resumo → retorno.",
        "(15 min) TED e checklist de validação."
      ]
    },
    {
      "type": "callout",
      "variant": "info",
      "title": "Cenário profissional",
      "content": [
        {
          "type": "paragraph",
          "text": "Você precisa enviar dados de cadastro para uma tela de confirmação sem duplicar Activities na pilha. Qual seria o fluxo ideal?"
        }
      ]
    },
    {
      "type": "contentBlock",
      "title": "Fluxo de navegação proposto",
      "content": [
        {
          "type": "paragraph",
          "text": "Antes de codificar, mapeie quais telas existem, quem inicia quem e quais dados são necessários em cada transição."
        }
      ]
    },
    {
      "type": "component",
      "component": "Md3Flowchart",
      "props": {
        "title": "Fluxo Cadastro → Resumo",
        "summary": "Usuário preenche dados, confirma e retorna para ajustes caso deseje.",
        "nodes": [
          {
            "id": "start",
            "type": "start",
            "title": "Início"
          },
          {
            "id": "cadastro",
            "type": "process",
            "title": "Tela Cadastro"
          },
          {
            "id": "validacao",
            "type": "decision",
            "title": "Dados válidos?",
            "branches": [
              {
                "id": "branch-sim",
                "label": "Sim",
                "target": "resumo",
                "description": "Prossegue para confirmação."
              },
              {
                "id": "branch-nao",
                "label": "Não",
                "target": "cadastro",
                "description": "Mostra erros e mantém na tela."
              }
            ]
          },
          {
            "id": "resumo",
            "type": "process",
            "title": "Tela Resumo"
          },
          {
            "id": "feedback",
            "type": "process",
            "title": "Enviar feedback e finalizar"
          },
          {
            "id": "end",
            "type": "end",
            "title": "Fim"
          }
        ],
        "connections": [
          {
            "from": "start",
            "to": "cadastro"
          },
          {
            "from": "cadastro",
            "to": "validacao"
          },
          {
            "from": "resumo",
            "to": "feedback"
          },
          {
            "from": "feedback",
            "to": "end"
          }
        ]
      }
    },
    {
      "type": "contentBlock",
      "title": "Criando uma Intent explícita",
      "content": [
        {
          "type": "paragraph",
          "text": "Uma Intent explícita aponta diretamente para a Activity de destino. Utilize o contexto atual (Activity ou `requireContext()` em fragmentos) e a classe alvo."
        },
        {
          "type": "code",
          "language": "kotlin",
          "code": "val intent = Intent(this, SummaryActivity::class.java).apply {\n  putExtra(\"EXTRA_NAME\", binding.nameInput.text.toString())\n  putExtra(\"EXTRA_EMAIL\", binding.emailInput.text.toString())\n  putExtra(\"EXTRA_SUBSCRIBE\", binding.subscribeSwitch.isChecked)\n}\nstartActivity(intent)\n\n// Referência: LECHETA, Ricardo (2019)"
        },
        {
          "type": "callout",
          "variant": "warning",
          "title": "Valide antes de navegar",
          "content": [
            {
              "type": "paragraph",
              "text": "Checar campos obrigatórios evita que a Activity destino receba dados nulos ou inconsistentes."
            }
          ]
        }
      ]
    },
    {
      "type": "contentBlock",
      "title": "Recebendo dados com segurança",
      "content": [
        {
          "type": "code",
          "language": "kotlin",
          "code": "class SummaryActivity : AppCompatActivity() {\n  override fun onCreate(savedInstanceState: Bundle?) {\n    super.onCreate(savedInstanceState)\n    setContentView(R.layout.activity_summary)\n\n    val name = intent.getStringExtra(\"EXTRA_NAME\") ?: return finish()\n    val email = intent.getStringExtra(\"EXTRA_EMAIL\")\n    val subscribe = intent.getBooleanExtra(\"EXTRA_SUBSCRIBE\", false)\n\n    binding.summaryText.text = buildString {\n      appendLine(\"Nome: $name\")\n      appendLine(\"E-mail: ${email.orEmpty()}\")\n      appendLine(if (subscribe) \"Receber novidades\" else \"Não receber novidades\")\n    }\n  }\n}\n\n// Referência: LECHETA, Ricardo (2019)"
        },
        {
          "type": "orderedList",
          "items": [
            {
              "title": "Fallbacks claros",
              "text": "Evite valores mágicos – encerre a tela se faltar informação essencial."
            },
            {
              "title": "Conversões seguras",
              "text": "Use métodos específicos (`getBooleanExtra`, `getParcelableExtra`)."
            },
            {
              "title": "Logs de auditoria",
              "text": "Registre extras recebidos para depuração rápida."
            }
          ]
        }
      ]
    },
    {
      "type": "contentBlock",
      "title": "Gerenciando a pilha de Activities",
      "content": [
        {
          "type": "paragraph",
          "text": "Use `finish()` para remover telas que não devem voltar ao stack e flags como `FLAG_ACTIVITY_CLEAR_TOP` para reutilizar Activities já existentes."
        },
        {
          "type": "code",
          "language": "kotlin",
          "code": "fun SummaryActivity.onConfirm() {\n  setResult(Activity.RESULT_OK)\n  finish() // remove a tela da pilha e retorna ao cadastro\n}\n\nfun navigateToDashboard(context: Context) {\n  val intent = Intent(context, DashboardActivity::class.java).apply {\n    addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP or Intent.FLAG_ACTIVITY_SINGLE_TOP)\n  }\n  context.startActivity(intent)\n}\n\n// Referência: LECHETA, Ricardo (2019)"
        }
      ]
    },
    {
      "type": "contentBlock",
      "title": "Laboratório guiado",
      "content": [
        {
          "type": "paragraph",
          "text": "Implemente o fluxo completo Cadastro → Resumo → Ajustes, garantindo que as informações sejam preservadas."
        },
        {
          "type": "orderedList",
          "items": [
            {
              "title": "Desenhe o fluxo",
              "text": "Atualize o Md3Flowchart com estados adicionais se necessário."
            },
            {
              "title": "Implemente extras",
              "text": "Envie nome, e-mail e preferências como extras obrigatórios."
            },
            {
              "title": "Valide retornos",
              "text": "Ao finalizar, retorne `RESULT_OK` e atualize a tela anterior."
            }
          ]
        },
        {
          "type": "callout",
          "variant": "task",
          "title": "TED",
          "content": [
            {
              "type": "paragraph",
              "text": "Grave um vídeo curto demonstrando o fluxo e descreva duas melhorias planejadas (ex.: animações, validação assíncrona)."
            }
          ]
        }
      ]
    },
    {
      "type": "bibliographyBlock",
      "title": "Referências complementares",
      "references": [
        "GOOGLE. Build a multi-screen app with intents. 2024.",
        "MEDNIEKS, Zigurd. Programming Android. O'Reilly, 4ª ed., 2022. Cap. 5."
      ]
    },
    {
      "type": "contentBlock",
      "title": "Exemplo de código comentado",
      "content": [
        {
          "type": "paragraph",
          "text": "Utilize o snippet como referência rápida para tratar o ciclo de vida e a navegação abordados em Intents Explícitas e Navegação."
        },
        {
          "type": "code",
          "language": "kotlin",
          "code": "override fun onStart() {\n    super.onStart()\n    android.util.Log.d(\"UnidadeII\", \"Intents Explícitas e Navegação: tela ativa\")\n}\n\nval intent = Intent(this, DetalhesActivity::class.java).apply {\n    putExtra(\"EXTRA_STATUS\", \"Intents Explícitas e Navegação\")\n}\nstartActivity(intent)\n// Referência: LECHETA, Ricardo (2019)"
        },
        {
          "type": "paragraph",
          "text": "A anotação final reforça a ligação direta com LECHETA, Ricardo (2019), garantindo alinhamento metodológico."
        },
        {
          "type": "callout",
          "variant": "academic",
          "title": "Fundamentação bibliográfica",
          "content": [
            {
              "type": "paragraph",
              "text": "LECHETA, Ricardo. Google Android. Novatec, 2019. Cap. 7."
            }
          ]
        }
      ]
    },
    {
      "type": "contentBlock",
      "title": "Leitura complementar e estudos de caso",
      "content": [
        {
          "type": "paragraph",
          "text": "Revise os fundamentos de Intents Explícitas e Navegação observando como o estado é preservado entre atividades."
        },
        {
          "type": "list",
          "items": [
            "Releia: LECHETA, Ricardo. Google Android. Novatec, 2019. Cap. 7.",
            "Conecte com o estudo: GOOGLE. Navigate between activities. Android Developers, 2024."
          ]
        },
        {
          "type": "paragraph",
          "text": "Mapeie um fluxo multi-activity do seu projeto e valide se os estados críticos estão protegidos."
        },
        {
          "type": "blockquote",
          "text": "GOOGLE. Navigate between activities. Android Developers, 2024."
        }
      ]
    }
  ],
  "metadata": {
    "status": "in-review",
    "updatedAt": "2024-05-22T00:00:00.000Z",
    "owners": ["Prof. Tiago Sombra"],
    "sources": ["Plano de navegação DDM", "Notas de laboratório 2024.1"]
  }
}
