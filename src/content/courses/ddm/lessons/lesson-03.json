{
  "formatVersion": "md3.lesson.v1",
  "id": "lesson-03",
  "title": "Aula 3: Unidade I ‚Äì Estrutura B√°sica de um App Android",
  "summary": "Mapeamento da anatomia de um app Android: Manifest, resources, Gradle e ciclo de build.",
  "objective": "Compreender a organiza√ß√£o de um projeto, identificando os arquivos essenciais como AndroidManifest.xml, MainActivity.kt e a pasta res.",
  "objectives": [
    "Compreender como as camadas de um aplicativo Android se relacionam na execu√ß√£o.",
    "Organizar pastas, recursos e depend√™ncias em um projeto base."
  ],
  "competencies": ["Modelagem de arquitetura de aplica√ß√µes m√≥veis nativas"],
  "skills": [
    "Identificar responsabilidades do AndroidManifest.xml e dos m√≥dulos Gradle.",
    "Estruturar diret√≥rios de resources para layouts, strings e drawables."
  ],
  "outcomes": [
    "Explica as responsabilidades de Manifest, Gradle e resources para a turma.",
    "Entrega um mapa de pastas documentando o fluxo de build do app exemplo."
  ],
  "prerequisites": ["Ambiente Android Studio instalado e validado na aula anterior."],
  "tags": ["estrutura-app", "activity", "android"],
  "duration": 100,
  "modality": "in-person",
  "resources": [
    {
      "label": "Application Fundamentals",
      "url": "https://developer.android.com/guide/components/fundamentals",
      "type": "article"
    },
    {
      "label": "Manage app resources",
      "url": "https://developer.android.com/guide/topics/resources/providing-resources",
      "type": "guide"
    }
  ],
  "bibliography": ["Google. \"App Fundamentals.\" 2024.", "Google. \"Resource Management.\" 2024."],
  "assessment": {
    "type": "reflection",
    "description": "Mapa mental documentando a estrutura e depend√™ncias do app exemplo."
  },
  "content": [
    {
      "type": "flightPlan",
      "title": "Plano de Voo da Aula",
      "items": [
        "Recapitula√ß√£o: Revis√£o r√°pida da cria√ß√£o do projeto \"Ol√°, Mundo!\".",
        "O Mapa do Tesouro: Por que a estrutura de pastas √© o nosso guia.",
        "An√°lise dos Arquivos Essenciais: Um mergulho profundo no que cada arquivo principal faz.",
        "Atividade Pr√°tica: Explora√ß√£o orientada da estrutura do nosso projeto no Android Studio.",
        "Tarefa (TED): Prepara√ß√£o para a consolida√ß√£o do conhecimento."
      ]
    },
    {
      "type": "contentBlock",
      "title": "O Mapa do Tesouro: Entendendo a Estrutura do Projeto",
      "content": [
        {
          "type": "paragraph",
          "text": "Imagine que um projeto Android √© como uma cidade. Existem diferentes bairros, cada um com uma fun√ß√£o espec√≠fica: um para as \"casas\" (layouts), um para as \"leis\" (manifest), e um para os \"c√©rebros\" que fazem tudo funcionar (c√≥digo Kotlin). Antes de come√ßar a construir novos pr√©dios, precisamos aprender a ler o mapa da cidade."
        },
        {
          "type": "paragraph",
          "text": "Nesta aula, vamos aprender a ler este \"mapa\". Compreender a fun√ß√£o de cada pasta e arquivo principal √© fundamental para nos tornarmos desenvolvedores organizados e eficientes. Ignorar esta etapa √© como tentar construir uma casa sem a planta: o resultado ser√° o caos."
        }
      ]
    },
    {
      "type": "contentBlock",
      "title": "A Estrutura de Pastas Desmistificada",
      "content": [
        {
          "type": "paragraph",
          "text": "Visualize a √°rvore do projeto Android em camadas e associe cada pasta √†s responsabilidades do aplicativo."
        },
        {
          "type": "subBlock",
          "title": "Principais diret√≥rios",
          "items": [
            "app/ ‚Äî n√∫cleo do m√≥dulo principal, reunindo manifests, c√≥digo Kotlin e recursos.",
            "manifests/ ‚Äî declara permiss√µes, activities e configura√ß√µes globais via AndroidManifest.xml.",
            "java/ ‚Äî abriga os pacotes Kotlin com Activities, ViewModels e classes utilit√°rias.",
            "res/ ‚Äî concentra recursos declarativos: drawable para √≠cones, layout para telas XML, mipmap para varia√ß√µes de √≠cones e values para strings, temas e cores."
          ]
        }
      ]
    },
    {
      "type": "contentBlock",
      "title": "An√°lise Detalhada dos Arquivos Principais",
      "content": [
        {
          "type": "contentBlock",
          "title": "üìÑ AndroidManifest.xml",
          "content": [
            {
              "type": "paragraph",
              "text": "Fun√ß√£o: √â o \"RG\" do seu aplicativo. Este arquivo cont√©m metadados essenciais que o sistema Android precisa para poder executar seu c√≥digo."
            },
            {
              "type": "paragraph",
              "text": "Analogia: Pense nele como a capa de um livro, que informa o t√≠tulo, o autor e um resumo do que se trata, antes mesmo de voc√™ come√ßar a ler."
            },
            {
              "type": "code",
              "language": "xml",
              "code": "<manifest ...>\n    <!-- Futuramente, permiss√µes como a de internet ser√£o declaradas aqui -->\n    <!-- <uses-permission android:name=\"android.permission.INTERNET\" /> -->\n\n    <application\n        android:allowBackup=\"true\"\n        android:icon=\"@mipmap/ic_launcher\"\n        android:label=\"@string/app_name\"\n        android:roundIcon=\"@mipmap/ic_launcher_round\"\n        android:supportsRtl=\"true\"\n        android:theme=\"@style/Theme.OlaMundoAndroid\"&gt;\n        \n        <activity\n            android:name=\".MainActivity\"\n            android:exported=\"true\"&gt;\n            \n                <category android:name=\"android.intent.category.LAUNCHER\" />\n            </intent-filter>\n        </activity>\n        \n    </application>\n</manifest>"
            },
            {
              "type": "callout",
              "variant": "info",
              "title": "Pontos-Chave a Observar",
              "content": [
                {
                  "type": "list",
                  "ordered": false,
                  "items": [
                    "android:icon e android:label: Definem o √≠cone e o nome do aplicativo que aparecem na tela inicial do celular.",
                    ": Cada tela (Activity) do seu app deve ser declarada aqui. Por enquanto, s√≥ temos uma: a MainActivity.",
                    ": Este bloco dentro da activity, com as tags MAIN e LAUNCHER, √© especial. Ele diz ao sistema Android: \"Esta √© a tela principal, a primeira a ser aberta quando o usu√°rio clicar no √≠cone do app\".",
                    "Permiss√µes: Futuramente, quando nosso app precisar acessar recursos como a internet, a c√¢mera ou a localiza√ß√£o, teremos que solicitar permiss√µes aqui."
                  ]
                },
                {
                  "type": "paragraph",
                  "text": "Para um mergulho mais fundo, consulte a documenta√ß√£o oficial do AndroidManifest.xml (https://developer.android.com/guide/topics/manifest/manifest-intro)."
                }
              ]
            }
          ]
        },
        {
          "type": "contentBlock",
          "title": "üìÑ MainActivity.kt",
          "content": [
            {
              "type": "paragraph",
              "text": "Fun√ß√£o: √â o \"c√©rebro\" da sua tela principal. Este arquivo Kotlin cont√©m a l√≥gica que controla o comportamento da interface."
            },
            {
              "type": "paragraph",
              "text": "Analogia: Se o arquivo de layout √© a planta da casa, o arquivo Kotlin √© o eletricista e o encanador que fazem as luzes acenderem e a √°gua correr."
            },
            {
              "type": "code",
              "language": "kotlin",
              "code": "package br.com.unichristus.ads.olamundoandroid\n\nimport androidx.appcompat.app.AppCompatActivity\nimport android.os.Bundle\n\nclass MainActivity : AppCompatActivity() {\n    override fun onCreate(savedInstanceState: Bundle?) {\n        super.onCreate(savedInstanceState)\n        setContentView(R.layout.activity_main)\n    }\n}"
            },
            {
              "type": "callout",
              "variant": "info",
              "title": "Analisando o C√≥digo",
              "content": [
                {
                  "type": "list",
                  "ordered": false,
                  "items": [
                    "class MainActivity : AppCompatActivity(): Estamos a criar uma classe chamada MainActivity que \"herda\" comportamentos e caracter√≠sticas de AppCompatActivity, uma classe base do Android que nos d√° funcionalidades essenciais.",
                    "override fun onCreate(...): Este √© um m√©todo do ciclo de vida da Activity. O c√≥digo dentro dele √© executado assim que a tela √© criada. √â aqui que configuramos o nosso layout.",
                    "setContentView(R.layout.activity_main): Esta √© a linha que conecta a l√≥gica (Kotlin) ao visual (XML). Ela diz: \"Para esta tela, use o design definido no arquivo activity_main.xml que est√° na pasta layout\"."
                  ]
                },
                {
                  "type": "paragraph",
                  "text": "Aprenda mais sobre o ciclo de vida na documenta√ß√£o oficial sobre Activities (https://developer.android.com/guide/components/activities/activity-lifecycle)."
                }
              ]
            }
          ]
        },
        {
          "type": "contentBlock",
          "title": "üìÅ res (Recursos)",
          "content": [
            {
              "type": "paragraph",
              "text": "Fun√ß√£o: Esta √© a pasta mais importante para a parte visual e est√°tica do seu app. Ela cont√©m todos os recursos que n√£o s√£o c√≥digo, como layouts, imagens, textos e cores."
            },
            {
              "type": "paragraph",
              "text": "Boa Pr√°tica: A principal vantagem de usar a pasta res √© a separa√ß√£o de responsabilidades. Manter o design (XML), textos (strings) e l√≥gica (Kotlin) em arquivos separados torna o projeto muito mais organizado e f√°cil de manter."
            },
            {
              "type": "list",
              "items": [
                "drawable: Cont√©m imagens (PNG, JPG), vetores (XML) e outros recursos gr√°ficos.",
                "layout: Cont√©m os arquivos XML que definem a estrutura visual de cada tela do seu app. O nosso activity_main.xml vive aqui.",
                "mipmap: Similar ao drawable, mas √© usado especificamente para os √≠cones do aplicativo. O Android usa esta pasta para fornecer a vers√£o do √≠cone com a melhor qualidade dependendo da densidade da tela do dispositivo.",
                "values: Uma pasta crucial para a organiza√ß√£o e boas pr√°ticas. - strings.xml: Onde voc√™ deve definir TODOS os textos do seu app. Em vez de escrever \"Ol√°, Mundo!\" diretamente no layout, voc√™ cria uma string com um nome (ex: app_name) e a referencia no layout (@string/app_name). Isso facilita a tradu√ß√£o do app para outros idiomas. - colors.xml: Onde voc√™ define a paleta de cores do seu app. - themes.xml: Onde voc√™ define o estilo visual geral do seu app (cores prim√°rias, fontes, etc.)."
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "contentBlock",
      "title": "Atividade Pr√°tica: Explora√ß√£o Guiada",
      "content": [
        {
          "type": "paragraph",
          "text": "Agora, vamos abrir o projeto \"Ol√°, Mundo!\" no Android Studio e explorar juntos. Tente encontrar as respostas para as seguintes perguntas:"
        },
        {
          "type": "list",
          "items": [
            "Abra o arquivo AndroidManifest.xml. Qual √© o nome do tema (theme) do seu aplicativo?",
            "Navegue at√© a pasta res/values e abra o arquivo strings.xml. Altere o valor da string app_name para \"Meu Primeiro App\". Execute o aplicativo novamente. O que mudou?",
            "Abra o arquivo activity_main.xml. Mude o valor do atributo android:text no TextView de \"Hello World!\" para o seu nome. Execute o aplicativo e veja o resultado.",
            "Abra a MainActivity.kt. Encontre a linha que carrega o layout. Tente coment√°-la (adicionando // no in√≠cio da linha) e execute o app. O que acontece? (N√£o se esque√ßa de descomentar depois!)."
          ]
        }
      ]
    },
    {
      "type": "contentBlock",
      "title": "Encerramento e Pr√≥ximos Passos",
      "content": [
        {
          "type": "callout",
          "variant": "task",
          "title": "Tarefa para a pr√≥xima aula (TED)",
          "content": [
            {
              "type": "paragraph",
              "text": "Para consolidar o que aprendemos hoje, a tarefa √© criar um mapa mental ou um diagrama que represente a estrutura de um projeto Android."
            },
            {
              "type": "list",
              "ordered": true,
              "items": [
                "Utilize uma ferramenta de sua prefer√™ncia (como draw.io (https://app.diagrams.net/), um software de mapa mental, ou at√© mesmo papel e caneta).",
                "Elabore um diagrama que mostre as principais pastas (manifests, java, res) e arquivos (AndroidManifest.xml, MainActivity.kt, activity_main.xml).",
                "Para cada item, escreva uma breve descri√ß√£o da sua fun√ß√£o, com base no que discutimos em aula.",
                "Submeta uma imagem ou PDF do seu diagrama no Moodle."
              ]
            }
          ]
        },
        {
          "type": "bibliographyBlock",
          "title": "Bibliografia Recomendada",
          "references": [
            "OLIVEIRA, Diego Bittencourt de et al. Desenvolvimento para Dispositivos M√≥veis. Porto Alegre: SAGAH, 2019. v. 1.",
            "URMA, Raoul-Gabriel; WARBURTON, Richard. Desenvolvimento Real de Software: Um Guia de Projetos para Fundamentos em Java. Alta Books, 2021."
          ]
        }
      ]
    }
  ],
  "metadata": {
    "status": "in-review",
    "updatedAt": "2024-05-07T00:00:00.000Z",
    "owners": ["Prof. Jo√£o Lima"],
    "sources": ["Plano de aula DDM ‚Äì Estrutura de Apps"]
  }
}
