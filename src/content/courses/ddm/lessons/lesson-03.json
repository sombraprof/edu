{
  "formatVersion": "md3.lesson.v1",
  "id": "lesson-03",
  "title": "Aula 3: Unidade I ‚Äì Estrutura B√°sica de um App Android",
  "summary": "Mapeamento da anatomia de um app Android: Manifest, resources, Gradle e ciclo de build.",
  "objective": "Compreender a organiza√ß√£o de um projeto, identificando os arquivos essenciais como AndroidManifest.xml, MainActivity.kt e a pasta res.",
  "objectives": [
    "Compreender como as camadas de um aplicativo Android se relacionam na execu√ß√£o.",
    "Organizar pastas, recursos e depend√™ncias em um projeto base."
  ],
  "competencies": ["Modelagem de arquitetura de aplica√ß√µes m√≥veis nativas"],
  "skills": [
    "Identificar responsabilidades do AndroidManifest.xml e dos m√≥dulos Gradle.",
    "Estruturar diret√≥rios de resources para layouts, strings e drawables."
  ],
  "outcomes": [
    "Explica as responsabilidades de Manifest, Gradle e resources para a turma.",
    "Entrega um mapa de pastas documentando o fluxo de build do app exemplo."
  ],
  "prerequisites": ["Ambiente Android Studio instalado e validado na aula anterior."],
  "tags": ["estrutura-app", "activity", "android"],
  "duration": 100,
  "modality": "in-person",
  "resources": [
    {
      "label": "Application Fundamentals",
      "url": "https://developer.android.com/guide/components/fundamentals",
      "type": "article"
    },
    {
      "label": "Manage app resources",
      "url": "https://developer.android.com/guide/topics/resources/providing-resources",
      "type": "guide"
    }
  ],
  "bibliography": ["Google. \"App Fundamentals.\" 2024.", "Google. \"Resource Management.\" 2024."],
  "assessment": {
    "type": "reflection",
    "description": "Mapa mental documentando a estrutura e depend√™ncias do app exemplo."
  },
  "content": [
    {
      "type": "flightPlan",
      "title": "Plano de Voo da Aula",
      "items": [
        "<strong>Recapitula√ß√£o:</strong> Revis√£o r√°pida da cria√ß√£o do projeto \"Ol√°, Mundo!\".",
        "<strong>O Mapa do Tesouro:</strong> Por que a estrutura de pastas √© o nosso guia.",
        "<strong>An√°lise dos Arquivos Essenciais:</strong> Um mergulho profundo no que cada arquivo principal faz.",
        "<strong>Atividade Pr√°tica:</strong> Explora√ß√£o orientada da estrutura do nosso projeto no Android Studio.",
        "<strong>Tarefa (TED):</strong> Prepara√ß√£o para a consolida√ß√£o do conhecimento."
      ]
    },
    {
      "type": "contentBlock",
      "title": "O Mapa do Tesouro: Entendendo a Estrutura do Projeto",
      "content": [
        {
          "type": "paragraph",
          "text": "Imagine que um projeto Android √© como uma cidade. Existem diferentes bairros, cada um com uma fun√ß√£o espec√≠fica: um para as \"casas\" (layouts), um para as \"leis\" (manifest), e um para os \"c√©rebros\" que fazem tudo funcionar (c√≥digo Kotlin). Antes de come√ßar a construir novos pr√©dios, precisamos aprender a ler o mapa da cidade."
        },
        {
          "type": "paragraph",
          "text": "Nesta aula, vamos aprender a ler este \"mapa\". Compreender a fun√ß√£o de cada pasta e arquivo principal √© fundamental para nos tornarmos desenvolvedores organizados e eficientes. Ignorar esta etapa √© como tentar construir uma casa sem a planta: o resultado ser√° o caos."
        }
      ]
    },
    {
      "type": "fileTree",
      "title": "A Estrutura de Pastas Desmistificada",
      "tree": [
        {
          "name": "app",
          "children": [
            {
              "name": "manifests",
              "children": [
                {
                  "name": "AndroidManifest.xml"
                }
              ]
            },
            {
              "name": "java",
              "children": [
                {
                  "name": "br.com.unichristus.ads.olamundoandroid",
                  "children": [
                    {
                      "name": "MainActivity.kt"
                    }
                  ]
                }
              ]
            },
            {
              "name": "res (Recursos)",
              "children": [
                {
                  "name": "drawable (Imagens, formas, √≠cones)"
                },
                {
                  "name": "layout (Telas do App)",
                  "children": [
                    {
                      "name": "activity_main.xml"
                    }
                  ]
                },
                {
                  "name": "mipmap (√çcones do App para diferentes densidades)"
                },
                {
                  "name": "values (Textos, Cores, Temas)"
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "contentBlock",
      "title": "An√°lise Detalhada dos Arquivos Principais",
      "content": [
        {
          "type": "contentBlock",
          "title": "üìÑ AndroidManifest.xml",
          "content": [
            {
              "type": "paragraph",
              "text": "<strong>Fun√ß√£o:</strong> √â o \"RG\" do seu aplicativo. Este arquivo cont√©m metadados essenciais que o sistema Android precisa para poder executar seu c√≥digo."
            },
            {
              "type": "paragraph",
              "text": "<strong>Analogia:</strong> Pense nele como a capa de um livro, que informa o t√≠tulo, o autor e um resumo do que se trata, antes mesmo de voc√™ come√ßar a ler."
            },
            {
              "type": "code",
              "language": "xml",
              "code": "<manifest ...>\n    <!-- Futuramente, permiss√µes como a de internet ser√£o declaradas aqui -->\n    <!-- <uses-permission android:name=\"android.permission.INTERNET\" /> -->\n\n    <application\n        android:allowBackup=\"true\"\n        android:icon=\"@mipmap/ic_launcher\"\n        android:label=\"@string/app_name\"\n        android:roundIcon=\"@mipmap/ic_launcher_round\"\n        android:supportsRtl=\"true\"\n        android:theme=\"@style/Theme.OlaMundoAndroid\"&gt;\n        \n        <activity\n            android:name=\".MainActivity\"\n            android:exported=\"true\"&gt;\n            <intent-filter&gt;\n                <action android:name=\"android.intent.action.MAIN\" />\n                <category android:name=\"android.intent.category.LAUNCHER\" />\n            </intent-filter>\n        </activity>\n        \n    </application>\n</manifest>"
            },
            {
              "type": "callout",
              "variant": "info",
              "title": "Pontos-Chave a Observar",
              "content": "<ul><li><code>android:icon</code> e <code>android:label</code>: Definem o √≠cone e o nome do aplicativo que aparecem na tela inicial do celular.</li><li><code>&lt;activity&gt;</code>: Cada tela (Activity) do seu app deve ser declarada aqui. Por enquanto, s√≥ temos uma: a <code-text>MainActivity</code-text>.</li><li><code>&lt;intent-filter&gt;</code>: Este bloco dentro da activity, com as tags <code>MAIN</code> e <code>LAUNCHER</code>, √© especial. Ele diz ao sistema Android: \"Esta √© a tela principal, a primeira a ser aberta quando o usu√°rio clicar no √≠cone do app\".</li><li><strong>Permiss√µes:</strong> Futuramente, quando nosso app precisar acessar recursos como a internet, a c√¢mera ou a localiza√ß√£o, teremos que solicitar permiss√µes aqui.</li></ul><p class=\"mt-4\">Para um mergulho mais fundo, consulte a <a href=\"https://developer.android.com/guide/topics/manifest/manifest-intro\">documenta√ß√£o oficial do AndroidManifest.xml</a>.</p>"
            }
          ]
        },
        {
          "type": "contentBlock",
          "title": "üìÑ MainActivity.kt",
          "content": [
            {
              "type": "paragraph",
              "text": "<strong>Fun√ß√£o:</strong> √â o \"c√©rebro\" da sua tela principal. Este arquivo Kotlin cont√©m a l√≥gica que controla o comportamento da interface."
            },
            {
              "type": "paragraph",
              "text": "<strong>Analogia:</strong> Se o arquivo de layout √© a planta da casa, o arquivo Kotlin √© o eletricista e o encanador que fazem as luzes acenderem e a √°gua correr."
            },
            {
              "type": "code",
              "language": "kotlin",
              "code": "package br.com.unichristus.ads.olamundoandroid\n\nimport androidx.appcompat.app.AppCompatActivity\nimport android.os.Bundle\n\nclass MainActivity : AppCompatActivity() {\n    override fun onCreate(savedInstanceState: Bundle?) {\n        super.onCreate(savedInstanceState)\n        setContentView(R.layout.activity_main)\n    }\n}"
            },
            {
              "type": "callout",
              "variant": "info",
              "title": "Analisando o C√≥digo",
              "content": "<ul><li><code>class MainActivity : AppCompatActivity()</code>: Estamos a criar uma classe chamada <code-text>MainActivity</code-text> que \"herda\" comportamentos e caracter√≠sticas de <code-text>AppCompatActivity</code-text>, uma classe base do Android que nos d√° funcionalidades essenciais.</li><li><code>override fun onCreate(...)</code>: Este √© um m√©todo do ciclo de vida da Activity. O c√≥digo dentro dele √© executado assim que a tela √© criada. √â aqui que configuramos o nosso layout.</li><li><code>setContentView(R.layout.activity_main)</code>: Esta √© a linha que conecta a l√≥gica (Kotlin) ao visual (XML). Ela diz: \"Para esta tela, use o design definido no arquivo <code-text>activity_main.xml</code-text> que est√° na pasta <code-text>layout</code-text>\".</li></ul><p class=\"mt-4\">Aprenda mais sobre o ciclo de vida na <a href=\"https://developer.android.com/guide/components/activities/activity-lifecycle\">documenta√ß√£o oficial sobre Activities</a>.</p>"
            }
          ]
        },
        {
          "type": "contentBlock",
          "title": "üìÅ res (Recursos)",
          "content": [
            {
              "type": "paragraph",
              "text": "<strong>Fun√ß√£o:</strong> Esta √© a pasta mais importante para a parte visual e est√°tica do seu app. Ela cont√©m todos os recursos que n√£o s√£o c√≥digo, como layouts, imagens, textos e cores."
            },
            {
              "type": "paragraph",
              "text": "<strong>Boa Pr√°tica:</strong> A principal vantagem de usar a pasta <code-text>res</code-text> √© a separa√ß√£o de responsabilidades. Manter o design (XML), textos (strings) e l√≥gica (Kotlin) em arquivos separados torna o projeto muito mais organizado e f√°cil de manter."
            },
            {
              "type": "list",
              "items": [
                "<strong>drawable:</strong> Cont√©m imagens (PNG, JPG), vetores (XML) e outros recursos gr√°ficos.",
                "<strong>layout:</strong> Cont√©m os arquivos XML que definem a estrutura visual de cada tela do seu app. O nosso <code-text>activity_main.xml</code-text> vive aqui.",
                "<strong>mipmap:</strong> Similar ao <code-text>drawable</code-text>, mas √© usado especificamente para os √≠cones do aplicativo. O Android usa esta pasta para fornecer a vers√£o do √≠cone com a melhor qualidade dependendo da densidade da tela do dispositivo.",
                "<strong>values:</strong> Uma pasta crucial para a organiza√ß√£o e boas pr√°ticas.<ul><li><code>strings.xml</code>: Onde voc√™ deve definir TODOS os textos do seu app. Em vez de escrever \"Ol√°, Mundo!\" diretamente no layout, voc√™ cria uma string com um nome (ex: <code-text>app_name</code-text>) e a referencia no layout (<code-text>@string/app_name</code-text>). Isso facilita a tradu√ß√£o do app para outros idiomas.</li><li><code>colors.xml</code>: Onde voc√™ define a paleta de cores do seu app.</li><li><code>themes.xml</code>: Onde voc√™ define o estilo visual geral do seu app (cores prim√°rias, fontes, etc.).</li></ul>"
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "contentBlock",
      "title": "Atividade Pr√°tica: Explora√ß√£o Guiada",
      "content": [
        {
          "type": "paragraph",
          "text": "Agora, vamos abrir o projeto \"Ol√°, Mundo!\" no Android Studio e explorar juntos. Tente encontrar as respostas para as seguintes perguntas:"
        },
        {
          "type": "list",
          "items": [
            "Abra o arquivo <code>AndroidManifest.xml</code>. Qual √© o nome do tema (theme) do seu aplicativo?",
            "Navegue at√© a pasta <code>res/values</code> e abra o arquivo <code>strings.xml</code>. Altere o valor da string <code-text>app_name</code-text> para \"Meu Primeiro App\". Execute o aplicativo novamente. O que mudou?",
            "Abra o arquivo <code>activity_main.xml</code>. Mude o valor do atributo <code>android:text</code> no <code-text>TextView</code-text> de \"Hello World!\" para o seu nome. Execute o aplicativo e veja o resultado.",
            "Abra a <code>MainActivity.kt</code>. Encontre a linha que carrega o layout. Tente coment√°-la (adicionando <code-text>//</code-text> no in√≠cio da linha) e execute o app. O que acontece? (N√£o se esque√ßa de descomentar depois!)."
          ]
        }
      ]
    },
    {
      "type": "contentBlock",
      "title": "Encerramento e Pr√≥ximos Passos",
      "content": [
        {
          "type": "callout",
          "variant": "task",
          "title": "Tarefa para a pr√≥xima aula (TED)",
          "content": "<p class=\"mb-4\">Para consolidar o que aprendemos hoje, a tarefa √© criar um mapa mental ou um diagrama que represente a estrutura de um projeto Android.</p><ol class=\"list-decimal list-inside space-y-2\"><li>Utilize uma ferramenta de sua prefer√™ncia (como <a href=\"https://app.diagrams.net/\">draw.io</a>, um software de mapa mental, ou at√© mesmo papel e caneta).</li><li>Elabore um diagrama que mostre as principais pastas (<code-text>manifests</code-text>, <code-text>java</code-text>, <code-text>res</code-text>) e arquivos (<code-text>AndroidManifest.xml</code-text>, <code-text>MainActivity.kt</code-text>, <code-text>activity_main.xml</code-text>).</li><li>Para cada item, escreva uma breve descri√ß√£o da sua fun√ß√£o, com base no que discutimos em aula.</li><li>Submeta uma imagem ou PDF do seu diagrama no Moodle.</li></ol>"
        },
        {
          "type": "bibliographyBlock",
          "title": "Bibliografia Recomendada",
          "references": [
            "OLIVEIRA, Diego Bittencourt de et al. <strong>Desenvolvimento para Dispositivos M√≥veis</strong>. Porto Alegre: SAGAH, 2019. v. 1.",
            "URMA, Raoul-Gabriel; WARBURTON, Richard. <strong>Desenvolvimento Real de Software: Um Guia de Projetos para Fundamentos em Java</strong>. Alta Books, 2021."
          ]
        }
      ]
    }
  ],
  "metadata": {
    "status": "in-review",
    "updatedAt": "2024-05-07T00:00:00.000Z",
    "owners": ["Prof. Jo√£o Lima"],
    "sources": ["Plano de aula DDM ‚Äì Estrutura de Apps"]
  }
}
