{
  "formatVersion": "md3.lesson.v1",
  "id": "lesson-08",
  "title": "Aula 8: Projeto Prático – Sistema Bancário",
  "summary": "Integra conceitos de orientação a objetos na construção de um mini sistema bancário com cadastro, operações e relatórios.",
  "objective": "Consolidar fundamentos de POO aplicando-os em um projeto guiado com foco em boas práticas e testes.",
  "objectives": [
    "Mapear requisitos funcionais e não funcionais do sistema bancário.",
    "Modelar classes e relacionamentos principais (contas, clientes, transações).",
    "Implementar serviços com testes automatizados e documentação mínima."
  ],
  "competencies": [
    "Engenharia de requisitos",
    "Modelagem orientada a objetos",
    "Entrega incremental de software"
  ],
  "skills": [
    "Escrever histórias de usuário e critérios de aceite.",
    "Converter diagramas em código Java com responsabilidade bem definida.",
    "Executar testes unitários e de integração para validar regras críticas."
  ],
  "outcomes": [
    "Backlog priorizado com histórias do sistema bancário.",
    "Implementação inicial com persistência em memória e testes.",
    "Guia de execução/documentação para avaliadores."
  ],
  "prerequisites": [
    "Domínio dos conceitos das aulas 01-07.",
    "Ambiente Java e ferramentas de build configuradas."
  ],
  "tags": ["poo", "projeto", "banco"],
  "duration": 180,
  "modality": "in-person",
  "resources": [
    {
      "label": "Template do repositório no GitHub",
      "type": "repository",
      "url": "https://github.com/example/lpoo-banco-template"
    },
    {
      "label": "Guia de boas práticas para revisão de código",
      "type": "document",
      "url": "https://example.edu/lpoo/revisao-codigo"
    },
    {
      "label": "Exercício: Modelagem UML",
      "type": "exercise",
      "url": "https://edu.local/courses/lpoo/exercises/uml-modeling"
    },
    {
      "label": "Oracle Developers – Construindo um Sistema Bancário em Java",
      "type": "video",
      "url": "https://www.youtube.com/watch?v=5L8hSdPNgmM",
      "duration": "PT48M05S",
      "studyObjective": "Acompanhar a construção guiada de um backend bancário, conectando requisitos de domínio a código Java."
    }
  ],
  "bibliography": [
    "SATO, M. Domain-Driven Design Distilled. Addison-Wesley, 2022.",
    "VERNON, V. Implementing Domain-Driven Design. Addison-Wesley, 2023."
  ],
  "assessment": {
    "type": "project",
    "description": "Entrega incremental do sistema bancário com stories concluídas, testes e documentação no repositório.",
    "rubric": "Histórias completas, testes com cobertura mínima de 70% e README descrevendo execução e decisões arquiteturais."
  },
  "content": [
    {
      "type": "lessonPlan",
      "title": "Plano da aula",
      "unit": {
        "title": "Unidade III — Projeto integrador",
        "content": "Planejar, modelar e implementar o sistema bancário guiado pela turma."
      },
      "cards": [
        {
          "icon": "calendar-days",
          "title": "Descoberta",
          "content": "Alinhar expectativas, personas e jornada do cliente bancário."
        },
        {
          "icon": "gears",
          "title": "Implementação",
          "content": "Dividir o trabalho em histórias e tarefas técnicas."
        },
        {
          "icon": "check-circle",
          "title": "Avaliação",
          "content": "Definir critérios de aceite, testes e documentação."
        }
      ]
    },
    {
      "type": "flightPlan",
      "title": "Plano de voo (3h00)",
      "items": [
        "(25 min) Kick-off do projeto e definição de personas.",
        "(30 min) Levantamento colaborativo de requisitos.",
        "(40 min) Modelagem de classes e diagramas em quadros digitais.",
        "(50 min) Coding dojo: implementando operações de conta (depósito, saque, transferência).",
        "(30 min) Testes automatizados e validação do fluxo crítico.",
        "(15 min) Documentação e organização do backlog.",
        "(10 min) Alinhamento de próximos passos e responsabilidades."
      ]
    },
    {
      "type": "callout",
      "variant": "good-practice",
      "title": "Trio do sucesso",
      "content": [
        {
          "type": "paragraph",
          "text": "Cada história deve ter requisito claro, teste automatizado e documentação mínima no README."
        }
      ]
    },
    {
      "type": "contentBlock",
      "title": "Principais histórias de usuário",
      "content": [
        {
          "type": "list",
          "items": [
            "Como cliente, desejo abrir uma conta para movimentar meu dinheiro.",
            "Como gerente, preciso consultar relatórios de clientes e contas ativas.",
            "Como auditor, desejo rastrear transações suspeitas para garantir conformidade."
          ]
        }
      ]
    },
    {
      "type": "component",
      "component": "Md3BlockDiagram",
      "props": {
        "title": "Arquitetura proposta",
        "summary": "Visão inicial das camadas do sistema bancário.",
        "blocks": [
          {
            "id": "api",
            "title": "Interface",
            "summary": "CLI ou REST",
            "layer": 1,
            "kind": "input-output"
          },
          {
            "id": "service",
            "title": "Serviços",
            "summary": "Regras de negócio",
            "layer": 2,
            "kind": "process"
          },
          {
            "id": "domain",
            "title": "Domínio",
            "summary": "Entidades Conta, Cliente, Transação",
            "layer": 3,
            "kind": "process"
          },
          {
            "id": "repo",
            "title": "Repositórios",
            "summary": "Persistência em memória/arquivo",
            "layer": 4,
            "kind": "data-store"
          },
          {
            "id": "integration",
            "title": "Integrações",
            "summary": "Serviços externos (antifraude)",
            "layer": 5,
            "kind": "external"
          }
        ],
        "channels": [
          {
            "id": "c1",
            "from": "api",
            "to": "service",
            "description": "Recebe comandos do usuário"
          },
          {
            "id": "c2",
            "from": "service",
            "to": "domain",
            "description": "Orquestra regras de negócio"
          },
          {
            "id": "c3",
            "from": "domain",
            "to": "repo",
            "description": "Persistência e consultas"
          },
          {
            "id": "c4",
            "from": "service",
            "to": "integration",
            "description": "Validações externas"
          }
        ]
      }
    },
    {
      "type": "checklist",
      "title": "Checklist de entrega",
      "description": "Antes de abrir o pull request:",
      "items": [
        "Histórias priorizadas estão vinculadas a issues no GitHub.",
        "Testes automatizados executam com sucesso no CI.",
        "README documenta setup, execução e testes.",
        "Padrões de código e formatação foram verificados (lint)."
      ]
    }
  ],
  "metadata": {
    "status": "in-review",
    "updatedAt": "2025-02-01T00:00:00.000Z",
    "owners": ["Prof. Tiago Sombra"],
    "sources": ["Plano de projeto LPOO 2025.2", "Workshops de POO 2023"]
  }
}
