{
  "formatVersion": "md3.lesson.v1",
  "id": "lesson-04",
  "title": "Aula 4: Visibilidade, Modificadores de Acesso e Encapsulamento",
  "summary": "Estabelece estratégias para proteger o estado dos objetos usando modificadores de acesso, imutabilidade controlada e APIs seguras.",
  "objective": "Configurar corretamente pacotes, visibilidade e métodos de acesso para manter invariantes confiáveis.",
  "objectives": [
    "Explicar o impacto de cada modificador de acesso no encapsulamento.",
    "Refatorar classes para expor somente aquilo que é necessário.",
    "Implementar objetos imutáveis e padrões de encapsulamento progressivo."
  ],
  "competencies": [
    "Engenharia de software orientada a objetos",
    "Qualidade e segurança de código",
    "Modelagem de APIs internas"
  ],
  "skills": [
    "Escolher modificadores apropriados para atributos, métodos e classes internas.",
    "Aplicar encapsulamento com `getter`/`setter` derivados de necessidades reais e não por convenção cega.",
    "Criar objetos de valor imutáveis usando `record` ou classes convencionais."
  ],
  "outcomes": [
    "Checklist de revisão de encapsulamento para o projeto.",
    "Refatoração de uma classe legado com acesso seguro.",
    "Documento descrevendo políticas de visibilidade por pacote."
  ],
  "prerequisites": [
    "Compreensão de classes, atributos e métodos.",
    "Familiaridade com pacotes e organização do projeto."
  ],
  "tags": ["poo", "encapsulamento", "java"],
  "duration": 120,
  "modality": "in-person",
  "resources": [
    {
      "label": "Plano de ensino LPOO 2025.2",
      "type": "document",
      "url": "https://example.edu/lpoo/plano-ensino-2025-2"
    },
    {
      "label": "Deitel & Deitel — Java Como Programar (cap. 4)",
      "type": "book",
      "url": "https://www.pearson.com/en-us/subject-catalog/p/java-how-to-program/P200000000934/9781292402067"
    },
    {
      "label": "Goodrich, Tamassia & Goldwasser — Data Structures and Algorithms in Java (cap. 3)",
      "type": "book",
      "url": "https://www.wiley.com/en-us/Data+Structures+and+Algorithms+in+Java%2C+7th+Edition-p-9781119498590"
    },
    {
      "label": "Herbert Schildt — Java: A Beginner's Guide (cap. 5)",
      "type": "book",
      "url": "https://www.mhprofessional.com/java-a-beginners-guide-eighth-edition-9781260440218-usa"
    },
    {
      "label": "Guia Oracle sobre encapsulamento",
      "type": "article",
      "url": "https://docs.oracle.com/javase/tutorial/java/javaOO/accesscontrol.html"
    },
    {
      "label": "Joshua Bloch – Effective Java (cap. 4)",
      "type": "book",
      "url": "https://effectivejava.com"
    },
    {
      "label": "Oracle Developers – Encapsulation in Java (Tech Talk)",
      "type": "video",
      "url": "https://www.youtube.com/watch?v=9kQb-KGMi54",
      "duration": "PT13M02S",
      "studyObjective": "Visualizar estratégias práticas de encapsulamento e controle de acesso aplicadas por especialistas Oracle."
    }
  ],
  "bibliography": [
    "BLOCH, J. Effective Java. 4. ed. Addison-Wesley, 2023.",
    "MARTIN, R. Clean Code. Prentice Hall, 2022."
  ],
  "assessment": {
    "type": "peer-review",
    "description": "Code review cruzado avaliando encapsulamento e políticas de acesso aplicadas às classes do mini projeto.",
    "rubric": "Checklist com itens obrigatórios (visibilidade, imutabilidade, validação) preenchido e feedback registrado no repositório."
  },
  "content": [
    {
      "type": "lessonPlan",
      "title": "Plano da aula",
      "unit": {
        "title": "Unidade I — Encapsulando conhecimento",
        "content": "Proteção de dados sensíveis, contratos explícitos e controle da superfície pública."
      },
      "cards": [
        {
          "icon": "settings",
          "title": "Política de acesso",
          "content": "Quando usar `public`, `protected`, `package-private` e `private`."
        },
        {
          "icon": "monitor",
          "title": "Exposição mínima",
          "content": "Aplicar o princípio do menor privilégio em classes e pacotes."
        },
        {
          "icon": "database",
          "title": "Objetos imutáveis",
          "content": "Criar registros seguros para representar valores compartilhados."
        }
      ]
    },
    {
      "type": "flightPlan",
      "title": "Plano de voo (2h00)",
      "items": [
        "(15 min) Aquecimento com análise de código que viola encapsulamento.",
        "(25 min) Discussão dirigida sobre modificadores de acesso e exemplos.",
        "(25 min) Laboratório: refatorando atributos públicos em privados com validação.",
        "(20 min) Demonstração: construindo objeto imutável com `record`.",
        "(20 min) Pair review: checklist de encapsulamento no GitHub.",
        "(15 min) Consolidação e definição da tarefa assíncrona."
      ]
    },
    {
      "type": "callout",
      "variant": "warning",
      "title": "Armadilha comum",
      "content": [
        {
          "type": "paragraph",
          "text": "Transformar todos os campos em `private` e gerar `getters/setters` automaticamente não significa encapsular. Questione a necessidade de expor cada dado."
        }
      ]
    },
    {
      "type": "truthTable",
      "title": "Visibilidade dos modificadores",
      "headers": ["Modificador", "Mesma classe", "Mesmo pacote", "Subclasses", "Outros pacotes"],
      "rows": [
        [
          {
            "value": "public"
          },
          {
            "state": "true",
            "display": "✔"
          },
          {
            "state": "true",
            "display": "✔"
          },
          {
            "state": "true",
            "display": "✔"
          },
          {
            "state": "true",
            "display": "✔"
          }
        ],
        [
          {
            "value": "protected"
          },
          {
            "state": "true",
            "display": "✔"
          },
          {
            "state": "true",
            "display": "✔"
          },
          {
            "state": "true",
            "display": "✔"
          },
          {
            "state": "false",
            "display": "✖"
          }
        ],
        [
          {
            "value": "package-private"
          },
          {
            "state": "true",
            "display": "✔"
          },
          {
            "state": "true",
            "display": "✔"
          },
          {
            "state": "false",
            "display": "✖"
          },
          {
            "state": "false",
            "display": "✖"
          }
        ],
        [
          {
            "value": "private"
          },
          {
            "state": "true",
            "display": "✔"
          },
          {
            "state": "false",
            "display": "✖"
          },
          {
            "state": "false",
            "display": "✖"
          },
          {
            "state": "false",
            "display": "✖"
          }
        ]
      ]
    },
    {
      "type": "checklist",
      "title": "Checklist de encapsulamento",
      "description": "Revise antes de subir o commit:",
      "items": [
        "Atributos expostos são realmente necessários?",
        "Objetos compartilhados são imutáveis ou defensivamente copiados.",
        "Construtores e setters validam entradas e lançam exceções significativas.",
        "Pacotes agrupam responsabilidades coesas e isolam implementações."
      ]
    },
    {
      "type": "component",
      "component": "Md3Flowchart",
      "props": {
        "title": "Fluxo para expor funcionalidades com segurança",
        "nodes": [
          {
            "id": "start",
            "type": "start",
            "title": "Necessidade de expor dado"
          },
          {
            "id": "avaliar",
            "type": "decision",
            "title": "Dado faz parte do contrato público?",
            "branches": [
              {
                "id": "sim",
                "label": "Sim",
                "target": "forma"
              },
              {
                "id": "nao",
                "label": "Não",
                "target": "privado"
              }
            ]
          },
          {
            "id": "forma",
            "type": "process",
            "title": "Definir forma de acesso (getter, DTO, evento)"
          },
          {
            "id": "validar",
            "type": "process",
            "title": "Aplicar validações e cópias defensivas"
          },
          {
            "id": "documentar",
            "type": "output",
            "title": "Documentar contratos públicos"
          },
          {
            "id": "privado",
            "type": "process",
            "title": "Manter campo privado e encapsulado"
          },
          {
            "id": "end",
            "type": "end",
            "title": "Classe pronta"
          }
        ],
        "connections": [
          {
            "from": "start",
            "to": "avaliar"
          },
          {
            "from": "avaliar",
            "to": "forma",
            "label": "Sim"
          },
          {
            "from": "forma",
            "to": "validar"
          },
          {
            "from": "validar",
            "to": "documentar"
          },
          {
            "from": "documentar",
            "to": "end"
          },
          {
            "from": "avaliar",
            "to": "privado",
            "label": "Não"
          },
          {
            "from": "privado",
            "to": "end"
          }
        ]
      }
    }
  ],
  "metadata": {
    "status": "in-review",
    "updatedAt": "2025-10-03T00:00:00.000Z",
    "owners": ["Prof. Tiago Sombra"],
    "sources": [
      "Plano de ensino LPOO 2025.2",
      "docs/governance/lesson-audit-plan.md – LPOO (2025.2)"
    ]
  }
}
