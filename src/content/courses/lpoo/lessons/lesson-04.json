{
  "formatVersion": "md3.lesson.v1",
  "id": "lesson-04",
  "title": "Aula 4: Visibilidade, Modificadores de Acesso e Encapsulamento",
  "summary": "Estabelece estratégias para proteger o estado dos objetos usando modificadores de acesso, imutabilidade controlada e APIs seguras.",
  "objective": "Configurar corretamente pacotes, visibilidade e métodos de acesso para manter invariantes confiáveis.",
  "objectives": [
    "Explicar o impacto de cada modificador de acesso no encapsulamento.",
    "Refatorar classes para expor somente aquilo que é necessário.",
    "Implementar objetos imutáveis e padrões de encapsulamento progressivo."
  ],
  "competencies": [
    "Engenharia de software orientada a objetos",
    "Qualidade e segurança de código",
    "Modelagem de APIs internas"
  ],
  "skills": [
    "Escolher modificadores apropriados para atributos, métodos e classes internas.",
    "Aplicar encapsulamento com `getter`/`setter` derivados de necessidades reais e não por convenção cega.",
    "Criar objetos de valor imutáveis usando `record` ou classes convencionais."
  ],
  "outcomes": [
    "Checklist de revisão de encapsulamento para o projeto.",
    "Refatoração de uma classe legado com acesso seguro.",
    "Documento descrevendo políticas de visibilidade por pacote."
  ],
  "prerequisites": [
    "Compreensão de classes, atributos e métodos.",
    "Familiaridade com pacotes e organização do projeto."
  ],
  "tags": ["poo", "encapsulamento", "java"],
  "duration": 120,
  "modality": "in-person",
  "resources": [
    {
      "label": "Plano de ensino LPOO 2025.2",
      "type": "document",
      "url": "https://example.edu/lpoo/plano-ensino-2025-2"
    },
    {
      "label": "Deitel & Deitel — Java Como Programar (cap. 4)",
      "type": "book",
      "url": "https://www.pearson.com/en-us/subject-catalog/p/java-how-to-program/P200000000934/9781292402067"
    },
    {
      "label": "Goodrich, Tamassia & Goldwasser — Data Structures and Algorithms in Java (cap. 3)",
      "type": "book",
      "url": "https://www.wiley.com/en-us/Data+Structures+and+Algorithms+in+Java%2C+7th+Edition-p-9781119498590"
    },
    {
      "label": "Herbert Schildt — Java: A Beginner's Guide (cap. 5)",
      "type": "book",
      "url": "https://www.mhprofessional.com/java-a-beginners-guide-eighth-edition-9781260440218-usa"
    },
    {
      "label": "Guia Oracle sobre encapsulamento",
      "type": "article",
      "url": "https://docs.oracle.com/javase/tutorial/java/javaOO/accesscontrol.html"
    },
    {
      "label": "Joshua Bloch – Effective Java (cap. 4)",
      "type": "book",
      "url": "https://effectivejava.com"
    },
    {
      "label": "Oracle Developers – Encapsulation in Java (Tech Talk)",
      "type": "video",
      "url": "https://www.youtube.com/watch?v=9kQb-KGMi54",
      "duration": "PT13M02S",
      "studyObjective": "Visualizar estratégias práticas de encapsulamento e controle de acesso aplicadas por especialistas Oracle."
    }
  ],
  "bibliography": [
    "BLOCH, J. Effective Java. 4. ed. Addison-Wesley, 2023.",
    "MARTIN, R. Clean Code. Prentice Hall, 2022."
  ],
  "assessment": {
    "type": "peer-review",
    "description": "Code review cruzado avaliando encapsulamento e políticas de acesso aplicadas às classes do mini projeto.",
    "rubric": "Checklist com itens obrigatórios (visibilidade, imutabilidade, validação) preenchido e feedback registrado no repositório."
  },
  "content": [
    {
      "type": "lessonPlan",
      "title": "Plano da aula",
      "unit": {
        "title": "Unidade I — Encapsulando conhecimento",
        "content": "Proteção de dados sensíveis, contratos explícitos e controle da superfície pública."
      },
      "cards": [
        {
          "icon": "settings",
          "title": "Política de acesso",
          "content": "Quando usar `public`, `protected`, `package-private` e `private`."
        },
        {
          "icon": "monitor",
          "title": "Exposição mínima",
          "content": "Aplicar o princípio do menor privilégio em classes e pacotes."
        },
        {
          "icon": "database",
          "title": "Objetos imutáveis",
          "content": "Criar registros seguros para representar valores compartilhados."
        }
      ]
    },
    {
      "type": "flightPlan",
      "title": "Plano de voo (2h00)",
      "items": [
        "(15 min) Aquecimento com análise de código que viola encapsulamento.",
        "(25 min) Discussão dirigida sobre modificadores de acesso e exemplos.",
        "(25 min) Laboratório: refatorando atributos públicos em privados com validação.",
        "(20 min) Demonstração: construindo objeto imutável com `record`.",
        "(20 min) Pair review: checklist de encapsulamento no GitHub.",
        "(15 min) Consolidação e definição da tarefa assíncrona."
      ]
    },
    {
      "type": "callout",
      "variant": "warning",
      "title": "Armadilha comum",
      "content": [
        {
          "type": "paragraph",
          "text": "Transformar todos os campos em `private` e gerar `getters/setters` automaticamente não significa encapsular. Questione a necessidade de expor cada dado."
        }
      ]
    },
    {
      "type": "bugFixChallenge",
      "title": "Ficha de matrícula sem encapsulamento",
      "description": "O time recebeu esta classe legado para coletar dados de matrícula. Ela expõe campos diretamente, não valida entradas e compartilha referências mutáveis. Aplique modificadores e proteções adequadas para alinhar com a checklist da aula.",
      "language": "java",
      "code": "package edu.lpoo.legacy;\n\nimport java.time.LocalDate;\nimport java.util.ArrayList;\nimport java.util.List;\n\npublic class EnrollmentForm {\n    // PROBLEMA: campos expostos quebram o encapsulamento\n    public String studentName;\n    public LocalDate birthDate;\n    public List<String> selectedModules = new ArrayList<>();\n    public ContactInfo emergencyContact;\n\n    public EnrollmentForm(String studentName, LocalDate birthDate, ContactInfo emergencyContact) {\n        // PROBLEMA: nenhum tipo de validação ou normalização da entrada\n        this.studentName = studentName;\n        this.birthDate = birthDate;\n        this.emergencyContact = emergencyContact;\n    }\n\n    public List<String> getSelectedModules() {\n        // PROBLEMA: devolve referência mutável interna\n        return selectedModules;\n    }\n\n    public void replaceEmergencyContact(ContactInfo emergencyContact) {\n        // PROBLEMA: aceita valores inválidos sem lançar exceções\n        this.emergencyContact = emergencyContact;\n    }\n\n    public void syncFrom(EnrollmentForm other) {\n        // PROBLEMA: cópia rasa quebra invariantes e imutabilidade desejada\n        this.selectedModules = other.selectedModules;\n        this.emergencyContact = other.emergencyContact;\n    }\n}\n\nclass ContactInfo {\n    // PROBLEMA: estrutura auxiliar também expõe estado mutável\n    public String name;\n    public String phone;\n    public List<String> extraPhones = new ArrayList<>();\n}",
      "hints": [8, 9, 14, 21, 26, 31, 39],
      "guidance": [
        "Encapsule atributos com visibilidade adequada e exponha apenas métodos necessários para o contrato público.",
        "Valide entradas no construtor e nos pontos de mutação, lançando exceções específicas para estados inválidos.",
        "Aplique cópias defensivas ao compartilhar coleções ou objetos mutáveis, preservando a imutabilidade planejada."
      ]
    },
    {
      "type": "truthTable",
      "title": "Visibilidade dos modificadores",
      "headers": ["Modificador", "Mesma classe", "Mesmo pacote", "Subclasses", "Outros pacotes"],
      "rows": [
        [
          {
            "value": "public"
          },
          {
            "state": "true",
            "display": "✔"
          },
          {
            "state": "true",
            "display": "✔"
          },
          {
            "state": "true",
            "display": "✔"
          },
          {
            "state": "true",
            "display": "✔"
          }
        ],
        [
          {
            "value": "protected"
          },
          {
            "state": "true",
            "display": "✔"
          },
          {
            "state": "true",
            "display": "✔"
          },
          {
            "state": "true",
            "display": "✔"
          },
          {
            "state": "false",
            "display": "✖"
          }
        ],
        [
          {
            "value": "package-private"
          },
          {
            "state": "true",
            "display": "✔"
          },
          {
            "state": "true",
            "display": "✔"
          },
          {
            "state": "false",
            "display": "✖"
          },
          {
            "state": "false",
            "display": "✖"
          }
        ],
        [
          {
            "value": "private"
          },
          {
            "state": "true",
            "display": "✔"
          },
          {
            "state": "false",
            "display": "✖"
          },
          {
            "state": "false",
            "display": "✖"
          },
          {
            "state": "false",
            "display": "✖"
          }
        ]
      ]
    },
    {
      "type": "checklist",
      "title": "Checklist de encapsulamento",
      "description": "Revise antes de subir o commit:",
      "items": [
        "Atributos expostos são realmente necessários?",
        "Objetos compartilhados são imutáveis ou defensivamente copiados.",
        "Construtores e setters validam entradas e lançam exceções significativas.",
        "Pacotes agrupam responsabilidades coesas e isolam implementações."
      ]
    },
    {
      "type": "component",
      "component": "Md3Flowchart",
      "props": {
        "title": "Fluxo para expor funcionalidades com segurança",
        "nodes": [
          {
            "id": "start",
            "type": "start",
            "title": "Necessidade de expor dado"
          },
          {
            "id": "avaliar",
            "type": "decision",
            "title": "Dado faz parte do contrato público?",
            "branches": [
              {
                "id": "sim",
                "label": "Sim",
                "target": "forma"
              },
              {
                "id": "nao",
                "label": "Não",
                "target": "privado"
              }
            ]
          },
          {
            "id": "forma",
            "type": "process",
            "title": "Definir forma de acesso (getter, DTO, evento)"
          },
          {
            "id": "validar",
            "type": "process",
            "title": "Aplicar validações e cópias defensivas"
          },
          {
            "id": "documentar",
            "type": "output",
            "title": "Documentar contratos públicos"
          },
          {
            "id": "privado",
            "type": "process",
            "title": "Manter campo privado e encapsulado"
          },
          {
            "id": "end",
            "type": "end",
            "title": "Classe pronta"
          }
        ],
        "connections": [
          {
            "from": "start",
            "to": "avaliar"
          },
          {
            "from": "avaliar",
            "to": "forma",
            "label": "Sim"
          },
          {
            "from": "forma",
            "to": "validar"
          },
          {
            "from": "validar",
            "to": "documentar"
          },
          {
            "from": "documentar",
            "to": "end"
          },
          {
            "from": "avaliar",
            "to": "privado",
            "label": "Não"
          },
          {
            "from": "privado",
            "to": "end"
          }
        ]
      }
    },
    {
      "type": "component",
      "component": "WhiteboardBlock",
      "props": {
        "title": "Mapa de políticas de visibilidade por pacote",
        "description": "Mapeiem as visibilidades public, protected, package-private e private em cada pacote, apontando contratos que podem ser compartilhados com outras equipes.",
        "height": 520,
        "allowOfflineEdit": true,
        "snapshots": [
          {
            "id": "pacotes-base",
            "label": "Pacotes e camadas",
            "description": "Organizem colunas para core, api e infrastructure com exemplos iniciais de classes e suas visibilidades padrão.",
            "state": {
              "version": "5.3.0",
              "objects": [
                {
                  "type": "line",
                  "version": "5.3.0",
                  "originX": "center",
                  "originY": "center",
                  "left": 320,
                  "top": 260,
                  "width": 0,
                  "height": 360,
                  "fill": "#94a3b8",
                  "stroke": "#94a3b8",
                  "strokeWidth": 2,
                  "strokeLineCap": "round",
                  "strokeLineJoin": "round",
                  "strokeUniform": true,
                  "opacity": 1,
                  "visible": true,
                  "backgroundColor": "",
                  "paintFirst": "stroke",
                  "globalCompositeOperation": "source-over",
                  "scaleX": 1,
                  "scaleY": 1,
                  "angle": 0,
                  "flipX": false,
                  "flipY": false,
                  "skewX": 0,
                  "skewY": 0,
                  "x1": 0,
                  "y1": -180,
                  "x2": 0,
                  "y2": 180
                },
                {
                  "type": "line",
                  "version": "5.3.0",
                  "originX": "center",
                  "originY": "center",
                  "left": 520,
                  "top": 260,
                  "width": 0,
                  "height": 360,
                  "fill": "#94a3b8",
                  "stroke": "#94a3b8",
                  "strokeWidth": 2,
                  "strokeLineCap": "round",
                  "strokeLineJoin": "round",
                  "strokeUniform": true,
                  "opacity": 1,
                  "visible": true,
                  "backgroundColor": "",
                  "paintFirst": "stroke",
                  "globalCompositeOperation": "source-over",
                  "scaleX": 1,
                  "scaleY": 1,
                  "angle": 0,
                  "flipX": false,
                  "flipY": false,
                  "skewX": 0,
                  "skewY": 0,
                  "x1": 0,
                  "y1": -180,
                  "x2": 0,
                  "y2": 180
                },
                {
                  "type": "textbox",
                  "version": "5.3.0",
                  "originX": "center",
                  "originY": "center",
                  "left": 220,
                  "top": 120,
                  "width": 200,
                  "height": 132,
                  "text": "Pacote core\n- ClienteService (public)\n- PedidoRepository (package-private)\n- ValidadorPagamento (private helpers)",
                  "fontSize": 20,
                  "fontFamily": "Inter",
                  "fill": "#0f172a",
                  "textAlign": "left",
                  "fontWeight": "bold",
                  "charSpacing": 0,
                  "direction": "ltr",
                  "lineHeight": 1.3
                },
                {
                  "type": "textbox",
                  "version": "5.3.0",
                  "originX": "center",
                  "originY": "center",
                  "left": 420,
                  "top": 120,
                  "width": 200,
                  "height": 132,
                  "text": "Pacote api\n- PedidoController (public)\n- PedidoMapper (package-private)\n- DTOs protegidos?",
                  "fontSize": 20,
                  "fontFamily": "Inter",
                  "fill": "#0f172a",
                  "textAlign": "left",
                  "fontWeight": "bold",
                  "charSpacing": 0,
                  "direction": "ltr",
                  "lineHeight": 1.3
                },
                {
                  "type": "textbox",
                  "version": "5.3.0",
                  "originX": "center",
                  "originY": "center",
                  "left": 620,
                  "top": 120,
                  "width": 200,
                  "height": 132,
                  "text": "Pacote infrastructure\n- PedidoRepositoryJpa (public)\n- EntityManagerConfig (protected hooks)\n- Adaptadores privados",
                  "fontSize": 20,
                  "fontFamily": "Inter",
                  "fill": "#0f172a",
                  "textAlign": "left",
                  "fontWeight": "bold",
                  "charSpacing": 0,
                  "direction": "ltr",
                  "lineHeight": 1.3
                },
                {
                  "type": "textbox",
                  "version": "5.3.0",
                  "originX": "center",
                  "originY": "center",
                  "left": 420,
                  "top": 320,
                  "width": 360,
                  "height": 108,
                  "text": "Ajuste as listas com as classes reais da dupla e revise quando cada visibilidade é necessária para manter o encapsulamento.",
                  "fontSize": 18,
                  "fontFamily": "Inter",
                  "fill": "#334155",
                  "textAlign": "center",
                  "fontWeight": "normal",
                  "charSpacing": 0,
                  "direction": "ltr",
                  "lineHeight": 1.4
                }
              ]
            }
          },
          {
            "id": "perguntas-guia",
            "label": "Perguntas orientadoras",
            "description": "Utilizem prompts para revisar dependências entre pacotes e justificar classes expostas ou ocultas.",
            "state": {
              "version": "5.3.0",
              "objects": [
                {
                  "type": "textbox",
                  "version": "5.3.0",
                  "originX": "center",
                  "originY": "center",
                  "left": 360,
                  "top": 140,
                  "width": 460,
                  "height": 72,
                  "text": "Quais classes ficam expostas para o módulo de API?\nQuais serviços precisam ser apenas package-private?",
                  "fontSize": 22,
                  "fontFamily": "Inter",
                  "fill": "#0f172a",
                  "textAlign": "center",
                  "fontWeight": "bold",
                  "charSpacing": 0,
                  "direction": "ltr",
                  "lineHeight": 1.4
                },
                {
                  "type": "textbox",
                  "version": "5.3.0",
                  "originX": "center",
                  "originY": "center",
                  "left": 360,
                  "top": 260,
                  "width": 460,
                  "height": 96,
                  "text": "Onde o uso de protected é justificável?\nExistem classes que poderiam ser privadas para evitar acoplamento acidental?",
                  "fontSize": 20,
                  "fontFamily": "Inter",
                  "fill": "#1f2937",
                  "textAlign": "center",
                  "fontWeight": "normal",
                  "charSpacing": 0,
                  "direction": "ltr",
                  "lineHeight": 1.4
                },
                {
                  "type": "textbox",
                  "version": "5.3.0",
                  "originX": "center",
                  "originY": "center",
                  "left": 360,
                  "top": 360,
                  "width": 460,
                  "height": 84,
                  "text": "Que contratos precisam ser estáveis para integrações externas?\nQuais camadas devem conhecer apenas interfaces públicas?",
                  "fontSize": 20,
                  "fontFamily": "Inter",
                  "fill": "#1f2937",
                  "textAlign": "center",
                  "fontWeight": "normal",
                  "charSpacing": 0,
                  "direction": "ltr",
                  "lineHeight": 1.4
                }
              ]
            }
          }
        ]
      }
    }
  ],
  "metadata": {
    "status": "in-review",
    "updatedAt": "2025-10-03T00:00:00.000Z",
    "owners": ["Prof. Tiago Sombra"],
    "sources": [
      "Plano de ensino LPOO 2025.2",
      "docs/governance/lesson-audit-plan.md – LPOO (2025.2)"
    ]
  }
}
