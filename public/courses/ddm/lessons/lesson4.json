{
  "id": "lesson4",
  "title": "Aula 4: Unidade I – Activities e Intents",
  "objective": "",
  "content": [
    {
      "type": "html",
      "html": "<!-- Seção da Aula 4 -->\n<section id=\"aula4\" class=\"mb-16 pt-16\">\n  <header class=\"mb-12 border-b pb-8\">\n    <h2 class=\"text-4xl font-bold text-slate-900\">\n      Aula 4: Unidade I – Componentes de UI\n    </h2>\n    <p class=\"text-lg text-slate-600 mt-2\">\n      Apresentar os principais componentes de interface gráfica no Android e\n      demonstrar como utilizá-los na construção de telas simples.\n    </p>\n  </header>\n\n  <div class=\"bg-white p-6 rounded-lg shadow-md mb-12\">\n    <h3 class=\"font-bold text-2xl text-slate-800 mb-4\">Plano de Voo da Aula</h3>\n    <ul class=\"list-disc list-inside space-y-2 text-slate-700\">\n      <li>\n        <strong>Recapitulação:</strong> O que são a pasta <code-text>res</code-text> e o arquivo\n        <code-text>activity_main.xml</code-text>?\n      </li>\n      <li>\n        <strong>Os Blocos de Construção da Interface:</strong> Introdução ao\n        conceito de <code-text>View</code-text>.\n      </li>\n      <li>\n        <strong>Análise dos Componentes Essenciais:</strong> Um olhar detalhado\n        sobre <code-text>TextView</code-text>, <code-text>EditText</code-text>, <code-text>Button</code-text>, <code-text>ImageView</code-text>, <code-text>CheckBox</code-text> e\n        <code-text>RadioButton</code-text>.\n      </li>\n      <li>\n        <strong>Atividade Prática:</strong> Mãos à obra! Vamos construir nossa\n        primeira interface de usuário no Android Studio.\n      </li>\n      <li>\n        <strong>Próximos Passos:</strong> Como daremos \"vida\" a esta interface\n        na próxima aula.\n      </li>\n      <li>\n        <strong>Tarefa (TED):</strong> Desafio para consolidar o aprendizado.\n      </li>\n    </ul>\n  </div>\n\n  <div id=\"views\" class=\"mb-16\">\n    <h3 class=\"text-3xl font-bold text-slate-800 mb-6\">\n      Os Blocos de Construção: O que é uma <code-text>View</code-text>?\n    </h3>\n    <div class=\"bg-white p-8 rounded-lg shadow-md\">\n      <p class=\"text-lg mb-4\">\n        No Android, todo componente de interface que você vê na tela é uma\n        subclasse de uma classe chamada <strong><code-text>View</code-text></strong>. Pense nas\n        <code-text>Views</code-text> como os \"blocos de Lego\" da nossa interface.\n      </p>\n      <p>\n        Um <code-text>TextView</code-text> (para mostrar texto) é um tipo de <code-text>View</code-text>. Um <code-text>Button</code-text>\n        (para cliques) é outro tipo de <code-text>View</code-text>. Um <code-text>EditText</code-text> (para inserir\n        texto) também é um tipo de <code-text>View</code-text>. Hoje, vamos aprender a usar alguns\n        desses blocos fundamentais para construir nossa primeira estrutura.\n      </p>\n    </div>\n  </div>\n\n  <div class=\"space-y-8 mb-16\">\n    <h3 class=\"text-3xl font-bold text-slate-800 mb-6\">\n      Componentes Essenciais de UI\n    </h3>\n\n    <!-- TextView -->\n    <div class=\"bg-white p-8 rounded-lg shadow-md\">\n      <h4 class=\"font-bold text-2xl text-slate-800 mb-2\">1. TextView</h4>\n      <p class=\"mb-4\">\n        <strong>O que é e para que serve?</strong> É o componente mais básico\n        para exibir texto na tela. Use-o para mostrar títulos, parágrafos,\n        rótulos e qualquer informação estática para o usuário.\n      </p>\n      <img\n        src=\"https://placehold.co/600x100/e0e7ff/3730a3?text=Este+é+um+TextView\"\n        alt=\"Exemplo de um TextView\"\n        class=\"my-4 rounded-lg shadow-sm mx-auto\"\n      />\n      <div class=\"code-block\">\n        <h5 class=\"mono\">&lt;-- Exemplo de TextView em XML --&gt;</h5>\n        <pre><code>&lt;TextView\n    android:id=\"@+id/textViewTitulo\"\n    android:layout_width=\"wrap_content\"\n    android:layout_height=\"wrap_content\"\n    android:text=\"Bem-vindo ao Meu App\"\n    android:textSize=\"24sp\"\n    android:textColor=\"@color/black\" /&gt;</code></pre>\n      </div>\n      <div class=\"callout callout-info\">\n        <h5 class=\"font-bold mb-2\">Atributos Importantes</h5>\n        <ul class=\"list-disc list-inside\">\n          <li>\n            <code>android:id=\"@+id/...\"</code>: Um identificador único para este\n            componente. É como o \"CPF\" da View, essencial para podermos\n            referenciá-la no código Kotlin mais tarde.\n          </li>\n          <li>\n            <code>android:layout_width</code> e\n            <code>android:layout_height</code>: Definem a largura e altura.\n            <code>wrap_content</code> faz o componente ter o tamanho exato do\n            seu conteúdo.\n          </li>\n          <li>\n            <code>android:text</code>: O texto que será exibido.\n            <strong>Boa prática:</strong> use referências a recursos de string\n            (<code>@string/meu_texto</code>) em vez de texto fixo.\n          </li>\n          <li>\n            <code>android:textSize</code>: O tamanho do texto (use a unidade\n            <code-text>sp</code-text> para escalabilidade).\n          </li>\n        </ul>\n        <p class=\"mt-4\">\n          Explore todos os atributos na\n          <a\n            href=\"https://developer.android.com/reference/android/widget/TextView\"\n            target=\"_blank\"\n            class=\"font-semibold underline\"\n            >documentação oficial do TextView</a\n          >.\n        </p>\n      </div>\n    </div>\n\n    <!-- EditText -->\n    <div class=\"bg-white p-8 rounded-lg shadow-md\">\n      <h4 class=\"font-bold text-2xl text-slate-800 mb-2\">2. EditText</h4>\n      <p class=\"mb-4\">\n        <strong>O que é e para que serve?</strong> É um campo de texto que\n        permite ao usuário inserir e editar informações. É a porta de entrada de\n        dados do seu aplicativo.\n      </p>\n      <img\n        src=\"https://placehold.co/600x100/e0e7ff/3730a3?text=Digite+seu+nome+aqui...\"\n        alt=\"Exemplo de um EditText\"\n        class=\"my-4 rounded-lg shadow-sm mx-auto\"\n      />\n      <div class=\"code-block\">\n        <h5 class=\"mono\">&lt;-- Exemplo de EditText em XML --&gt;</h5>\n        <pre><code>&lt;EditText\n    android:id=\"@+id/editTextNome\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"wrap_content\"\n    android:hint=\"Digite seu nome\"\n    android:inputType=\"textPersonName\" /&gt;</code></pre>\n      </div>\n      <div class=\"callout callout-info\">\n        <h5 class=\"font-bold mb-2\">Atributos Importantes</h5>\n        <ul class=\"list-disc list-inside\">\n          <li>\n            <code>android:layout_width=\"match_parent\"</code>: Faz o componente\n            ocupar toda a largura disponível do seu \"container\" pai.\n          </li>\n          <li>\n            <code>android:hint</code>: Mostra um texto de dica cinza claro que\n            desaparece quando o usuário começa a digitar. É uma ótima prática\n            para guiar o usuário.\n          </li>\n          <li>\n            <code>android:inputType</code>: Ajuda o sistema a otimizar o teclado\n            para o tipo de dado esperado (texto, número, email, senha, etc.),\n            melhorando a experiência do usuário.\n          </li>\n        </ul>\n        <p class=\"mt-4\">\n          Veja todos os tipos de input na\n          <a\n            href=\"https://developer.android.com/reference/android/widget/EditText\"\n            target=\"_blank\"\n            class=\"font-semibold underline\"\n            >documentação oficial do EditText</a\n          >.\n        </p>\n      </div>\n    </div>\n\n    <!-- Button -->\n    <div class=\"bg-white p-8 rounded-lg shadow-md\">\n      <h4 class=\"font-bold text-2xl text-slate-800 mb-2\">3. Button</h4>\n      <p class=\"mb-4\">\n        <strong>O que é e para que serve?</strong> É um componente que o usuário\n        pode pressionar para acionar uma ação. É o principal meio de interação\n        para executar comandos no app.\n      </p>\n      <img\n        src=\"https://placehold.co/600x100/e0e7ff/3730a3?text=CLIQUE+AQUI\"\n        alt=\"Exemplo de um Button\"\n        class=\"my-4 rounded-lg shadow-sm mx-auto\"\n      />\n      <div class=\"code-block\">\n        <h5 class=\"mono\">&lt;-- Exemplo de Button em XML --&gt;</h5>\n        <pre><code>&lt;Button\n    android:id=\"@+id/buttonConfirmar\"\n    android:layout_width=\"wrap_content\"\n    android:layout_height=\"wrap_content\"\n    android:text=\"Confirmar\" /&gt;</code></pre>\n      </div>\n      <div class=\"callout callout-info\">\n        <h5 class=\"font-bold mb-2\">Atributos Importantes</h5>\n        <ul class=\"list-disc list-inside\">\n          <li>\n            <code>android:text</code>: O texto que aparece dentro do botão.\n          </li>\n          <li>\n            A principal função do botão é responder a cliques, o que faremos na\n            próxima aula usando um <code-text>setOnClickListener</code-text> no nosso código Kotlin.\n          </li>\n        </ul>\n        <p class=\"mt-4\">\n          Saiba mais na\n          <a\n            href=\"https://developer.android.com/reference/android/widget/Button\"\n            target=\"_blank\"\n            class=\"font-semibold underline\"\n            >documentação oficial do Button</a\n          >.\n        </p>\n      </div>\n    </div>\n\n    <!-- ImageView -->\n    <div class=\"bg-white p-8 rounded-lg shadow-md\">\n      <h4 class=\"font-bold text-2xl text-slate-800 mb-2\">4. ImageView</h4>\n      <p class=\"mb-4\">\n        <strong>O que é e para que serve?</strong> É o componente utilizado para\n        exibir imagens, como fotos, ícones e outras mídias visuais. As imagens\n        devem ser colocadas na pasta <code-text>res/drawable</code-text>.\n      </p>\n      <img\n        src=\"https://placehold.co/200x200/e0e7ff/3730a3?text=ImageView\"\n        alt=\"Exemplo de um ImageView\"\n        class=\"my-4 rounded-lg shadow-sm mx-auto\"\n      />\n      <div class=\"code-block\">\n        <h5 class=\"mono\">&lt;-- Exemplo de ImageView em XML --&gt;</h5>\n        <pre><code>&lt;ImageView\n    android:id=\"@+id/imageViewLogo\"\n    android:layout_width=\"100dp\"\n    android:layout_height=\"100dp\"\n    android:src=\"@drawable/ic_logo\"\n    android:contentDescription=\"@string/descricao_logo\" /&gt;</code></pre>\n      </div>\n      <div class=\"callout callout-info\">\n        <h5 class=\"font-bold mb-2\">Atributos Importantes</h5>\n        <ul class=\"list-disc list-inside\">\n          <li>\n            <code>android:src</code>: Especifica a imagem a ser exibida,\n            geralmente referenciando um arquivo na pasta <code-text>drawable</code-text>.\n          </li>\n          <li>\n            <code>android:contentDescription</code>: Texto descritivo para\n            acessibilidade. É lido por leitores de tela para usuários com\n            deficiência visual. <strong>É uma prática essencial!</strong>\n          </li>\n          <li>\n            <code>android:scaleType</code>: Controla como a imagem é\n            redimensionada para caber no espaço do <code-text>ImageView</code-text> (ex:\n            <code-text>centerCrop</code-text>, <code-text>fitCenter</code-text>).\n          </li>\n        </ul>\n        <p class=\"mt-4\">\n          Explore mais na\n          <a\n            href=\"https://developer.android.com/reference/android/widget/ImageView\"\n            target=\"_blank\"\n            class=\"font-semibold underline\"\n            >documentação oficial do ImageView</a\n          >.\n        </p>\n      </div>\n    </div>\n\n    <!-- CheckBox -->\n    <div class=\"bg-white p-8 rounded-lg shadow-md\">\n      <h4 class=\"font-bold text-2xl text-slate-800 mb-2\">5. CheckBox</h4>\n      <p class=\"mb-4\">\n        <strong>O que é e para que serve?</strong> É um tipo de botão de duas\n        opções que pode ser marcado ou desmarcado. Ideal para situações onde o\n        usuário pode selecionar múltiplas opções de uma lista.\n      </p>\n      <img\n        src=\"https://placehold.co/600x100/e0e7ff/3730a3?text=☐+Aceito+os+termos\"\n        alt=\"Exemplo de um CheckBox\"\n        class=\"my-4 rounded-lg shadow-sm mx-auto\"\n      />\n      <div class=\"code-block\">\n        <h5 class=\"mono\">&lt;-- Exemplo de CheckBox em XML --&gt;</h5>\n        <pre><code>&lt;CheckBox\n    android:id=\"@+id/checkboxTermos\"\n    android:layout_width=\"wrap_content\"\n    android:layout_height=\"wrap_content\"\n    android:text=\"Aceito os termos e condições\" /&gt;</code></pre>\n      </div>\n      <div class=\"callout callout-info\">\n        <h5 class=\"font-bold mb-2\">Atributos Importantes</h5>\n        <ul class=\"list-disc list-inside\">\n          <li>\n            <code>android:checked</code>: Pode ser definido como <code-text>true</code-text> ou\n            <code-text>false</code-text> para determinar se a caixa já começa marcada.\n          </li>\n          <li>\n            No código Kotlin, podemos verificar se um <code-text>CheckBox</code-text> está marcado\n            usando a propriedade <code-text>isChecked</code-text>.\n          </li>\n        </ul>\n        <p class=\"mt-4\">\n          Veja mais detalhes na\n          <a\n            href=\"https://developer.android.com/reference/android/widget/CheckBox\"\n            target=\"_blank\"\n            class=\"font-semibold underline\"\n            >documentação oficial do CheckBox</a\n          >.\n        </p>\n      </div>\n    </div>\n\n    <!-- RadioButton e RadioGroup -->\n    <div class=\"bg-white p-8 rounded-lg shadow-md\">\n      <h4 class=\"font-bold text-2xl text-slate-800 mb-2\">\n        6. RadioButton e RadioGroup\n      </h4>\n      <p class=\"mb-4\">\n        <strong>O que é e para que serve?</strong> <code-text>RadioButton</code-text> é um botão de\n        duas opções (marcado ou desmarcado). A sua principal característica é\n        que, quando usado dentro de um <code-text>RadioGroup</code-text>, apenas uma opção pode ser\n        selecionada por vez. Perfeito para perguntas de escolha única.\n      </p>\n      <img\n        src=\"https://placehold.co/600x150/e0e7ff/3730a3?text=Qual+o+seu+gênero?%0A(•)+Masc+O+Fem\"\n        alt=\"Exemplo de RadioButtons\"\n        class=\"my-4 rounded-lg shadow-sm mx-auto\"\n      />\n      <div class=\"code-block\">\n        <h5 class=\"mono\">&lt;-- Exemplo de RadioGroup em XML --&gt;</h5>\n        <pre><code>&lt;RadioGroup\n    android:id=\"@+id/radioGroupGenero\"\n    android:layout_width=\"wrap_content\"\n    android:layout_height=\"wrap_content\"&gt;\n\n    &lt;RadioButton\n        android:id=\"@+id/radioButtonMasc\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:text=\"Masculino\" /&gt;\n\n    &lt;RadioButton\n        android:id=\"@+id/radioButtonFem\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:text=\"Feminino\" /&gt;\n\n&lt;/RadioGroup&gt;</code></pre>\n      </div>\n      <div class=\"callout callout-info\">\n        <h5 class=\"font-bold mb-2\">Atributos Importantes</h5>\n        <ul class=\"list-disc list-inside\">\n          <li>\n            <code>RadioGroup</code>: É o \"container\" invisível que agrupa os\n            <code-text>RadioButton</code-text> e garante que apenas um deles possa ser selecionado.\n          </li>\n          <li>\n            <code>android:orientation</code>: Pode ser definido no <code-text>RadioGroup</code-text>\n            como <code-text>vertical</code-text> (padrão) ou <code-text>horizontal</code-text> para alinhar os botões.\n          </li>\n        </ul>\n        <p class=\"mt-4\">\n          Leia mais na\n          <a\n            href=\"https://developer.android.com/guide/topics/ui/controls/radiobutton\"\n            target=\"_blank\"\n            class=\"font-semibold underline\"\n            >documentação oficial sobre Radio Buttons</a\n          >.\n        </p>\n      </div>\n    </div>\n  </div>\n\n  <div id=\"atividade-pratica\" class=\"mb-16\">\n    <h3 class=\"text-3xl font-bold text-slate-800 mb-6\">\n      Atividade Prática: Construindo a Primeira Interface\n    </h3>\n    <div class=\"bg-white p-8 rounded-lg shadow-md\">\n      <p class=\"mb-4\">\n        Vamos aplicar o que aprendemos! Abra o projeto \"Olá, Mundo!\" da aula\n        anterior e siga os passos para construir a interface da nossa tarefa\n        (TED).\n      </p>\n      <ol class=\"list-decimal list-inside space-y-4 mt-6\">\n        <li>\n          Abra o arquivo <code>res/layout/activity_main.xml</code>. Se ele abrir\n          no modo \"Design\", mude para a visão \"Code\" ou \"Split\" no canto\n          superior direito.\n        </li>\n        <li>\n          Apague o <code>&lt;TextView&gt;</code> existente que mostra \"Hello\n          World!\".\n        </li>\n        <li>\n          Dentro do\n          <code>&lt;androidx.constraintlayout.widget.ConstraintLayout&gt;</code>\n          (ou outro layout que estiver lá), adicione um <code>TextView</code>,\n          um <code>EditText</code> e um <code>Button</code>.\n        </li>\n        <li>\n          Configure os atributos de cada um conforme o código abaixo. Preste\n          atenção especial aos IDs e às constraints\n          (<code>app:layout_...</code>), que posicionam os elementos na tela.\n        </li>\n      </ol>\n      <div class=\"code-block mt-6\">\n        <h5 class=\"mono\">&lt;-- Código Final para activity_main.xml --&gt;</h5>\n        <pre><code>&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;\n&lt;androidx.constraintlayout.widget.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n    xmlns:tools=\"http://schemas.android.com/tools\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    tools:context=\".MainActivity\"&gt;\n\n    &lt;TextView\n        android:id=\"@+id/textViewLabel\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:layout_marginTop=\"128dp\"\n        android:text=\"Por favor, digite seu nome abaixo:\"\n        android:textSize=\"18sp\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintTop_toTopOf=\"parent\" /&gt;\n\n    &lt;EditText\n        android:id=\"@+id/editTextNome\"\n        android:layout_width=\"0dp\"\n        android:layout_height=\"wrap_content\"\n        android:layout_marginStart=\"32dp\"\n        android:layout_marginTop=\"16dp\"\n        android:layout_marginEnd=\"32dp\"\n        android:hint=\"Seu nome\"\n        android:inputType=\"textPersonName\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintTop_toBottomOf=\"@+id/textViewLabel\" /&gt;\n\n    &lt;Button\n        android:id=\"@+id/buttonSaudacao\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:layout_marginTop=\"24dp\"\n        android:text=\"Exibir Mensagem\"\n        app:layout_constraintEnd_toEndOf=\"parent\"\n        app:layout_constraintStart_toStartOf=\"parent\"\n        app:layout_constraintTop_toBottomOf=\"@+id/editTextNome\" /&gt;\n\n&lt;/androidx.constraintlayout.widget.ConstraintLayout&gt;</code></pre>\n      </div>\n    </div>\n  </div>\n\n  <div id=\"tarefa-aula4\" class=\"mb-16\">\n    <h3 class=\"text-3xl font-bold text-slate-800 mb-6\">\n      Encerramento e Próximos Passos\n    </h3>\n    <div class=\"callout callout-info\">\n      <h5 class=\"font-bold mb-2\">Ponte para a Aula 5</h5>\n      <p>\n        Parabéns! Vocês construíram a primeira interface de usuário. Se executar\n        o app agora, verá os componentes na tela, mas o botão não faz nada. A\n        nossa interface está \"sem vida\". Na próxima aula sobre\n        <strong>Manipulação de Eventos</strong>, vamos entrar no arquivo\n        <code>MainActivity.kt</code> e escrever o código Kotlin para \"ouvir\" o\n        clique do botão e fazer a mágica acontecer!\n      </p>\n    </div>\n    <div class=\"callout callout-task\">\n      <h5 class=\"font-bold mb-2\">Tarefa para a próxima aula (TED)</h5>\n      <p class=\"mb-4\">\n        O desafio é replicar e consolidar o que fizemos hoje. Esta tarefa é a\n        base para a nossa próxima aula prática.\n      </p>\n      <ol class=\"list-decimal list-inside space-y-2\">\n        <li>\n          No seu projeto do Android Studio, crie a interface com\n          <code>TextView</code>, <code>EditText</code> e <code>Button</code>,\n          exatamente como fizemos na atividade prática.\n        </li>\n        <li>\n          Execute o aplicativo no emulador ou no seu dispositivo físico para\n          garantir que a interface aparece corretamente.\n        </li>\n        <li>\n          Tire um print (captura de tela) da sua aplicação em execução e submeta\n          no Moodle.\n        </li>\n      </ol>\n    </div>\n    <div class=\"bg-white p-6 rounded-lg shadow-md mt-8\">\n      <h4 class=\"font-bold text-xl text-slate-800 mb-4\">\n        Bibliografia Recomendada\n      </h4>\n      <ul class=\"list-disc list-inside space-y-2\">\n        <li>\n          SIMAS, V. L. et al.\n          <strong>Desenvolvimento para Dispositivos Móveis – Volume 2</strong>.\n          Grupo A, 2019.\n        </li>\n        <li>\n          OLIVEIRA, Diego Bittencourt de et al.\n          <strong>Desenvolvimento para Dispositivos Móveis</strong>. SAGAH,\n          2019. v. 1.\n        </li>\n      </ul>\n    </div>\n  </div>\n</section>\n"
    }
  ]
}