{
  "id": "lesson12",
  "title": "Aula 12: Marketing",
  "objective": "",
  "content": [
    {
      "type": "html",
      "html": "<!DOCTYPE html>\n<html lang=\"pt-BR\" class=\"scroll-smooth\">\n  <head>\n    <!-- Meta essenciais -->\n    <meta charset=\"UTF-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>TDJD - Aula 12: Input System na Unity (C#)</title>\n    <meta\n      name=\"description\"\n      content=\"Unidade III – Programação com C# para Games. Mapeie ações (teclado/mouse/gamepad), leia entradas via script e conecte Action Maps ao controle do personagem.\"\n    />\n    <meta name=\"author\" content=\"Prof. Tiago Guimarães Sombra\" />\n    <meta\n      name=\"keywords\"\n      content=\"Unity, C#, Input System, PlayerInput, Action Map, Teclado, Gamepad, Movimento, Interação\"\n    />\n\n    <!-- Open Graph / Twitter (ajuste a URL de publicação) -->\n    <meta property=\"og:type\" content=\"website\" />\n    <meta property=\"og:url\" content=\"https://SEU-DOMINIO/aula12.html\" />\n    <meta\n      property=\"og:title\"\n      content=\"TDJD - Aula 12: Input System na Unity (C#)\"\n    />\n    <meta\n      property=\"og:description\"\n      content=\"Configuração do Input System e leitura de ações do jogador via C# para movimentação e interação.\"\n    />\n    <meta\n      property=\"og:image\"\n      content=\"https://placehold.co/1200x630/0ea5e9/ffffff?text=TDJD%20Aula%2012\"\n    />\n    <meta property=\"twitter:card\" content=\"summary_large_image\" />\n\n    <!-- Tailwind / fontes / ícones -->\n    <script src=\"https://cdn.tailwindcss.com?plugins=typography\"></script>\n    <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\" />\n    <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin />\n    <link\n      href=\"https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap\"\n      rel=\"stylesheet\"\n    />\n    <link\n      rel=\"stylesheet\"\n      href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.2/css/all.min.css\"\n    />\n\n    <!-- Estilos -->\n    <style>\n      :root {\n        color-scheme: light;\n      }\n      body {\n        font-family: \"Inter\", system-ui, -apple-system, Segoe UI, Roboto,\n          sans-serif;\n        background: #f8fafc;\n        padding-top: 60px;\n      }\n      .callout {\n        border-left-width: 4px;\n        padding: 1.25rem;\n        margin: 1.25rem 0;\n        border-radius: 0.5rem;\n      }\n      .callout-info {\n        background: #ecfeff;\n        border-color: #67e8f9;\n        color: #0e7490;\n      }\n      .callout-practice {\n        background: #ecfdf5;\n        border-color: #6ee7b7;\n        color: #065f46;\n      }\n      .callout-warning {\n        background: #fff7ed;\n        border-color: #fdba74;\n        color: #9a3412;\n      }\n      .aspect-video {\n        position: relative;\n        padding-bottom: 56.25%;\n        height: 0;\n        overflow: hidden;\n      }\n      .aspect-video iframe {\n        position: absolute;\n        inset: 0;\n        width: 100%;\n        height: 100%;\n        border: 0;\n      }\n      .code-block-wrapper {\n        position: relative;\n      }\n      .copy-code-button {\n        position: absolute;\n        top: 0.5rem;\n        right: 0.5rem;\n        background: #334155;\n        color: #fff;\n        border: none;\n        padding: 0.25rem 0.5rem;\n        border-radius: 0.25rem;\n        font-size: 0.75rem;\n        cursor: pointer;\n      }\n      .copy-code-button:hover {\n        background: #1f2937;\n      }\n      .video-card {\n        display: flex;\n        flex-direction: column;\n        height: 100%;\n      }\n    </style>\n  </head>\n\n  <body class=\"text-slate-800\">\n    <!-- Navbar -->\n    <nav\n      class=\"bg-white/80 backdrop-blur-md shadow-sm fixed top-0 left-0 right-0 z-50\"\n      role=\"navigation\"\n      aria-label=\"Navegação principal\"\n    >\n      <div class=\"container mx-auto px-6\">\n        <div class=\"flex justify-between items-center h-16\">\n          <span class=\"text-lg font-bold text-cyan-700\">TDJD - Aula 12</span>\n          <div class=\"hidden md:flex space-x-4 text-sm font-semibold\">\n            <a href=\"#plano-aula\" class=\"hover:text-cyan-600\">Plano</a>\n            <a href=\"#introducao\" class=\"hover:text-cyan-600\">Introdução</a>\n            <a href=\"#comparativo\" class=\"hover:text-cyan-600\">Comparativo</a>\n            <a href=\"#setup\" class=\"hover:text-cyan-600\">Setup</a>\n            <a href=\"#action-map\" class=\"hover:text-cyan-600\">Action Map</a>\n            <a href=\"#padroes-codigo\" class=\"hover:text-cyan-600\">Código</a>\n            <a href=\"#checklist\" class=\"hover:text-cyan-600\">Checklist</a>\n            <a href=\"#control-schemes\" class=\"hover:text-cyan-600\">Esquemas</a>\n            <a href=\"#rebinding\" class=\"hover:text-cyan-600\">Rebinding</a>\n            <a href=\"#ui-input\" class=\"hover:text-cyan-600\">UI</a>\n            <a href=\"#local-multiplayer\" class=\"hover:text-cyan-600\"\n              >Local MP</a\n            >\n            <a href=\"#videos\" class=\"hover:text-cyan-600\">Vídeos</a>\n            <a href=\"#tarefa\" class=\"hover:text-cyan-600\">TED</a>\n            <a href=\"#recursos\" class=\"hover:text-cyan-600\">Recursos</a>\n          </div>\n        </div>\n      </div>\n    </nav>\n\n    <!-- Header -->\n    <header class=\"bg-slate-800 shadow-md relative\">\n      <div\n        class=\"w-full h-48 bg-gradient-to-r from-cyan-700 to-sky-900 opacity-80\"\n      ></div>\n      <div\n        class=\"container mx-auto px-6 py-8 absolute bottom-0 left-0 right-0 bg-gradient-to-t from-slate-900/70 to-transparent\"\n      >\n        <h1 class=\"text-4xl font-bold text-white\">\n          Aula 12: Input System na Unity (C#)\n        </h1>\n        <p class=\"text-xl text-slate-300 mt-2\">\n          Unidade III – Programação com C# para Games\n        </p>\n      </div>\n    </header>\n\n    <!-- Main -->\n    <main class=\"container mx-auto px-6 py-10\" role=\"main\">\n      <!-- Plano -->\n      <section\n        id=\"plano-aula\"\n        class=\"mb-12 bg-cyan-50 border border-cyan-200 p-8 rounded-2xl shadow-lg\"\n      >\n        <h2 class=\"text-3xl font-bold text-cyan-700 mb-6 text-center\">\n          Plano da Aula\n        </h2>\n        <div class=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n          <div class=\"bg-white p-6 rounded-lg shadow-sm\">\n            <h3 class=\"font-semibold text-lg text-cyan-800 mb-2\">\n              <i class=\"fa-solid fa-book-open mr-2\"></i>CONTEÚDO\n            </h3>\n            <p class=\"text-sm text-slate-600\">\n              Input System na prática: Action Maps, bindings\n              (teclado/mouse/gamepad), leitura de eventos via C# e vínculo com o\n              personagem.\n            </p>\n          </div>\n          <div class=\"bg-white p-6 rounded-lg shadow-sm\">\n            <h3 class=\"font-semibold text-lg text-cyan-800 mb-2\">\n              <i class=\"fa-solid fa-bullseye mr-2\"></i>OBJETIVO\n            </h3>\n            <p class=\"text-sm text-slate-600\">\n              Configurar e usar o Input System para capturar ações do jogador e\n              acionar comportamentos de movimento e interação via script.\n            </p>\n          </div>\n          <div class=\"bg-white p-6 rounded-lg shadow-sm\">\n            <h3 class=\"font-semibold text-lg text-cyan-800 mb-2\">\n              <i class=\"fa-solid fa-gears mr-2\"></i>METODOLOGIA\n            </h3>\n            <p class=\"text-sm text-slate-600\">\n              Aula prática guiada + pair programming (projeto incremental).\n            </p>\n          </div>\n        </div>\n      </section>\n\n      <!-- Introdução -->\n      <section id=\"introducao\" class=\"mb-12 bg-white p-8 rounded-lg shadow\">\n        <h2 class=\"text-3xl font-semibold text-slate-800 mb-4\">\n          Por que o Input System?\n        </h2>\n        <p class=\"text-slate-700 leading-relaxed\">\n          O <strong>Input System</strong> unifica teclado, mouse, gamepad e\n          toques em um só fluxo de trabalho. Em vez de ler teclas soltas,\n          definimos <em>Ações</em> (ex.: <code>Move</code>, <code>Jump</code>,\n          <code>Interact</code>) e mapeamos diferentes dispositivos para cada\n          uma. Isso facilita remapeamento, suporte a múltiplos joysticks e\n          testes.\n        </p>\n        <blockquote\n          class=\"text-lg italic text-slate-600 border-l-4 border-cyan-300 pl-4 mt-4\"\n        >\n          “O Input System desacopla a intenção do jogador do hardware,\n          permitindo incluir novos dispositivos sem reescrever a lógica de\n          jogo.”\n        </blockquote>\n      </section>\n\n      <!-- Comparativo (do Gemini, integrado) -->\n      <section id=\"comparativo\" class=\"mb-12\">\n        <h2\n          class=\"text-3xl font-semibold text-slate-800 border-b-2 border-cyan-500 pb-2 mb-8\"\n        >\n          <i class=\"fa-solid fa-right-left mr-2\"></i>Input Manager (antigo) ×\n          Input System (novo)\n        </h2>\n        <div class=\"bg-white p-8 rounded-lg shadow overflow-x-auto\">\n          <table class=\"min-w-full text-left text-sm\">\n            <thead class=\"bg-cyan-50 text-cyan-800\">\n              <tr>\n                <th class=\"p-3 font-semibold\">Característica</th>\n                <th class=\"p-3 font-semibold\">Input Manager</th>\n                <th class=\"p-3 font-semibold\">Input System</th>\n              </tr>\n            </thead>\n            <tbody class=\"divide-y\">\n              <tr>\n                <td class=\"p-3 font-medium\">Abordagem</td>\n                <td class=\"p-3\">Eixos/strings</td>\n                <td class=\"p-3\">Ações/objetos</td>\n              </tr>\n              <tr>\n                <td class=\"p-3 font-medium\">Configuração</td>\n                <td class=\"p-3\">Project Settings</td>\n                <td class=\"p-3\">Asset visual (Action Maps)</td>\n              </tr>\n              <tr>\n                <td class=\"p-3 font-medium\">Dispositivos</td>\n                <td class=\"p-3\">Limitado</td>\n                <td class=\"p-3\">Amplo (gamepads, touch, etc.)</td>\n              </tr>\n              <tr>\n                <td class=\"p-3 font-medium\">Remapeamento</td>\n                <td class=\"p-3\">Manual e complexo</td>\n                <td class=\"p-3\">Nativo</td>\n              </tr>\n              <tr>\n                <td class=\"p-3 font-medium\">Leitura</td>\n                <td class=\"p-3\">Polling no <code>Update</code></td>\n                <td class=\"p-3\">Eventos + polling quando necessário</td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </section>\n\n      <!-- Setup (merge dos dois) -->\n      <section id=\"setup\" class=\"mb-12\">\n        <h2\n          class=\"text-3xl font-semibold text-slate-800 border-b-2 border-cyan-500 pb-2 mb-8\"\n        >\n          <i class=\"fa-solid fa-screwdriver-wrench mr-2\"></i>Configuração rápida\n        </h2>\n        <div class=\"bg-white p-8 rounded-lg shadow space-y-4\">\n          <ol class=\"list-decimal list-inside space-y-2 text-slate-700\">\n            <li>Projeto Unity URP aberto.</li>\n            <li>\n              Instale o pacote <strong>Input System</strong> via Package\n              Manager.\n            </li>\n            <li>\n              Ative em\n              <em\n                >Edit &gt; Project Settings &gt; Player &gt; Active Input\n                Handling</em\n              >: <strong>Input System Package (New)</strong> ou\n              <strong>Both</strong>.\n            </li>\n            <li>\n              No <em>Project</em>:\n              <em>Create &gt; Input Actions</em> (<code>PlayerControls</code>).\n            </li>\n            <li>\n              No asset: crie o <strong>Action Map</strong>\n              <code>Player</code> com <code>Move (Vector2)</code>,\n              <code>Jump (Button)</code>, <code>Interact (Button)</code>.\n            </li>\n            <li>\n              Bindings (sugestão): <code>Move</code> → WASD/Setas/Left Stick;\n              <code>Jump</code> → Space + South Button; <code>Interact</code> →\n              E + West Button.\n            </li>\n            <li>\n              Marque\n              <strong>Generate C# Class</strong>\n              (<code>PlayerControls.cs</code>) e clique <em>Save Asset</em>.\n            </li>\n          </ol>\n          <div class=\"callout callout-info\" role=\"note\">\n            <strong>Reinício do editor</strong>: ao alternar o backend de input,\n            o Unity reinicia para aplicar o novo sistema em todo o editor e no\n            runtime.\n          </div>\n          <div class=\"callout callout-warning\" role=\"note\">\n            <strong>Erros comuns</strong>: esquecer de salvar o asset; não\n            habilitar o mapa com <code>Enable()</code>; colisor sem\n            <em>Is Trigger</em> para interações por área.\n          </div>\n        </div>\n      </section>\n\n      <!-- Action Map + Matriz + passos detalhados -->\n      <section id=\"action-map\" class=\"mb-12\">\n        <h2\n          class=\"text-3xl font-semibold text-slate-800 border-b-2 border-cyan-500 pb-2 mb-8\"\n        >\n          <i class=\"fa-solid fa-map mr-2\"></i>Mapa de Ações (sugestão)\n        </h2>\n        <div class=\"bg-white p-8 rounded-lg shadow space-y-6\">\n          <div class=\"overflow-x-auto\">\n            <table class=\"min-w-full text-left text-sm\">\n              <thead class=\"bg-cyan-50 text-cyan-800\">\n                <tr>\n                  <th class=\"p-2 font-semibold\">Action</th>\n                  <th class=\"p-2 font-semibold\">Tipo</th>\n                  <th class=\"p-2 font-semibold\">Bindings (Teclado/Mouse)</th>\n                  <th class=\"p-2 font-semibold\">Bindings (Gamepad)</th>\n                  <th class=\"p-2 font-semibold\">Uso no jogo</th>\n                </tr>\n              </thead>\n              <tbody class=\"divide-y\">\n                <tr>\n                  <td class=\"p-2 font-medium\">Move</td>\n                  <td class=\"p-2\">Value / Vector2</td>\n                  <td class=\"p-2\">WASD / Setas (2D Vector Composite)</td>\n                  <td class=\"p-2\">Left Stick</td>\n                  <td class=\"p-2\">Direção (X/Z) do personagem</td>\n                </tr>\n                <tr>\n                  <td class=\"p-2 font-medium\">Jump</td>\n                  <td class=\"p-2\">Button</td>\n                  <td class=\"p-2\">Espaço</td>\n                  <td class=\"p-2\">South Button (A/✕)</td>\n                  <td class=\"p-2\">Pular</td>\n                </tr>\n                <tr>\n                  <td class=\"p-2 font-medium\">Interact</td>\n                  <td class=\"p-2\">Button</td>\n                  <td class=\"p-2\">E</td>\n                  <td class=\"p-2\">West Button (X/□)</td>\n                  <td class=\"p-2\">Ativar/Coletar/Usar</td>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n\n          <div>\n            <h3 class=\"text-lg font-semibold text-cyan-800 mb-2\">\n              Passos rápidos para o <code>Move</code> (Composite 2D)\n            </h3>\n            <ol\n              class=\"list-decimal list-inside text-sm text-slate-700 space-y-1\"\n            >\n              <li>\n                No Action Map <strong>Player</strong>, crie a Action\n                <code>Move</code> com <em>Action Type: Value</em> e\n                <em>Control Type: Vector2</em>.\n              </li>\n              <li>\n                Adicione um <em>Add 2D Vector Composite</em> e nomeie\n                <code>WASD</code>.\n              </li>\n              <li>\n                Configure: <em>Up=W</em>, <em>Down=S</em>, <em>Left=A</em>,\n                <em>Right=D</em>. Adicione outro composite para setas, se\n                quiser.\n              </li>\n              <li>Adicione binding de <em>Left Stick [Gamepad]</em>.</li>\n              <li>Salve o asset (<em>Save Asset</em>).</li>\n            </ol>\n          </div>\n\n          <div class=\"callout callout-practice\" role=\"note\">\n            <strong>UX de controle</strong>: deixe pulo em Space/South Button e\n            ações frequentes em botões confortáveis; planeje remapeamento\n            depois.\n          </div>\n        </div>\n      </section>\n\n      <section id=\"control-schemes\" class=\"mb-12\">\n        <h2\n          class=\"text-3xl font-semibold text-slate-800 border-b-2 border-cyan-500 pb-2 mb-8\"\n        >\n          <i class=\"fa-solid fa-gamepad mr-2\"></i>Control Schemes & Auto-Switch\n        </h2>\n        <div class=\"bg-white p-8 rounded-lg shadow space-y-4 text-slate-700\">\n          <p>\n            Separe dispositivos em <strong>Control Schemes</strong> (ex.:\n            <em>Keyboard&Mouse</em> e <em>Gamepad</em>) no asset de\n            <em>Input Actions</em>. O <strong>PlayerInput</strong> pode alternar\n            automaticamente o esquema conforme o último dispositivo usado.\n          </p>\n          <div class=\"overflow-x-auto\">\n            <table class=\"min-w-full text-left text-sm\">\n              <thead class=\"bg-cyan-50 text-cyan-800\">\n                <tr>\n                  <th class=\"p-2 font-semibold\">Esquema</th>\n                  <th class=\"p-2 font-semibold\">Dispositivos</th>\n                  <th class=\"p-2 font-semibold\">Uso</th>\n                </tr>\n              </thead>\n              <tbody class=\"divide-y\">\n                <tr>\n                  <td class=\"p-2 font-medium\">Keyboard&Mouse</td>\n                  <td class=\"p-2\">Keyboard, Mouse</td>\n                  <td class=\"p-2\">PC/Desktop</td>\n                </tr>\n                <tr>\n                  <td class=\"p-2 font-medium\">Gamepad</td>\n                  <td class=\"p-2\">XInput/DualShock/DualSense</td>\n                  <td class=\"p-2\">Console/PC com controle</td>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n          <div class=\"code-block-wrapper\">\n            <button\n              class=\"copy-code-button\"\n              onclick=\"copiarCodigo(this, 'codigo-autoswitch')\"\n            >\n              Copiar\n            </button>\n            <pre\n              class=\"bg-slate-900 text-slate-100 p-4 rounded-lg text-sm overflow-x-auto\"\n            ><code id=\"codigo-autoswitch\">using UnityEngine;\nusing UnityEngine.InputSystem;\n\n[RequireComponent(typeof(PlayerInput))]\npublic class SchemeIndicator : MonoBehaviour\n{\n    private PlayerInput pi;\n    void Awake() { pi = GetComponent&lt;PlayerInput&gt;(); }\n    void OnEnable() { pi.onControlsChanged += OnControlsChanged; }\n    void OnDisable() { pi.onControlsChanged -= OnControlsChanged; }\n\n    private void OnControlsChanged(PlayerInput _)\n    {\n        Debug.Log(\"Esquema ativo: \" + pi.currentControlScheme); // \"Keyboard&Mouse\" ou \"Gamepad\"\n    }\n}</code></pre>\n          </div>\n        </div>\n      </section>\n\n      <section id=\"rebinding\" class=\"mb-12\">\n        <h2\n          class=\"text-3xl font-semibold text-slate-800 border-b-2 border-cyan-500 pb-2 mb-8\"\n        >\n          <i class=\"fa-solid fa-arrows-rotate mr-2\"></i>Remapeamento (Rebinding)\n          com persistência\n        </h2>\n        <div class=\"bg-white p-8 rounded-lg shadow space-y-4 text-slate-700\">\n          <p>\n            Permita ao jogador alterar bindings em runtime e salvar preferências\n            localmente.\n          </p>\n          <div class=\"code-block-wrapper\">\n            <button\n              class=\"copy-code-button\"\n              onclick=\"copiarCodigo(this, 'codigo-rebind')\"\n            >\n              Copiar\n            </button>\n            <pre\n              class=\"bg-slate-900 text-slate-100 p-4 rounded-lg text-sm overflow-x-auto\"\n            ><code id=\"codigo-rebind\">using UnityEngine;\nusing UnityEngine.InputSystem;\nusing UnityEngine.InputSystem.Utilities;\n\npublic class SimpleRebind : MonoBehaviour\n{\n    public InputActionAsset actions; // arraste o asset (PlayerControls)\n    public string actionPath = \"Player/Jump\"; // Action que será remapeada\n\n    private InputAction GetAction() => actions.FindAction(actionPath, throwIfNotFound:true);\n\n    void Awake()\n    {\n        // Carrega overrides salvos (se houver)\n        var json = PlayerPrefs.GetString(\"rebinds\", \"\");\n        if (!string.IsNullOrEmpty(json)) actions.LoadBindingOverridesFromJson(json);\n    }\n\n    public void StartRebind()\n    {\n        var action = GetAction();\n        action.Disable();\n        action.PerformInteractiveRebinding()\n              .WithControlsExcluding(\"&lt;Mouse&gt;/position\")\n              .WithCancelingThrough(\"&lt;Keyboard&gt;/escape\")\n              .OnComplete(op =&gt; { action.Enable(); op.Dispose(); Save(); Debug.Log(\"Rebind concluído: \" + action.bindings[action.GetBindingIndexForControl(action.controls[0])].effectivePath); })\n              .Start();\n    }\n\n    private void Save()\n    {\n        var json = actions.SaveBindingOverridesAsJson();\n        PlayerPrefs.SetString(\"rebinds\", json);\n    }\n}</code></pre>\n          </div>\n        </div>\n      </section>\n\n      <!-- Padrões de código -->\n      <section id=\"padroes-codigo\" class=\"mb-12\">\n        <h2\n          class=\"text-3xl font-semibold text-slate-800 border-b-2 border-cyan-500 pb-2 mb-8\"\n        >\n          <i class=\"fa-solid fa-code mr-2\"></i>Padrões de leitura no C#\n        </h2>\n\n        <!-- Padrão A -->\n        <div class=\"bg-white p-8 rounded-lg shadow space-y-3 mb-8\">\n          <h3 class=\"text-xl font-semibold text-cyan-800\">\n            Padrão A — Classe gerada + <em>polling</em> no Update + eventos\n          </h3>\n          <p class=\"text-slate-700 text-sm\">\n            Usa a classe <code>PlayerControls</code> gerada. Lê\n            <code>Move</code> a cada frame e escuta <code>Jump/Interact</code>.\n          </p>\n          <div class=\"code-block-wrapper\">\n            <button\n              class=\"copy-code-button\"\n              onclick=\"copiarCodigo(this, 'codigo-a')\"\n            >\n              Copiar\n            </button>\n            <pre\n              class=\"bg-slate-900 text-slate-100 p-4 rounded-lg text-sm overflow-x-auto\"\n            ><code id=\"codigo-a\">using UnityEngine;\nusing UnityEngine.InputSystem;\n\n[RequireComponent(typeof(Rigidbody))]\npublic class PlayerController : MonoBehaviour\n{\n    public float moveSpeed = 5f;\n    public float jumpForce = 5f;\n\n    private Rigidbody rb;\n    private PlayerControls controls;\n    private Vector2 moveInput;\n    private bool jumpQueued;\n\n    void Awake()\n    {\n        rb = GetComponent&lt;Rigidbody&gt;();\n        controls = new PlayerControls();\n    }\n\n    void OnEnable()\n    {\n        controls.Player.Enable();\n        controls.Player.Jump.performed += OnJump;\n        controls.Player.Interact.performed += OnInteract;\n    }\n\n    void OnDisable()\n    {\n        controls.Player.Jump.performed -= OnJump;\n        controls.Player.Interact.performed -= OnInteract;\n        controls.Player.Disable();\n    }\n\n    void Update()\n    {\n        moveInput = controls.Player.Move.ReadValue&lt;Vector2&gt;();\n    }\n\n    void FixedUpdate()\n    {\n        Vector3 v = new Vector3(moveInput.x, 0f, moveInput.y) * moveSpeed;\n        rb.MovePosition(rb.position + v * Time.fixedDeltaTime);\n\n        if (jumpQueued)\n        {\n            rb.AddForce(Vector3.up * jumpForce, ForceMode.Impulse);\n            jumpQueued = false;\n        }\n    }\n\n    private void OnJump(InputAction.CallbackContext ctx)\n    {\n        if (ctx.performed) jumpQueued = true;\n    }\n\n    private void OnInteract(InputAction.CallbackContext ctx)\n    {\n        if (ctx.performed) Debug.Log(\"Interagir!\");\n    }\n}</code></pre>\n          </div>\n        </div>\n\n        <!-- Padrão B -->\n        <div class=\"bg-white p-8 rounded-lg shadow space-y-3 mb-8\">\n          <h3 class=\"text-xl font-semibold text-cyan-800\">\n            Padrão B — Componente <code>PlayerInput</code> (Send Messages)\n          </h3>\n          <p class=\"text-slate-700 text-sm\">\n            Adicione <strong>PlayerInput</strong> ao Player, arraste o asset,\n            <em>Default Map: Player</em>, <em>Behavior: Send Messages</em>.\n          </p>\n          <div class=\"code-block-wrapper\">\n            <button\n              class=\"copy-code-button\"\n              onclick=\"copiarCodigo(this, 'codigo-b')\"\n            >\n              Copiar\n            </button>\n            <pre\n              class=\"bg-slate-900 text-slate-100 p-4 rounded-lg text-sm overflow-x-auto\"\n            ><code id=\"codigo-b\">using UnityEngine;\nusing UnityEngine.InputSystem;\n\npublic class PlayerInputController : MonoBehaviour\n{\n    public float speed = 5f;\n    private Vector2 move;\n\n    public void OnMove(InputValue value) { move = value.Get&lt;Vector2&gt;(); }\n    public void OnJump(InputValue value) { if (value.isPressed) Debug.Log(\"Pulo!\"); }\n    public void OnInteract(InputValue value) { if (value.isPressed) Debug.Log(\"Interagir!\"); }\n\n    void Update()\n    {\n        Vector3 dir = new Vector3(move.x, 0f, move.y);\n        transform.Translate(dir * speed * Time.deltaTime, Space.World);\n    }\n}</code></pre>\n          </div>\n        </div>\n\n        <!-- Alternativa (do Gemini) -->\n        <div class=\"bg-white p-8 rounded-lg shadow space-y-3\">\n          <h3 class=\"text-xl font-semibold text-cyan-800\">\n            Alternativa — <code>CharacterController</code> com eventos\n            <em>performed/canceled</em>\n          </h3>\n          <p class=\"text-slate-700 text-sm\">\n            Leitura via callbacks e movimentação com\n            <code>CharacterController</code>.\n          </p>\n          <div class=\"code-block-wrapper\">\n            <button\n              class=\"copy-code-button\"\n              onclick=\"copiarCodigo(this, 'codigo-cc')\"\n            >\n              Copiar\n            </button>\n            <pre\n              class=\"bg-slate-900 text-slate-100 p-4 rounded-lg text-sm overflow-x-auto\"\n            ><code id=\"codigo-cc\">using UnityEngine;\nusing UnityEngine.InputSystem;\n\n[RequireComponent(typeof(CharacterController))]\npublic class CCPlayerController : MonoBehaviour\n{\n    private PlayerControls controls;\n    private CharacterController cc;\n    private Vector2 moveInput;\n    public float speed = 8f;\n\n    void Awake()\n    {\n        cc = GetComponent&lt;CharacterController&gt;();\n        controls = new PlayerControls();\n    }\n\n    void OnEnable()\n    {\n        controls.Player.Enable();\n        controls.Player.Move.performed += OnMovePerformed;\n        controls.Player.Move.canceled += OnMoveCanceled;\n    }\n\n    void OnDisable()\n    {\n        controls.Player.Move.performed -= OnMovePerformed;\n        controls.Player.Move.canceled -= OnMoveCanceled;\n        controls.Player.Disable();\n    }\n\n    private void OnMovePerformed(InputAction.CallbackContext ctx)\n    {\n        moveInput = ctx.ReadValue&lt;Vector2&gt;();\n    }\n\n    private void OnMoveCanceled(InputAction.CallbackContext ctx)\n    {\n        moveInput = Vector2.zero;\n    }\n\n    void Update()\n    {\n        Vector3 dir = new Vector3(moveInput.x, 0f, moveInput.y);\n        cc.Move(dir * speed * Time.deltaTime);\n    }\n}</code></pre>\n          </div>\n        </div>\n      </section>\n\n      <!-- Checklist & Debug -->\n      <section id=\"checklist\" class=\"mb-12\">\n        <h2\n          class=\"text-3xl font-semibold text-slate-800 border-b-2 border-cyan-500 pb-2 mb-8\"\n        >\n          <i class=\"fa-solid fa-list-check mr-2\"></i>Checklist de validação\n        </h2>\n        <div class=\"bg-white p-8 rounded-lg shadow space-y-4\">\n          <ul class=\"list-disc list-inside text-sm leading-7 text-slate-700\">\n            <li>\n              Pacote instalado e <em>Active Input Handling</em> configurado.\n            </li>\n            <li>\n              Asset <code>PlayerControls</code> salvo (e classe gerada, se usar\n              Padrão A).\n            </li>\n            <li>\n              Bindings de teclado e gamepad testados (<em\n                >Window &gt; Analysis &gt; Input Debugger</em\n              >).\n            </li>\n            <li>\n              <code>Enable()</code> chamado no mapa/ação (Padrão A) ou\n              <code>PlayerInput</code> ativo (Padrão B).\n            </li>\n            <li>\n              Com <code>Rigidbody</code>, mova em <code>FixedUpdate()</code>;\n              com <code>CharacterController</code>, use <code>Update()</code>.\n            </li>\n          </ul>\n          <div class=\"callout callout-warning\" role=\"note\">\n            <strong>Debug</strong>: coloque <code>Debug.Log()</code> nos\n            handlers e confira eventos no <em>Input Debugger</em>.\n          </div>\n        </div>\n      </section>\n\n      <section id=\"ui-input\" class=\"mb-12\" aria-labelledby=\"ui-input-heading\">\n        <h2\n          id=\"ui-input-heading\"\n          class=\"text-3xl font-semibold text-slate-800 border-b-2 border-cyan-500 pb-2 mb-8\"\n        >\n          <i class=\"fa-solid fa-display mr-2\"></i>Navegação de UI (Menus) com o\n          Input System\n        </h2>\n        <div class=\"bg-white p-8 rounded-lg shadow space-y-5 text-slate-700\">\n          <p>\n            Para navegar menus com teclado/mouse/gamepad, use o\n            <strong>InputSystemUIInputModule</strong> no <em>EventSystem</em> e\n            um <strong>Action Map \"UI\"</strong>.\n          </p>\n\n          <div class=\"overflow-x-auto\">\n            <table class=\"min-w-full text-left text-sm\">\n              <thead class=\"bg-cyan-50 text-cyan-800\">\n                <tr>\n                  <th class=\"p-2 font-semibold\">Action (UI)</th>\n                  <th class=\"p-2 font-semibold\">Tipo</th>\n                  <th class=\"p-2 font-semibold\">Bindings (Teclado/Mouse)</th>\n                  <th class=\"p-2 font-semibold\">Bindings (Gamepad)</th>\n                  <th class=\"p-2 font-semibold\">Uso</th>\n                </tr>\n              </thead>\n              <tbody class=\"divide-y\">\n                <tr>\n                  <td class=\"p-2 font-medium\">Navigate</td>\n                  <td class=\"p-2\">Value / Vector2</td>\n                  <td class=\"p-2\">Setas / WASD</td>\n                  <td class=\"p-2\">Left Stick / D-Pad</td>\n                  <td class=\"p-2\">Mover foco</td>\n                </tr>\n                <tr>\n                  <td class=\"p-2 font-medium\">Submit</td>\n                  <td class=\"p-2\">Button</td>\n                  <td class=\"p-2\">Enter / Space</td>\n                  <td class=\"p-2\">South Button (A/✕)</td>\n                  <td class=\"p-2\">Selecionar</td>\n                </tr>\n                <tr>\n                  <td class=\"p-2 font-medium\">Cancel</td>\n                  <td class=\"p-2\">Button</td>\n                  <td class=\"p-2\">Esc</td>\n                  <td class=\"p-2\">East Button (B/○)</td>\n                  <td class=\"p-2\">Voltar</td>\n                </tr>\n                <tr>\n                  <td class=\"p-2 font-medium\">Point</td>\n                  <td class=\"p-2\">Value / Vector2</td>\n                  <td class=\"p-2\">Mouse Position</td>\n                  <td class=\"p-2\">—</td>\n                  <td class=\"p-2\">Cursor</td>\n                </tr>\n                <tr>\n                  <td class=\"p-2 font-medium\">Click</td>\n                  <td class=\"p-2\">Button</td>\n                  <td class=\"p-2\">Left Mouse Button</td>\n                  <td class=\"p-2\">South Button (A/✕)</td>\n                  <td class=\"p-2\">Clique</td>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n\n          <ol class=\"list-decimal list-inside space-y-2 text-sm\">\n            <li>\n              Crie no asset um <strong>Action Map \"UI\"</strong> com as actions\n              acima.\n            </li>\n            <li>\n              Na cena, adicione <strong>EventSystem</strong> e troque o\n              componente de entrada para\n              <strong>Input System UI Input Module</strong>.\n            </li>\n            <li>\n              Arraste seu asset de <em>Input Actions</em> para o campo\n              <em>Actions Asset</em> e mapeie\n              <em>Point/Navigate/Submit/Cancel/Click</em>.\n            </li>\n          </ol>\n\n          <p class=\"text-slate-700\">\n            Use a ação <code>Pause</code> para alternar entre o mapa\n            <code>Player</code> (jogo) e <code>UI</code> (menu):\n          </p>\n\n          <div class=\"code-block-wrapper\">\n            <button\n              class=\"copy-code-button\"\n              onclick=\"copiarCodigo(this, 'codigo-toggle-ui')\"\n            >\n              Copiar\n            </button>\n            <pre\n              class=\"bg-slate-900 text-slate-100 p-4 rounded-lg text-sm overflow-x-auto\"\n            ><code id=\"codigo-toggle-ui\">using UnityEngine;\nusing UnityEngine.InputSystem;\n\n[RequireComponent(typeof(PlayerInput))]\npublic class ToggleUIActionMap : MonoBehaviour\n{\n    public GameObject pauseMenu; // painel Canvas do menu\n    private PlayerInput pi;\n    private bool paused;\n\n    void Awake() { pi = GetComponent&lt;PlayerInput&gt;(); }\n\n    // Vincule esta função à Action \"Pause\" (performed)\n    public void OnPause(InputValue v)\n    {\n        if (!v.isPressed) return;\n        paused = !paused;\n        pauseMenu.SetActive(paused);\n        pi.SwitchCurrentActionMap(paused ? \"UI\" : \"Player\");\n        Time.timeScale = paused ? 0f : 1f;\n    }\n}</code></pre>\n          </div>\n        </div>\n      </section>\n\n      <section\n        id=\"local-multiplayer\"\n        class=\"mb-12\"\n        aria-labelledby=\"local-mp-heading\"\n      >\n        <h2\n          id=\"local-mp-heading\"\n          class=\"text-3xl font-semibold text-slate-800 border-b-2 border-cyan-500 pb-2 mb-8\"\n        >\n          <i class=\"fa-solid fa-people-group mr-2\"></i>Multiplayer Local com\n          PlayerInputManager\n        </h2>\n        <div class=\"bg-white p-8 rounded-lg shadow space-y-5 text-slate-700\">\n          <p>\n            Permite que jogadores entrem pressionando um botão em controles\n            diferentes. Cada jogador instancia um <em>Player Prefab</em> com\n            <strong>PlayerInput</strong>.\n          </p>\n\n          <ol class=\"list-decimal list-inside space-y-2 text-sm\">\n            <li>\n              Crie um <strong>Player Prefab</strong> com\n              <code>PlayerInput</code> configurado (Default Map:\n              <code>Player</code>).\n            </li>\n            <li>\n              Na cena, adicione um objeto vazio com\n              <strong>PlayerInputManager</strong>:\n              <ul class=\"list-disc list-inside ml-4\">\n                <li>\n                  <em>Join Behavior</em>:\n                  <strong>Join Players When Button Is Pressed</strong>\n                </li>\n                <li><em>Player Prefab</em>: seu prefab do jogador</li>\n              </ul>\n            </li>\n            <li>\n              (Opcional) Adicione o script abaixo para definir posição/cor ao\n              entrar.\n            </li>\n          </ol>\n\n          <div class=\"code-block-wrapper\">\n            <button\n              class=\"copy-code-button\"\n              onclick=\"copiarCodigo(this, 'codigo-join')\"\n            >\n              Copiar\n            </button>\n            <pre\n              class=\"bg-slate-900 text-slate-100 p-4 rounded-lg text-sm overflow-x-auto\"\n            ><code id=\"codigo-join\">using UnityEngine;\nusing UnityEngine.InputSystem;\n\npublic class LocalMPSetup : MonoBehaviour\n{\n    public Transform[] spawnPoints; // arraste pontos de spawn\n    private int nextIndex = 0;\n\n    void OnEnable()\n    {\n        PlayerInputManager.instance.onPlayerJoined += OnPlayerJoined;\n    }\n\n    void OnDisable()\n    {\n        PlayerInputManager.instance.onPlayerJoined -= OnPlayerJoined;\n    }\n\n    private void OnPlayerJoined(PlayerInput player)\n    {\n        // posiciona no próximo spawn\n        if (spawnPoints != null && spawnPoints.Length &gt; 0)\n        {\n            var t = spawnPoints[nextIndex % spawnPoints.Length];\n            player.transform.SetPositionAndRotation(t.position, t.rotation);\n            nextIndex++;\n        }\n\n        // exemplo visual por jogador\n        var rend = player.GetComponentInChildren&lt;Renderer&gt;();\n        if (rend != null)\n        {\n            var c = Random.ColorHSV(0f,1f, .7f,1f, .8f,1f);\n            rend.material.color = c;\n        }\n\n        Debug.Log($\"Jogador {player.playerIndex} entrou via {player.currentControlScheme}\");\n    }\n}</code></pre>\n          </div>\n\n          <p class=\"text-sm text-slate-600\">\n            Cada jogador terá seu próprio <code>PlayerInput</code> e conjunto de\n            ações. Para UI compartilhada, mantenha um único\n            <em>EventSystem</em> com <strong>InputSystemUIInputModule</strong> e\n            esquema ativo alternado automaticamente por dispositivo.\n          </p>\n        </div>\n      </section>\n\n      <!-- Vídeos (seus IDs ajustados) -->\n      <section id=\"videos\" class=\"mb-12\" aria-labelledby=\"videos-heading\">\n        <h2\n          id=\"videos-heading\"\n          class=\"text-3xl font-semibold text-slate-800 border-b-2 border-cyan-500 pb-2 mb-8\"\n        >\n          🎬 Vídeos Recomendados\n        </h2>\n        <div class=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n          <article\n            class=\"video-card bg-white rounded-lg shadow hover:shadow-lg transition overflow-hidden\"\n          >\n            <div class=\"aspect-video\">\n              <iframe\n                src=\"https://www.youtube.com/embed/PDPI5SBOzck\"\n                title=\"Unity Input System — Overview\"\n                allowfullscreen\n                loading=\"lazy\"\n              ></iframe>\n            </div>\n            <div class=\"p-4\">\n              <h3 class=\"font-bold text-cyan-800\">\n                Input System — Visão geral\n              </h3>\n              <p class=\"text-xs text-slate-500\">\n                Ações, bindings e fluxo básico para começar.\n              </p>\n              <a\n                href=\"https://www.youtube.com/watch?v=PDPI5SBOzck\"\n                target=\"_blank\"\n                rel=\"noopener\"\n                class=\"text-cyan-700 text-xs underline\"\n                >Abrir no YouTube</a\n              >\n            </div>\n          </article>\n\n          <article\n            class=\"video-card bg-white rounded-lg shadow hover:shadow-lg transition overflow-hidden\"\n          >\n            <div class=\"aspect-video\">\n              <iframe\n                src=\"https://www.youtube.com/embed/zhi14HpKqnU\"\n                title=\"PlayerInput e Action Maps\"\n                allowfullscreen\n                loading=\"lazy\"\n              ></iframe>\n            </div>\n            <div class=\"p-4\">\n              <h3 class=\"font-bold text-cyan-800\">\n                PlayerInput + Action Maps na prática\n              </h3>\n              <p class=\"text-xs text-slate-500\">\n                Configurando o componente, eventos e múltiplos dispositivos.\n              </p>\n              <a\n                href=\"https://www.youtube.com/watch?v=zhi14HpKqnU\"\n                target=\"_blank\"\n                rel=\"noopener\"\n                class=\"text-cyan-700 text-xs underline\"\n                >Abrir no YouTube</a\n              >\n            </div>\n          </article>\n        </div>\n      </section>\n\n      <!-- TED -->\n      <section id=\"tarefa\" class=\"mb-12\" aria-labelledby=\"tarefa-heading\">\n        <h2\n          id=\"tarefa-heading\"\n          class=\"text-3xl font-semibold text-slate-800 border-b-2 border-cyan-500 pb-2 mb-4\"\n        >\n          📝 Tarefa (TED)\n        </h2>\n        <div\n          class=\"bg-white p-8 rounded-lg shadow space-y-4 text-slate-700 leading-relaxed\"\n        >\n          <p class=\"text-lg\">\n            Crie um <strong>Action Map</strong> com as ações <code>Andar</code>,\n            <code>Pular</code> e <code>Interagir</code> e integre ao seu script\n            do player.\n          </p>\n          <h4 class=\"font-semibold text-cyan-800 mt-2 mb-1\">\n            Entrega no Moodle:\n          </h4>\n          <ol class=\"list-decimal list-inside space-y-2 text-sm\">\n            <li>\n              Print do <em>Input Actions</em> mostrando o Action Map e os\n              bindings.\n            </li>\n            <li>\n              Trecho do código C# (máx. 40 linhas) que lê as ações e\n              move/interage.\n            </li>\n            <li>\n              Informe qual padrão você usou (A — classe gerada / B —\n              PlayerInput) e o porquê.\n            </li>\n          </ol>\n        </div>\n      </section>\n\n      <!-- Recursos (merge) -->\n      <section id=\"recursos\" class=\"mb-12\" aria-labelledby=\"recursos-heading\">\n        <h2\n          id=\"recursos-heading\"\n          class=\"text-3xl font-semibold text-slate-800 border-b-2 border-cyan-500 pb-2 mb-4\"\n        >\n          📚 Recursos\n        </h2>\n        <div\n          class=\"bg-white p-8 rounded-lg shadow grid grid-cols-1 md:grid-cols-2 gap-8\"\n        >\n          <div>\n            <h4 class=\"font-bold text-cyan-800 mb-2\">Documentação</h4>\n            <ul class=\"text-sm space-y-2\">\n              <li>\n                <a\n                  class=\"text-cyan-700 hover:underline\"\n                  target=\"_blank\"\n                  rel=\"noopener\"\n                  href=\"https://docs.unity3d.com/Packages/com.unity.inputsystem@latest\"\n                  >Manual do Input System (Unity)</a\n                >\n              </li>\n              <li>\n                <a\n                  class=\"text-cyan-700 hover:underline\"\n                  target=\"_blank\"\n                  rel=\"noopener\"\n                  href=\"https://docs.unity3d.com/Packages/com.unity.inputsystem@latest/manual/PlayerInput.html\"\n                  >Componente PlayerInput</a\n                >\n              </li>\n              <li>\n                <a\n                  class=\"text-cyan-700 hover:underline\"\n                  target=\"_blank\"\n                  rel=\"noopener\"\n                  href=\"https://learn.unity.com/tutorial/using-the-input-system\"\n                  >Unity Learn: Using the Input System</a\n                >\n              </li>\n              <li>\n                <a\n                  class=\"text-cyan-700 hover:underline\"\n                  target=\"_blank\"\n                  rel=\"noopener\"\n                  href=\"https://learn.microsoft.com/pt-br/dotnet/csharp/\"\n                  >C# – Documentação (Microsoft)</a\n                >\n              </li>\n            </ul>\n          </div>\n          <div>\n            <h4 class=\"font-bold text-cyan-800 mb-2\">\n              Leituras complementares\n            </h4>\n            <ul class=\"text-sm space-y-2\">\n              <li>\n                ALVES, W. P. <em>Unity: design e desenvolvimento de jogos</em>.\n                Alta Books, 2019.\n              </li>\n              <li>\n                ALVES, George S.\n                <em>Projeto de jogos 3D: modelagem e programação</em>. Platos,\n                2021.\n              </li>\n              <li>\n                (Material IMD) <em>Entradas do jogador e movimento</em> —\n                apostila do curso.\n              </li>\n            </ul>\n          </div>\n        </div>\n      </section>\n\n      <!-- Bibliografia -->\n      <section\n        id=\"bibliografia\"\n        class=\"mb-12\"\n        aria-labelledby=\"bibliografia-heading\"\n      >\n        <h2\n          id=\"bibliografia-heading\"\n          class=\"text-3xl font-semibold text-slate-800 border-b-2 border-cyan-500 pb-2 mb-4\"\n        >\n          📚 Bibliografia\n        </h2>\n        <div\n          class=\"bg-white p-8 rounded-lg shadow space-y-3 text-slate-700 leading-relaxed\"\n        >\n          <p>\n            ALVES, W. P.\n            <strong>Unity: design e desenvolvimento de jogos.</strong> Rio de\n            Janeiro: Alta Books, 2019.\n          </p>\n          <p>\n            ALVES, George Santiago.\n            <strong>Projeto de jogos 3D: modelagem e programação.</strong> São\n            Paulo: Platos, 2021.\n          </p>\n        </div>\n      </section>\n    </main>\n\n    <!-- Footer -->\n    <footer class=\"bg-slate-800 text-white mt-12\" role=\"contentinfo\">\n      <div class=\"container mx-auto px-6 py-6 text-center\">\n        <p>\n          &copy; 2025 - Tecnologia e Desenvolvimento de Jogos Digitais |\n          Semestre 2025.2\n        </p>\n        <p class=\"text-sm text-slate-400\">\n          Material desenvolvido para os cursos de ADS e SI da UniChristus.\n        </p>\n        <div class=\"mt-4\">\n          <a href=\"#\" class=\"text-cyan-400 hover:underline text-sm\"\n            >Acessar Moodle</a\n          >\n          <span class=\"text-slate-500 mx-2\">|</span>\n          <a href=\"#\" class=\"text-cyan-400 hover:underline text-sm\"\n            >Política de Uso</a\n          >\n        </div>\n      </div>\n    </footer>\n\n    <!-- Util: copiar código -->\n    <script>\n      function copiarCodigo(button, elementId) {\n        const code = document.getElementById(elementId)?.innerText || \"\";\n        const ta = document.createElement(\"textarea\");\n        ta.value = code;\n        ta.style.position = \"fixed\";\n        ta.style.opacity = \"0\";\n        document.body.appendChild(ta);\n        ta.focus();\n        ta.select();\n        try {\n          document.execCommand(\"copy\");\n          button.innerText = \"Copiado!\";\n        } catch {\n          button.innerText = \"Erro!\";\n        }\n        document.body.removeChild(ta);\n        setTimeout(() => (button.innerText = \"Copiar\"), 2000);\n      }\n    </script>\n  </body>\n</html>\n"
    }
  ]
}