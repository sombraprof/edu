{
  "id": "lesson13",
  "title": "Condi√ß√µes Compostas e Encadeadas",
  "objective": "Formular condi√ß√µes compostas e organizar decis√µes m√∫ltiplas, escrevendo programas claros e corretos para cen√°rios pr√°ticos.",
  "content": [
    {
      "type": "lessonPlan",
      "title": "Plano da Aula",
      "cards": [
        {
          "icon": "book-open",
          "title": "CONTE√öDO",
          "content": "Operadores l√≥gicos (<code>&&</code>, <code>||</code>, <code>!</code>) e encadeamento de decis√µes com <code>if</code>, <code>else if</code> e <code>else</code>."
        },
        {
          "icon": "bullseye",
          "title": "OBJETIVO",
          "content": "Formular condi√ß√µes compostas e organizar decis√µes m√∫ltiplas, escrevendo programas claros e corretos para cen√°rios pr√°ticos."
        },
        {
          "icon": "gears",
          "title": "METODOLOGIA",
          "content": "Exposi√ß√£o dialogada com exemplos guiados e pr√°tica em pequenos problemas de valida√ß√£o e classifica√ß√£o."
        }
      ]
    },
    {
      "type": "contentBlock",
      "title": "Por que combinar condi√ß√µes?",
      "content": [
        {
          "type": "paragraph",
          "text": "Muitos problemas n√£o cabem numa √∫nica compara√ß√£o. Precisamos verificar intervalos, faixas v√°lidas ou exclus√µes. √â a√≠ que entram os operadores l√≥gicos: <code>&&</code> (E), <code>||</code> (OU) e <code>!</code> (N√ÉO)."
        },
        {
          "type": "paragraph",
          "text": "Com eles, constru√≠mos regras como \"entre A e B\" (<code>a >= A && a <= B</code>) ou \"fora do intervalo\" (<code>a < A || a > B</code>), e combinamos com uma cadeia <code>if</code>/<code>else if</code>."
        }
      ]
    },
    {
      "type": "contentBlock",
      "title": "Exemplo: Valida√ß√£o de Intervalo",
      "content": [
        {
          "type": "paragraph",
          "text": "Verificando se uma nota est√° no intervalo v√°lido [0, 10]."
        },
        {
          "type": "code",
          "language": "c",
          "code": "#include <stdio.h>\n\nint main() {\n    float nota;\n    printf(\"Digite a nota (0 a 10): \");\n    scanf(\"%f\", &nota);\n\n    if (nota >= 0 && nota <= 10) {\n        printf(\"Nota valida!\\n\");\n    } else {\n        printf(\"Nota invalida.\\n\");\n    }\n    return 0;\n}\n"
        }
      ]
    },
    {
      "type": "contentBlock",
      "title": "Exemplo: Faixas Encadeadas com else if",
      "content": [
        {
          "type": "paragraph",
          "text": "Classificando a m√©dia em conceitos: A (‚â• 9), B (‚â• 7), C (‚â• 5), D (< 5)."
        },
        {
          "type": "code",
          "language": "c",
          "code": "#include <stdio.h>\n\nint main() {\n    float media;\n    printf(\"Media do aluno: \");\n    scanf(\"%f\", &media);\n\n    if (media >= 9.0) {\n        printf(\"Conceito A\\n\");\n    } else if (media >= 7.0) {\n        printf(\"Conceito B\\n\");\n    } else if (media >= 5.0) {\n        printf(\"Conceito C\\n\");\n    } else {\n        printf(\"Conceito D\\n\");\n    }\n    return 0;\n}\n"
        }
      ]
    },
    {
      "type": "contentBlock",
      "title": "Exemplo: Combina√ß√µes com OU (||) e N√ÉO (!)",
      "content": [
        {
          "type": "paragraph",
          "text": "Verificando elegibilidade para desconto: estudante OU idoso, e com cadastro ativo."
        },
        {
          "type": "code",
          "language": "c",
          "code": "#include <stdio.h>\n\nint main() {\n    int estudante, idoso, cadastroAtivo;\n    printf(\"Eh estudante? (1=sim,0=nao): \");\n    scanf(\"%d\", &estudante);\n    printf(\"Eh idoso? (1=sim,0=nao): \");\n    scanf(\"%d\", &idoso);\n    printf(\"Cadastro ativo? (1=sim,0=nao): \");\n    scanf(\"%d\", &cadastroAtivo);\n\n    if ((estudante == 1 || idoso == 1) && cadastroAtivo == 1) {\n        printf(\"Tem direito a desconto.\\n\");\n    } else {\n        printf(\"Nao tem direito a desconto.\\n\");\n    }\n\n    // Exemplo de negacao\n    if (!cadastroAtivo) {\n        printf(\"Ative seu cadastro para beneficios.\\n\");\n    }\n    return 0;\n}\n"
        }
      ]
    },
    {
      "type": "contentBlock",
      "title": "Atividade R√°pida",
      "content": [
        {
          "type": "paragraph",
          "text": "Em duplas, escrevam um programa que leia idade e renda mensal e determine se a pessoa se qualifica para um benef√≠cio com as regras:"
        },
        {
          "type": "html",
          "html": "<ul class=\"list-disc list-inside mb-4\"><li>Idade ‚â• 60 OU (idade ‚â• 18 E renda ‚â§ 2 sal√°rios m√≠nimos).</li><li>Cadastro deve estar ativo.</li></ul><p>Imprima \"Eleg√≠vel\" ou \"N√£o eleg√≠vel\".</p>"
        }
      ]
    },
    {
      "type": "callout",
      "variant": "info",
      "title": "Pr√≥ximos Passos e Tarefa (TED)",
      "content": "<h4>Tarefa para a pr√≥xima aula</h4><ol class=\"list-decimal list-inside space-y-3 font-semibold\"><li>Crie um programa em C chamado <code>aula13_validacao_login.c</code>.</li><li>Leia tr√™s valores: <em>usuarioAtivo</em> (0/1), <em>tentativas</em> (int) e <em>bloqueado</em> (0/1).</li><li>Regras: s√≥ permite acesso se <code>usuarioAtivo == 1</code>, <code>tentativas < 3</code> e <code>!bloqueado</code>.</li><li>Imprima \"Acesso permitido\" ou \"Acesso negado\".</li><li>Publique o arquivo <code>.c</code> na atividade \"Aula 13\" no Moodle.</li></ol>"
    },
    {
      "type": "contentBlock",
      "title": "üíª √Årea de Testes Interativa",
      "content": [
        {
          "type": "paragraph",
          "text": "Abra o editor OnlineGDB em uma nova aba para compilar e executar seus programas em C."
        },
        {
          "type": "html",
          "html": "<a href=\"https://www.onlinegdb.com/online_c_compiler\" target=\"_blank\" rel=\"\" class=\"btn btn-tonal\">Abrir OnlineGDB</a>"
        },
        {
          "type": "paragraph",
          "text": "üí° <strong>Dica:</strong> Escreva, compile e execute seu programa em C diretamente nesta p√°gina. Use este espa√ßo para testar a tarefa da Aula 13 ou criar novos experimentos com operadores."
        }
      ]
    },
    {
      "type": "videos",
      "title": "üé• V√≠deos de Apoio",
      "videos": [
        {
          "title": "Operadores l√≥gicos (&&, ||, !) em C",
          "src": "https://www.youtube-nocookie.com/embed/LpVDGm-FT78"
        },
        {
          "title": "Cadeias if / else if / else",
          "src": "https://www.youtube-nocookie.com/embed/JBFgiNJevqc"
        }
      ]
    },
    {
      "type": "checklist",
      "title": "‚úÖ Ao final desta aula voc√™ deve ser capaz de:",
      "items": [
        "Escrever condi√ß√µes com <code>&&</code>, <code>||</code> e <code>!</code>.",
        "Construir cadeias <code>if</code>/<code>else if</code>/<code>else</code> sem sobreposi√ß√£o de casos.",
        "Validar entradas com intervalos e restri√ß√µes m√∫ltiplas."
      ]
    },
    {
      "type": "bibliography",
      "title": "üìö Bibliografia de Apoio",
      "items": [
        "<strong>BACKES, Andr√©.</strong> <em>Linguagem C: completa e descomplicada.</em> Rio de Janeiro: Elsevier, 2019.",
        "<strong>MANZANO, Jos√© Augusto N.G.; OLIVEIRA, Jayr Figueiredo.</strong> <em>Algoritmos: l√≥gica para desenvolvimento de programa√ß√£o de computadores.</em> S√£o Paulo: √ârica, 2019."
      ]
    }
  ]
}