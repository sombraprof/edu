{
  "id": "lesson7",
  "title": "Aula 7: Operadores e Expressões em C",
  "objective": "Aprendendo a realizar cálculos, comparações e a tomar decisões lógicas.",
  "content": [
    {
      "type": "lessonPlan",
      "title": "Plano da Aula",
      "cards": [
        {
          "icon": "book-open",
          "title": "CONTEÚDO",
          "content": "Operadores aritméticos, relacionais, lógicos, de atribuição e unários. Precedência de operadores e uso de parênteses."
        },
        {
          "icon": "bullseye",
          "title": "OBJETIVO",
          "content": "Identificar e aplicar corretamente os operadores em C, compreendendo o impacto da precedência e boas práticas na criação de expressões."
        },
        {
          "icon": "gears",
          "title": "METODOLOGIA",
          "content": "Aula expositiva dialogada com exemplos práticos, seguida de atividade colaborativa em duplas e TED postada no Moodle."
        }
      ]
    },
    {
      "type": "flightPlan",
      "title": "Plano de Voo da Aula de Hoje",
      "items": [
        "Introdução aos operadores em C: a base para o processamento de dados.",
        "Operadores Aritméticos: realizando cálculos matemáticos.",
        "Operadores Relacionais: fazendo comparações.",
        "Operadores Lógicos: combinando condições.",
        "Operadores de Atribuição e Unários: simplificando o código.",
        "A regra mais importante: Precedência de Operadores.",
        "Atividade prática em duplas: cálculo de média ponderada.",
        "Apresentação da tarefa (TED) da Aula 7."
      ]
    },
    {
      "type": "contentBlock",
      "title": "O Papel dos Operadores",
      "content": [
        {
          "type": "paragraph",
          "text": "Se pensarmos no fluxo de um programa como <strong>Entrada → Processamento → Saída</strong>, os operadores são o coração do <strong>Processamento</strong>. São eles que nos permitem pegar os dados de entrada, transformá-los, combiná-los e tomar decisões para, no fim, gerar uma saída útil."
        },
        {
          "type": "paragraph",
          "text": "Dominar os operadores é o primeiro passo para dar \"inteligência\" e funcionalidade aos nossos programas."
        }
      ]
    },
    {
      "type": "contentBlock",
      "title": "Operadores Aritméticos",
      "content": [
        {
          "type": "paragraph",
          "text": "São os símbolos que usamos para realizar as operações matemáticas básicas."
        },
        {
          "type": "component",
          "component": "Md3Table",
          "props": {
            "headers": [
              "Operador",
              "Descrição",
              "Exemplo"
            ],
            "rows": [
              [
                {
                  "value": "+",
                  "mono": true
                },
                {
                  "value": "Adição"
                },
                {
                  "value": "5 + 3 // resulta em 8",
                  "code": true
                }
              ],
              [
                {
                  "value": "-",
                  "mono": true
                },
                {
                  "value": "Subtração"
                },
                {
                  "value": "5 - 3 // resulta em 2",
                  "code": true
                }
              ],
              [
                {
                  "value": "*",
                  "mono": true
                },
                {
                  "value": "Multiplicação"
                },
                {
                  "value": "5 * 3 // resulta em 15",
                  "code": true
                }
              ],
              [
                {
                  "value": "/",
                  "mono": true
                },
                {
                  "value": "Divisão"
                },
                {
                  "value": "10 / 2 // resulta em 5",
                  "code": true
                }
              ],
              [
                {
                  "value": "%",
                  "mono": true
                },
                {
                  "value": "Módulo (resto da divisão inteira)"
                },
                {
                  "value": "10 % 3 // resulta em 1",
                  "code": true
                }
              ]
            ]
          }
        },
        {
          "type": "callout",
          "variant": "good-practice",
          "title": "Cuidado com a Divisão de Inteiros!",
          "content": "<p>Em C, a divisão de dois números inteiros resulta sempre num número inteiro (a parte decimal é truncada). Por exemplo, <code>5 / 2</code> resulta em <code class=\"inline-code\">2</code>, e não <code class=\"inline-code\">2.5</code>. Para obter o resultado decimal, pelo menos um dos números deve ser do tipo <code class=\"inline-code\">float</code> ou <code class=\"inline-code\">double</code>: <code>5.0 / 2</code> resulta em <code class=\"inline-code\">2.5</code>.</p>"
        }
      ]
    },
    {
      "type": "contentBlock",
      "title": "Operadores Relacionais",
      "content": [
        {
          "type": "paragraph",
          "text": "São usados para comparar dois valores. O resultado de uma comparação é sempre um valor booleano: <strong>verdadeiro</strong> (representado por <code class=\"inline-code\">1</code> em C) ou <strong>falso</strong> (representado por <code class=\"inline-code\">0</code>)."
        },
        {
          "type": "component",
          "component": "Md3Table",
          "props": {
            "headers": [
              "Operador",
              "Descrição",
              "Exemplo"
            ],
            "rows": [
              [
                {
                  "value": "==",
                  "mono": true
                },
                {
                  "value": "Igual a"
                },
                {
                  "value": "5 == 5 // resulta em 1 (verdadeiro)",
                  "code": true
                }
              ],
              [
                {
                  "value": "!=",
                  "mono": true
                },
                {
                  "value": "Diferente de"
                },
                {
                  "value": "5 != 3 // resulta em 1 (verdadeiro)",
                  "code": true
                }
              ],
              [
                {
                  "value": ">",
                  "mono": true
                },
                {
                  "value": "Maior que"
                },
                {
                  "value": "5 > 3 // resulta em 1 (verdadeiro)",
                  "code": true
                }
              ],
              [
                {
                  "value": "<",
                  "mono": true
                },
                {
                  "value": "Menor que"
                },
                {
                  "value": "5 < 3 // resulta em 0 (falso)",
                  "code": true
                }
              ],
              [
                {
                  "value": ">=",
                  "mono": true
                },
                {
                  "value": "Maior ou igual a"
                },
                {
                  "value": "5 >= 5 // resulta em 1 (verdadeiro)",
                  "code": true
                }
              ],
              [
                {
                  "value": "<=",
                  "mono": true
                },
                {
                  "value": "Menor ou igual a"
                },
                {
                  "value": "5 <= 3 // resulta em 0 (falso)",
                  "code": true
                }
              ]
            ]
          }
        }
      ]
    },
    {
      "type": "contentBlock",
      "title": "Operadores Lógicos",
      "content": [
        {
          "type": "paragraph",
          "text": "Permitem-nos combinar múltiplas condições para criar decisões mais complexas."
        },
        {
          "type": "component",
          "component": "Md3Table",
          "props": {
            "headers": [
              "Operador",
              "Nome Lógico",
              "Exemplo"
            ],
            "rows": [
              [
                {
                  "value": "&&",
                  "mono": true
                },
                {
                  "value": "E (AND)"
                },
                {
                  "value": "(idade >= 18 && temCarta == 1)",
                  "code": true
                }
              ],
              [
                {
                  "value": "||",
                  "mono": true
                },
                {
                  "value": "OU (OR)"
                },
                {
                  "value": "(dia == 6 || dia == 7) // Sábado ou Domingo",
                  "code": true
                }
              ],
              [
                {
                  "value": "!",
                  "mono": true
                },
                {
                  "value": "NÃO (NOT)"
                },
                {
                  "value": "!(idade >= 18) // Verdadeiro se a idade NÃO for maior ou igual a 18",
                  "code": true
                }
              ]
            ]
          }
        }
      ]
    },
    {
      "type": "contentBlock",
      "title": "Precedência de Operadores",
      "content": [
        {
          "type": "paragraph",
          "text": "Quando temos uma expressão complexa como <code>5 + 3 * 2</code>, qual operação é feita primeiro? A linguagem C segue uma ordem de precedência, muito similar à da matemática."
        },
        {
          "type": "html",
          "html": "<ol class=\"list-decimal list-inside space-y-2 mt-4 font-semibold\"><li>Parênteses <code>()</code> (maior prioridade)</li><li>Operadores Aritméticos de Multiplicação e Divisão (<code>* / %</code>)</li><li>Operadores Aritméticos de Adição e Subtração (<code>+ -</code>)</li><li>Operadores Relacionais (<code>> < == !=</code> etc.)</li><li>Operadores Lógicos (<code>&&</code> e depois <code>||</code>) (menor prioridade)</li></ol>"
        },
        {
          "type": "callout",
          "variant": "good-practice",
          "title": "Boa Prática: Use Parênteses!",
          "content": "<p>Mesmo que saiba a ordem de precedência, use parênteses para agrupar as suas expressões. Isto torna o código muito mais fácil de ler e entender, tanto para si como para outros programadores, e evita erros lógicos difíceis de encontrar.</p>"
        }
      ]
    },
    {
      "type": "contentBlock",
      "title": "Atividade Prática em Duplas",
      "content": [
        {
          "type": "paragraph",
          "text": "Em duplas, vamos criar um programa que calcula a média ponderada de três notas. A fórmula é: <code class=\"inline-code\">Media = (Nota1 * Peso1 + Nota2 * Peso2 + Nota3 * Peso3) / (Peso1 + Peso2 + Peso3)</code>."
        },
        {
          "type": "html",
          "html": "<ol class=\"list-decimal list-inside space-y-4 mt-4\"><li>Declarem variáveis <code class=\"inline-code\">float</code> para as 3 notas e 3 pesos.</li><li>Peçam ao utilizador para inserir as notas e os pesos.</li><li>Calculem a média ponderada numa variável <code class=\"inline-code\">float</code> chamada <code class=\"inline-code\">mediaPonderada</code>. Usem parênteses para garantir a ordem correta dos cálculos!</li><li>Exibam o resultado de forma clara, mostrando as notas, os pesos e a média final.</li></ol>"
        }
      ]
    },
    {
      "type": "callout",
      "variant": "info",
      "title": "Próximos Passos e Tarefa (TED)",
      "content": "<h4>Objetivo da Tarefa</h4><p class=\"mb-4 leading-relaxed\">Consolidar o entendimento sobre operadores aritméticos, relacionais e lógicos em C, praticando <strong>precedência de operações</strong> e a <strong>formatação detalhada da saída</strong> no console. Esta atividade reforça a importância de escrever código legível e explicativo.</p><h4 class=\"font-bold text-title-large mt-6 mb-4\">Instruções</h4><ol class=\"list-decimal list-inside space-y-3 font-semibold\"><li>Elabore um programa em <code class=\"inline-code\">C</code> que calcule a <strong>média ponderada</strong> de três notas com pesos diferentes. Você pode reutilizar os valores usados em aula ou criar novos.</li><li>A saída deve ser <strong>autoexplicativa</strong>, mostrando o cálculo completo no <code class=\"inline-code\">printf</code>, por exemplo:<br /><code class=\"inline-code\">(Nota1 * Peso1 + Nota2 * Peso2 + Nota3 * Peso3) / (Peso1 + Peso2 + Peso3) = Resultado</code></li><li>Utilize <strong>parênteses</strong> para deixar clara a ordem das operações e evitar ambiguidades.</li><li>Comente o código explicando o papel de cada variável e a lógica aplicada. Isso ajudará a fixar os conceitos de forma mais profunda.</li><li>Salve o arquivo como <code class=\"inline-code\">aula7_media_ponderada.c</code> e poste o código na Atividade \"Aula 7\" no Moodle.</li></ol><div class=\"mt-6\"><a class=\"btn btn-tonal inline-flex items-center gap-2\" href=\"https://eadsp.unichristus.edu.br\" target=\"_blank\" rel=\"noopener noreferrer\"><span>Acessar Moodle</span></a></div><div class=\"mt-8 style=\"background-color: var(--md-sys-color-primary-container);\" text-primary-900 p-4 rounded-2xl\"><h5 class=\"font-bold mb-2\"><i class=\"fa-solid fa-lightbulb mr-2\"></i>Dica Extra</h5><p class=\"text-body-small leading-relaxed\">Teste seu programa com diferentes combinações de notas e pesos, incluindo valores fracionários (ex.: <code class=\"inline-code\">8.5</code>) e pesos variados. Isso garantirá que seu código funciona para diversos cenários e que você entendeu bem o uso de <code class=\"inline-code\">float</code> e <code class=\"inline-code\">double</code>.</p></div>"
    },
    {
      "type": "contentBlock",
      "title": "💻 Área de Testes Interativa",
      "content": [
        {
          "type": "paragraph",
          "text": "Abra o editor OnlineGDB em uma nova aba para compilar e executar seus programas em C."
        },
        {
          "type": "html",
          "html": "<a href=\"https://www.onlinegdb.com/online_c_compiler\" target=\"_blank\" rel=\"\" class=\"btn btn-tonal\">Abrir OnlineGDB</a>"
        },
        {
          "type": "paragraph",
          "text": "💡 <strong>Dica:</strong> Escreva, compile e execute seu programa em C diretamente nesta página. Use este espaço para testar a tarefa da Aula 7 ou criar novos experimentos com operadores."
        }
      ]
    },
    {
      "type": "videos",
      "title": "🎥 Vídeos de Apoio",
      "videos": [
        {
          "title": "Operadores em C (Introdução à Linguagem C)",
          "src": "https://www.youtube.com/embed/nkZxJomZYoo"
        },
        {
          "title": "Precedência de Operadores em C (Responde em Códigos)",
          "src": "https://www.youtube.com/embed/42A4aZvnsX0"
        }
      ]
    },
    {
      "type": "checklist",
      "title": "✅ Ao final desta aula você deve ser capaz de:",
      "items": [
        "Explicar o papel dos operadores no processamento.",
        "Usar operadores aritméticos, relacionais e lógicos.",
        "Aplicar precedência e parênteses corretamente.",
        "Criar código com saída explicativa."
      ]
    },
    {
      "type": "bibliography",
      "title": "📚 Bibliografia de Apoio",
      "items": [
        "<strong>BACKES, André.</strong> <em>Linguagem C: completa e descomplicada.</em> 2. ed. São Paulo: Novatec, 2020.",
        "<strong>SANTOS, Marcelo Gonçalves dos.</strong> <em>Linguagem de Programação.</em> São Paulo: Pearson, 2018.",
        "<strong>KERIGHAN, Brian; RITCHIE, Dennis.</strong> <em>A Linguagem de Programação C.</em> 2. ed. LTC, 2018."
      ]
    }
  ]
}